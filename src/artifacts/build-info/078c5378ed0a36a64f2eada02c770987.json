{"id":"078c5378ed0a36a64f2eada02c770987","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MockSpender.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IERC20 {\n    function approve(address spender, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n}\n\ninterface IERC721 {\n    function setApprovalForAll(address operator, bool approved) external;\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\ninterface IERC1155 {\n    function setApprovalForAll(address operator, bool approved) external;\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\ncontract MockSpender {\n    address public owner;\n\n    event ERC20Approved(address indexed token, address indexed owner, uint256 amount);\n    event ERC721Approved(address indexed nft, address indexed owner, bool approved);\n    event ERC1155Approved(address indexed nft, address indexed owner, bool approved);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    // Function to approve ERC-20 token spending\n    function approveERC20(address token, address spender, uint256 amount) external {\n        require(token != address(0) && spender != address(0), \"Invalid address\");\n        IERC20(token).approve(spender, amount);\n        emit ERC20Approved(token, msg.sender, amount);\n    }\n\n    // Function to check ERC-20 allowance\n    function checkERC20Allowance(address token, address spender) external view returns (uint256) {\n        return IERC20(token).allowance(msg.sender, spender);\n    }\n\n    // Function to set ERC-721 approval\n    function approveERC721(address nft, address operator, bool approved) external {\n        require(nft != address(0) && operator != address(0), \"Invalid address\");\n        IERC721(nft).setApprovalForAll(operator, approved);\n        emit ERC721Approved(nft, msg.sender, approved);\n    }\n\n    // Function to check if ERC-721 is approved\n    function checkERC721Approval(address nft, address operator) external view returns (bool) {\n        return IERC721(nft).isApprovedForAll(msg.sender, operator);\n    }\n\n    // Function to set ERC-1155 approval\n    function approveERC1155(address nft, address operator, bool approved) external {\n        require(nft != address(0) && operator != address(0), \"Invalid address\");\n        IERC1155(nft).setApprovalForAll(operator, approved);\n        emit ERC1155Approved(nft, msg.sender, approved);\n    }\n\n    // Function to check if ERC-1155 is approved\n    function checkERC1155Approval(address nft, address operator) external view returns (bool) {\n        return IERC1155(nft).isApprovedForAll(msg.sender, operator);\n    }\n}\n\n"},"contracts/TestERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TestERC1155 is ERC1155, Ownable {\n    constructor(address initialOwner) ERC1155(\"https://api.example.com/metadata/{id}.json\") Ownable(initialOwner) {\n        _mint(initialOwner, 1, 100, \"\"); // Mint 100 units of token ID 1\n        _mint(initialOwner, 2, 50, \"\");  // Mint 50 units of token ID 2\n    }\n\n    function mint(address to, uint256 id, uint256 amount) external onlyOwner {\n        _mint(to, id, amount, \"\");\n    }\n}"},"contracts/TestNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract TestNFT is ERC721 {\n    constructor() ERC721(\"TestNFT\", \"TNFT\") {\n        _mint(msg.sender, 1);\n        _mint(msg.sender, 2);\n        _mint(msg.sender, 3);\n    }\n\n    /**\n     * @dev Explicitly override OpenZeppelin's function to ensure ABI includes it.\n     */\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\n        return super.isApprovedForAll(owner, operator);\n    }\n\n    /**\n     * @dev Allows the owner to batch revoke approvals for multiple token IDs.\n     */\n    function batchRevokeApprovals(uint256[] memory tokenIds) external {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(ownerOf(tokenIds[i]) == msg.sender, \"Not owner of token\");\n            approve(address(0), tokenIds[i]); // ✅ Revoke approval by setting it to Zero Address\n        }\n    }\n}\n\n"},"contracts/TestToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20 {\n    address public owner;\n\n    constructor(string memory name, string memory symbol, uint8 decimals) ERC20(name, symbol) {\n        owner = msg.sender;\n        _mint(msg.sender, 1000000 * 10**decimals); // Initial mint to deployer\n    }\n\n    // 🔥 Allow only the owner to mint new tokens\n    function mint(address to, uint256 amount) external {\n        require(msg.sender == owner, \"Not authorized\");\n        _mint(to, amount);\n    }\n\n    function approve(address spender, uint256 amount) public override returns (bool) {\n    _approve(msg.sender, spender, amount);\n    return true;\n}\n\n}\n\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4292],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":4293,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4292,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,4292],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[4230],"Context":[4292],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[5822],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[5834]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4293,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":5823,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4231,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4292,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5822,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,5822,5834,4292],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4230,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4230,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5821,5833],"body":{"id":375,"nodeType":"Block","src":"1486:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1515:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1535:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1530:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1572:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1592:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1587:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1640:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"1640:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1496:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1454:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5822,"src":"1454:6:2"},{"id":351,"name":"IERC165","nameLocations":["1462:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"1462:7:2"}],"src":"1445:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1480:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:2"},"scope":1201,"src":"1378:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2157:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2174:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2167:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1689:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2095:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2142:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:2"},"scope":1201,"src":"2082:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2331:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2348:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2358:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2362:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2341:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2191:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2272:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2264:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2289:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2281:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2322:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:2"},"scope":1201,"src":"2245:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2676:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2690:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:2","memberName":"length","nodeType":"MemberAccess","src":"2690:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2709:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:2","memberName":"length","nodeType":"MemberAccess","src":"2709:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2686:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2721:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2768:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:2","memberName":"length","nodeType":"MemberAccess","src":"2768:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2780:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:2","memberName":"length","nodeType":"MemberAccess","src":"2780:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2742:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2735:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2817:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2817:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2864:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:2","memberName":"length","nodeType":"MemberAccess","src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2854:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2937:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2951:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3008:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2980:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4170,"src":"2980:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3035:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3012:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"3012:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2970:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2951:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2911:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2915:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:2","memberName":"length","nodeType":"MemberAccess","src":"2915:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2904:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:2"},"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2932:3:2"},"nodeType":"ForStatement","src":"2891:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3066:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3059:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2383:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2567:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2619:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2602:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2602:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2658:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2658:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:2"},"scope":1201,"src":"2534:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3229:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3258:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3272:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3282:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3239:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3239:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3092:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3189:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3181:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3204:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3229:0:2"},"scope":1201,"src":"3154:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3461:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3478:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3497:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3506:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3471:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3304:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3399:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3416:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3455:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:2"},"scope":1201,"src":"3365:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3702:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3720:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3712:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3729:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3791:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3797:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3774:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3751:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3806:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3864:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3827:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3820:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3913:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3917:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3928:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3889:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3889:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3528:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3623:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3615:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3637:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3629:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3649:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3641:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3661:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3681:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3668:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3702:0:2"},"scope":1201,"src":"3589:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4196:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4214:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4206:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4249:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4257:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4291:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4268:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4245:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4300:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4321:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4314:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4412:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4416:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4421:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4429:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4383:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4383:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3946:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4060:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4052:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4082:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4074:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4111:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4094:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4094:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4141:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4124:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4124:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4170:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4157:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4196:0:2"},"scope":1201,"src":"4012:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5249:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5263:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:2","memberName":"length","nodeType":"MemberAccess","src":"5263:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5277:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:2","memberName":"length","nodeType":"MemberAccess","src":"5277:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5259:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5292:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5339:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:2","memberName":"length","nodeType":"MemberAccess","src":"5339:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:2","memberName":"length","nodeType":"MemberAccess","src":"5351:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5313:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5306:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5394:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"5405:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5469:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5491:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5483:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5519:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5496:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"5496:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5543:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5535:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"5551:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5598:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5594:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5618:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5636:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5658:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5668:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5672:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5699:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5695:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5720:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5776:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5782:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5795:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5802:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5749:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5742:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5841:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5940:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5950:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5954:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5962:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5976:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5940:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6032:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6028:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6050:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6068:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6078:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6082:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6068:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5452:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:2","memberName":"length","nodeType":"MemberAccess","src":"5452:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5441:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5433:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:2"},"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5466:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5464:3:2"},"nodeType":"ForStatement","src":"5428:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6133:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:2","memberName":"length","nodeType":"MemberAccess","src":"6133:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6341:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6374:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6390:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6394:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6399:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6360:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6355:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6129:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6150:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6172:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6164:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6177:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"6177:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6224:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6232:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"6232:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6294:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6304:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6310:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6318:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6279:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6274:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4447:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5167:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5159:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5181:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5173:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5202:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5185:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5207:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5207:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5249:0:2"},"scope":1201,"src":"5142:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7193:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7217:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7203:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7203:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7243:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7265:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7287:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7279:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7298:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7328:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:2","memberName":"length","nodeType":"MemberAccess","src":"7328:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7574:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7633:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7643:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7653:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7658:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7666:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7592:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7592:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7592:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7324:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7345:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7371:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7363:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7376:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"7376:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7427:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7435:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"7435:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7517:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7537:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7481:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7481:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7481:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6429:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7055:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7047:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7077:2:2","nodeType":"VariableDeclaration","scope":830,"src":"7069:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7106:3:2","nodeType":"VariableDeclaration","scope":830,"src":"7089:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7136:6:2","nodeType":"VariableDeclaration","scope":830,"src":"7119:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7119:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7165:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7193:0:2"},"scope":1201,"src":"7002:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8267:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8281:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8277:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8299:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8320:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"8313:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8374:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8398:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8419:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"RevertStatement","src":"8412:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8489:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8472:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8472:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8511:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8494:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8494:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8540:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8521:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8587:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8593:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8597:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8602:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8610:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8560:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8560:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7708:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8194:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8186:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8208:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8200:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8220:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8212:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8232:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8224:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8252:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8267:0:2"},"scope":1201,"src":"8159:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9202:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9216:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9212:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9234:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9255:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"9248:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9313:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9309:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9333:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9354:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"9347:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9443:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9448:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9456:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9406:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9406:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8628:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"9072:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9064:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"9094:2:2","nodeType":"VariableDeclaration","scope":951,"src":"9086:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"9123:3:2","nodeType":"VariableDeclaration","scope":951,"src":"9106:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"9106:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"9153:6:2","nodeType":"VariableDeclaration","scope":951,"src":"9136:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"9136:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"9182:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9169:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9202:0:2"},"scope":1201,"src":"9023:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10346:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10356:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10363:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10356:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9474:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10307:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10346:0:2"},"scope":1201,"src":"10290:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10836:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10850:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10846:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10868:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10889:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"RevertStatement","src":"10882:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10961:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10944:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10983:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10966:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11012:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11016:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10993:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11071:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11075:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11080:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11088:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11032:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"11032:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10382:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10777:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10789:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10801:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10821:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10808:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10836:0:2"},"scope":1201,"src":"10754:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11638:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11652:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11648:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11670:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11691:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"RevertStatement","src":"11684:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11784:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11788:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11801:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11745:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11745:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11106:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11559:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11551:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11580:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11563:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11563:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11602:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11585:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11585:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11623:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11610:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11638:0:2"},"scope":1201,"src":"11531:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"12172:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"12182:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"12220:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12297:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12319:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12413:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12418:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12368:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11819:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"12130:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"12122:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"12144:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"12136:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"12156:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"12148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"12172:0:2"},"scope":1201,"src":"12107:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12882:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12896:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12892:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12916:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12937:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"12930:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13016:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13034:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"13039:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12989:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12989:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12442:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12820:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12843:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12826:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12826:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12865:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12848:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12848:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12882:0:2"},"scope":1201,"src":"12792:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13369:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13379:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13407:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13428:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"13421:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13482:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13501:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13520:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13482:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13565:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13575:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13543:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13538:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"13063:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13312:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13327:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13319:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13342:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13337:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13369:0:2"},"scope":1201,"src":"13276:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13865:664:2","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:2","statements":[{"nodeType":"YulAssignment","src":"13958:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:2"},"nodeType":"YulFunctionCall","src":"13968:11:2"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:2"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:2"},"nodeType":"YulFunctionCall","src":"14029:17:2"},"nodeType":"YulExpressionStatement","src":"14029:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:2"},"nodeType":"YulFunctionCall","src":"14163:17:2"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:2"},"nodeType":"YulFunctionCall","src":"14156:35:2"},"nodeType":"YulExpressionStatement","src":"14156:35:2"},{"nodeType":"YulAssignment","src":"14282:27:2","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:2"},"nodeType":"YulFunctionCall","src":"14292:17:2"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:2"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:2"},"nodeType":"YulFunctionCall","src":"14322:17:2"},"nodeType":"YulExpressionStatement","src":"14322:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:2"},"nodeType":"YulFunctionCall","src":"14359:17:2"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:2"},"nodeType":"YulFunctionCall","src":"14352:35:2"},"nodeType":"YulExpressionStatement","src":"14352:35:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:2"},"nodeType":"YulFunctionCall","src":"14495:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:2"},"nodeType":"YulFunctionCall","src":"14482:31:2"},"nodeType":"YulExpressionStatement","src":"14482:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13958:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14036:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14167:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14296:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14282:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14329:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14363:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14499:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"14182:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14378:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13875:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13597:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13752:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13778:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13770:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13832:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13815:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13815:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13857:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:2"},"scope":1201,"src":"13707:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13806:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14423:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[5834]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":5835,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,5834],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:910:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3629:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3621:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3643:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3635:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3655:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3647:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3667:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3659:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3689:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3674:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3703:0:3"},"scope":1324,"src":"3595:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3710:814:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4577:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4569:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4599:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4630:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4611:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4611:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4662:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4643:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4643:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4693:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4678:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4712:0:3"},"scope":1324,"src":"4529:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4378:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4606:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[5834]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":5835,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,5834],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,5834],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1183:774:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:6","memberName":"code","nodeType":"MemberAccess","src":"1197:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:6","memberName":"length","nodeType":"MemberAccess","src":"1197:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1193:758:6","trueBody":{"id":1458,"nodeType":"Block","src":"1217:734:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1333:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1355:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1367:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1367:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1351:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1412:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1518:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1480:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1480:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"1473:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1323:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1316:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:6"},"src":"1307:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1583:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1605:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:6","memberName":"length","nodeType":"MemberAccess","src":"1605:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1776:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:6"},"nodeType":"YulFunctionCall","src":"1856:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:6"},"nodeType":"YulFunctionCall","src":"1873:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:6"},"nodeType":"YulFunctionCall","src":"1849:38:6"},"nodeType":"YulExpressionStatement","src":"1849:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1864:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1879:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1798:111:6"}]},"id":1454,"nodeType":"IfStatement","src":"1601:326:6","trueBody":{"id":1451,"nodeType":"Block","src":"1625:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1748:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1710:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1710:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"1703:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1575:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1562:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:6"},"src":"1555:386:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1274:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1284:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1290:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1294:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1301:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1252:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1235:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1235:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1231:710:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:527:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1047:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1039:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1073:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1065:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1095:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1087:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1115:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1107:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1135:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1127:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1163:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1150:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1183:0:6"},"scope":1536,"src":"998:959:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2715:816:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2729:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:6","memberName":"code","nodeType":"MemberAccess","src":"2729:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"length","nodeType":"MemberAccess","src":"2729:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2725:800:6","trueBody":{"id":1532,"nodeType":"Block","src":"2749:776:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2902:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2924:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2936:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2936:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2920:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"2986:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3092:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3054:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3054:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"3047:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2879:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2872:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:6"},"src":"2846:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3157:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3179:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:6","memberName":"length","nodeType":"MemberAccess","src":"3179:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3350:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:6"},"nodeType":"YulFunctionCall","src":"3430:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:6"},"nodeType":"YulFunctionCall","src":"3447:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:6"},"nodeType":"YulFunctionCall","src":"3423:38:6"},"nodeType":"YulExpressionStatement","src":"3423:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3438:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3453:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3372:111:6"}]},"id":1528,"nodeType":"IfStatement","src":"3175:326:6","trueBody":{"id":1525,"nodeType":"Block","src":"3199:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3322:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3284:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3284:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"3277:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3149:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3136:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:6"},"src":"3129:386:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2811:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2821:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2827:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2832:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2840:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2784:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2767:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2767:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2763:752:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1963:537:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2559:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2551:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2585:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2577:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2607:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2599:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2636:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2619:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2619:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2666:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2649:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2649:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2695:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2682:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2715:0:6"},"scope":1536,"src":"2505:1026:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3094:6","usedErrors":[],"usedEvents":[]}],"src":"120:3414:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[4292],"ERC20":[2051],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155]},"id":2052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":2130,"src":"131:36:7","symbolAliases":[{"foreign":{"id":1539,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":2156,"src":"168:63:7","symbolAliases":[{"foreign":{"id":1541,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":4293,"src":"232:48:7","symbolAliases":[{"foreign":{"id":1543,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":285,"src":"281:65:7","symbolAliases":[{"foreign":{"id":1545,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1548,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4292,"src":"1133:7:7"},"id":1549,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":1550,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"1142:6:7"},"id":1551,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":1552,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2155,"src":"1150:14:7"},"id":1553,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":1554,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:7"},"id":1555,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2051,"linearizedBaseContracts":[2051,189,2155,2129,4292],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1559,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":2051,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1558,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1565,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":2051,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1564,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1563,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1567,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":2051,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1569,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":2051,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1571,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":2051,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1587,"nodeType":"Block","src":"1657:57:7","statements":[{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1580,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1675:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1582,"nodeType":"ExpressionStatement","src":"1667:13:7"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1583,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1690:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1584,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1700:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1586,"nodeType":"ExpressionStatement","src":"1690:17:7"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1425:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1588,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"name_","nameLocation":"1627:5:7","nodeType":"VariableDeclaration","scope":1588,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1573,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:7","nodeType":"VariableDeclaration","scope":1588,"src":"1634:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:7"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"1657:0:7"},"scope":2051,"src":"1601:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2142],"body":{"id":1596,"nodeType":"Block","src":"1839:29:7","statements":[{"expression":{"id":1594,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1856:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1593,"id":1595,"nodeType":"Return","src":"1849:12:7"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"1720:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:7","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"1792:2:7"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"1824:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:7"},"scope":2051,"src":"1779:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2148],"body":{"id":1605,"nodeType":"Block","src":"2043:31:7","statements":[{"expression":{"id":1603,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2060:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1602,"id":1604,"nodeType":"Return","src":"2053:14:7"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"1874:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:7","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"1996:2:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"2028:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1600,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:7"},"scope":2051,"src":"1981:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2154],"body":{"id":1614,"nodeType":"Block","src":"2763:26:7","statements":[{"expression":{"hexValue":"3138","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1611,"id":1613,"nodeType":"Return","src":"2773:9:7"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"2080:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:7","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"2724:2:7"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2756:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1609,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:7"},"scope":2051,"src":"2707:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2078],"body":{"id":1623,"nodeType":"Block","src":"2910:36:7","statements":[{"expression":{"id":1621,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"2927:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1620,"id":1622,"nodeType":"Return","src":"2920:19:7"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"2795:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:7","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"2869:2:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"2901:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:7"},"scope":2051,"src":"2849:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2086],"body":{"id":1636,"nodeType":"Block","src":"3078:42:7","statements":[{"expression":{"baseExpression":{"id":1632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3095:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1634,"indexExpression":{"id":1633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3105:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1631,"id":1635,"nodeType":"Return","src":"3088:25:7"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"2952:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:7","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"account","nameLocation":"3031:7:7","nodeType":"VariableDeclaration","scope":1637,"src":"3023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:7"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"3069:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:7"},"scope":2051,"src":"3004:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2096],"body":{"id":1660,"nodeType":"Block","src":"3390:103:7","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"owner","nameLocation":"3408:5:7","nodeType":"VariableDeclaration","scope":1660,"src":"3400:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1651,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1649,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3416:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:7"},{"expression":{"arguments":[{"id":1653,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3448:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3455:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"3459:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1652,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"3438:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"ExpressionStatement","src":"3438:27:7"},{"expression":{"hexValue":"74727565","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1646,"id":1659,"nodeType":"Return","src":"3475:11:7"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"3126:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:7","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"to","nameLocation":"3341:2:7","nodeType":"VariableDeclaration","scope":1661,"src":"3333:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"3353:5:7","nodeType":"VariableDeclaration","scope":1661,"src":"3345:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:7"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1661,"src":"3384:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:7"},"scope":2051,"src":"3315:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2106],"body":{"id":1677,"nodeType":"Block","src":"3640:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1671,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"3657:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1673,"indexExpression":{"id":1672,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"3669:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1675,"indexExpression":{"id":1674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3676:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1670,"id":1676,"nodeType":"Return","src":"3650:34:7"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"3499:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:7","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"owner","nameLocation":"3578:5:7","nodeType":"VariableDeclaration","scope":1678,"src":"3570:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"spender","nameLocation":"3593:7:7","nodeType":"VariableDeclaration","scope":1678,"src":"3585:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:7"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"3631:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:7"},"scope":2051,"src":"3551:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2116],"body":{"id":1701,"nodeType":"Block","src":"4077:107:7","statements":[{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"owner","nameLocation":"4095:5:7","nodeType":"VariableDeclaration","scope":1701,"src":"4087:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1692,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4103:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:7"},{"expression":{"arguments":[{"id":1694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"4134:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1695,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"4141:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"4150:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":1942,"src":"4125:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"4125:31:7"},{"expression":{"hexValue":"74727565","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1687,"id":1700,"nodeType":"Return","src":"4166:11:7"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"3697:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:7","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"spender","nameLocation":"4023:7:7","nodeType":"VariableDeclaration","scope":1702,"src":"4015:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"value","nameLocation":"4040:5:7","nodeType":"VariableDeclaration","scope":1702,"src":"4032:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:7"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"4071:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1685,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:7"},"scope":2051,"src":"3998:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":1733,"nodeType":"Block","src":"4869:151:7","statements":[{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"spender","nameLocation":"4887:7:7","nodeType":"VariableDeclaration","scope":1733,"src":"4879:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1718,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1716,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4897:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:7"},{"expression":{"arguments":[{"id":1720,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4935:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"4941:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4950:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1719,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4919:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"4919:37:7"},{"expression":{"arguments":[{"id":1726,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4976:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4982:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4986:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1725,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4966:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"ExpressionStatement","src":"4966:26:7"},{"expression":{"hexValue":"74727565","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1713,"id":1732,"nodeType":"Return","src":"5002:11:7"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"4190:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:7","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"from","nameLocation":"4806:4:7","nodeType":"VariableDeclaration","scope":1734,"src":"4798:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"to","nameLocation":"4820:2:7","nodeType":"VariableDeclaration","scope":1734,"src":"4812:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"value","nameLocation":"4832:5:7","nodeType":"VariableDeclaration","scope":1734,"src":"4824:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:7"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"4863:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:7"},"scope":2051,"src":"4776:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1780,"nodeType":"Block","src":"5462:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5476:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:7","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"5472:86:7","trueBody":{"id":1757,"nodeType":"Block","src":"5496:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:7","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5517:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"RevertStatement","src":"5510:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5571:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:7","typeDescriptions":{}}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1773,"nodeType":"IfStatement","src":"5567:86:7","trueBody":{"id":1772,"nodeType":"Block","src":"5589:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:7","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1765,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5610:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"RevertStatement","src":"5603:39:7"}]}},{"expression":{"arguments":[{"id":1775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5670:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5676:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5680:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1774,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5662:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"5662:24:7"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"5026:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:7","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"from","nameLocation":"5420:4:7","nodeType":"VariableDeclaration","scope":1781,"src":"5412:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"to","nameLocation":"5434:2:7","nodeType":"VariableDeclaration","scope":1781,"src":"5426:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"value","nameLocation":"5446:5:7","nodeType":"VariableDeclaration","scope":1781,"src":"5438:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:7"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[],"src":"5462:0:7"},"scope":2051,"src":"5393:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"6083:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6097:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:7","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1828,"nodeType":"Block","src":"6271:362:7","statements":[{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:7","nodeType":"VariableDeclaration","scope":1828,"src":"6285:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1807,"initialValue":{"baseExpression":{"id":1804,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6307:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1806,"indexExpression":{"id":1805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6317:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6340:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6354:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"6336:115:7","trueBody":{"id":1817,"nodeType":"Block","src":"6361:90:7","statements":[{"errorCall":{"arguments":[{"id":1812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6411:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6417:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6430:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6386:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"RevertStatement","src":"6379:57:7"}]}},{"id":1827,"nodeType":"UncheckedBlock","src":"6464:159:7","statements":[{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1819,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6571:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1821,"indexExpression":{"id":1820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6581:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6589:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6603:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"6571:37:7"}]}]},"id":1829,"nodeType":"IfStatement","src":"6093:540:7","trueBody":{"id":1801,"nodeType":"Block","src":"6117:148:7","statements":[{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1797,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6233:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6249:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"6233:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6647:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:7","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1849,"nodeType":"Block","src":"6862:206:7","statements":[{"id":1848,"nodeType":"UncheckedBlock","src":"6876:182:7","statements":[{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1842,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"7021:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1844,"indexExpression":{"id":1843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"7031:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7038:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"7021:22:7"}]}]},"id":1850,"nodeType":"IfStatement","src":"6643:425:7","trueBody":{"id":1841,"nodeType":"Block","src":"6665:191:7","statements":[{"id":1840,"nodeType":"UncheckedBlock","src":"6679:167:7","statements":[{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1836,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6810:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"6810:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1852,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"7092:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1853,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"7098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7102:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1851,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"7083:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"EmitStatement","src":"7078:30:7"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"5699:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:7","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"from","nameLocation":"6033:4:7","nodeType":"VariableDeclaration","scope":1858,"src":"6025:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"to","nameLocation":"6047:2:7","nodeType":"VariableDeclaration","scope":1858,"src":"6039:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"value","nameLocation":"6059:5:7","nodeType":"VariableDeclaration","scope":1858,"src":"6051:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:7"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[],"src":"6083:0:7"},"scope":2051,"src":"6008:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"7514:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"7528:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:7","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"7524:91:7","trueBody":{"id":1879,"nodeType":"Block","src":"7551:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:7","typeDescriptions":{}}},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1872,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7572:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"RevertStatement","src":"7565:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:7","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"7644:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"7653:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7624:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"ExpressionStatement","src":"7624:35:7"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"7121:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:7","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"account","nameLocation":"7481:7:7","nodeType":"VariableDeclaration","scope":1891,"src":"7473:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"value","nameLocation":"7498:5:7","nodeType":"VariableDeclaration","scope":1891,"src":"7490:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:7"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"7514:0:7"},"scope":2051,"src":"7458:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"8040:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8054:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:7","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"8050:89:7","trueBody":{"id":1912,"nodeType":"Block","src":"8077:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:7","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1905,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8098:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"RevertStatement","src":"8091:37:7"}]}},{"expression":{"arguments":[{"id":1915,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8156:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:7","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8177:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1914,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8148:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"8148:35:7"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"7672:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:7","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"account","nameLocation":"8007:7:7","nodeType":"VariableDeclaration","scope":1924,"src":"7999:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"value","nameLocation":"8024:5:7","nodeType":"VariableDeclaration","scope":1924,"src":"8016:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:7"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"8040:0:7"},"scope":2051,"src":"7984:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"8800:54:7","statements":[{"expression":{"arguments":[{"id":1935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8819:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"8826:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"8835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1934,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":2002,"src":"8810:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"8810:37:7"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"8196:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:7","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"owner","nameLocation":"8752:5:7","nodeType":"VariableDeclaration","scope":1942,"src":"8744:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"spender","nameLocation":"8767:7:7","nodeType":"VariableDeclaration","scope":1942,"src":"8759:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"value","nameLocation":"8784:5:7","nodeType":"VariableDeclaration","scope":1942,"src":"8776:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:7"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"8800:0:7"},"scope":2051,"src":"8726:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2001,"nodeType":"Block","src":"9799:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9813:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:7","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"nodeType":"IfStatement","src":"9809:89:7","trueBody":{"id":1967,"nodeType":"Block","src":"9834:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:7","typeDescriptions":{}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1960,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9855:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"RevertStatement","src":"9848:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"9911:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:7","typeDescriptions":{}}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"9907:90:7","trueBody":{"id":1982,"nodeType":"Block","src":"9934:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:7","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1975,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9955:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"RevertStatement","src":"9948:38:7"}]}},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1984,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"10006:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1987,"indexExpression":{"id":1985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"10018:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1988,"indexExpression":{"id":1986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10025:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"10006:35:7"},{"condition":{"id":1992,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"10055:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"10051:76:7","trueBody":{"id":1999,"nodeType":"Block","src":"10066:61:7","statements":[{"eventCall":{"arguments":[{"id":1994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"10094:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10101:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10110:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"10085:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"EmitStatement","src":"10080:36:7"}]}}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"8860:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:7","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"owner","nameLocation":"9727:5:7","nodeType":"VariableDeclaration","scope":2002,"src":"9719:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"spender","nameLocation":"9742:7:7","nodeType":"VariableDeclaration","scope":2002,"src":"9734:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"value","nameLocation":"9759:5:7","nodeType":"VariableDeclaration","scope":2002,"src":"9751:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:7","nodeType":"VariableDeclaration","scope":2002,"src":"9766:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:7"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"9799:0:7"},"scope":2051,"src":"9701:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"10504:387:7","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:7","nodeType":"VariableDeclaration","scope":2049,"src":"10514:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"arguments":[{"id":2015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"10551:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2016,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10558:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2014,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"10541:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10580:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10599:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:7","memberName":"max","nodeType":"MemberAccess","src":"10599:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"IfStatement","src":"10576:309:7","trueBody":{"id":2047,"nodeType":"Block","src":"10618:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10636:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10655:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"10632:130:7","trueBody":{"id":2035,"nodeType":"Block","src":"10662:100:7","statements":[{"errorCall":{"arguments":[{"id":2030,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10714:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2031,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10723:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10741:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10687:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"RevertStatement","src":"10680:67:7"}]}},{"id":2046,"nodeType":"UncheckedBlock","src":"10775:100:7","statements":[{"expression":{"arguments":[{"id":2038,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"10812:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10819:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10847:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2037,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":2002,"src":"10803:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"10803:57:7"}]}]}}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"10139:271:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:7","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"owner","nameLocation":"10448:5:7","nodeType":"VariableDeclaration","scope":2050,"src":"10440:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"spender","nameLocation":"10463:7:7","nodeType":"VariableDeclaration","scope":2050,"src":"10455:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"value","nameLocation":"10480:5:7","nodeType":"VariableDeclaration","scope":2050,"src":"10472:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:7"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"10504:0:7"},"scope":2051,"src":"10415:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2052,"src":"1106:9787:7","usedErrors":[159,164,169,178,183,188],"usedEvents":[2063,2072]}],"src":"105:10789:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2129]},"id":2130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2053,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"132:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2129,"linearizedBaseContracts":[2129],"name":"IERC20","nameLocation":"214:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"227:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2063,"name":"Transfer","nameLocation":"396:8:8","nodeType":"EventDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:8","nodeType":"VariableDeclaration","scope":2063,"src":"405:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2059,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:8","nodeType":"VariableDeclaration","scope":2063,"src":"427:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2061,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:8","nodeType":"VariableDeclaration","scope":2063,"src":"447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:8"},"src":"390:72:8"},{"anonymous":false,"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"468:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2072,"name":"Approval","nameLocation":"627:8:8","nodeType":"EventDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"636:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:8","nodeType":"VariableDeclaration","scope":2072,"src":"659:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:8"},"src":"621:78:8"},{"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"705:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2078,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:8","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:8"},"scope":2129,"src":"775:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"836:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2086,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":2086,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":2129,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"986:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2096,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":2096,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"value","nameLocation":"1242:5:8","nodeType":"VariableDeclaration","scope":2096,"src":"1234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:8"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2096,"src":"1267:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2093,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:8"},"scope":2129,"src":"1204:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"1279:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2106,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:8","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"owner","nameLocation":"1575:5:8","nodeType":"VariableDeclaration","scope":2106,"src":"1567:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"spender","nameLocation":"1590:7:8","nodeType":"VariableDeclaration","scope":2106,"src":"1582:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:8"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"1622:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:8"},"scope":2129,"src":"1548:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"1637:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2116,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:8","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"spender","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":2116,"src":"2326:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"2351:5:8","nodeType":"VariableDeclaration","scope":2116,"src":"2343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:8"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2116,"src":"2376:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2113,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:8"},"scope":2129,"src":"2309:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"2388:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2128,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:8","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"from","nameLocation":"2720:4:8","nodeType":"VariableDeclaration","scope":2128,"src":"2712:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"to","nameLocation":"2734:2:8","nodeType":"VariableDeclaration","scope":2128,"src":"2726:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"value","nameLocation":"2746:5:8","nodeType":"VariableDeclaration","scope":2128,"src":"2738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":2129,"src":"2690:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2130,"src":"204:2575:8","usedErrors":[],"usedEvents":[2063,2072]}],"src":"106:2674:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2129],"IERC20Metadata":[2155]},"id":2156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2131,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2156,"sourceUnit":2130,"src":"151:37:9","symbolAliases":[{"foreign":{"id":2132,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2135,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"306:6:9"},"id":2136,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2155,"linearizedBaseContracts":[2155,2129],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2142,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2142,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":2155,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2148,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":2155,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2154,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2151,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":2155,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2156,"src":"278:405:9","usedErrors":[],"usedEvents":[2063,2072]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[4292],"ERC165":[5822],"ERC721":[3112],"ERC721Utils":[3352],"IERC165":[5834],"IERC721":[3229],"IERC721Errors":[237],"IERC721Metadata":[3275],"Strings":[5798]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3230,"src":"133:38:10","symbolAliases":[{"foreign":{"id":2158,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":2161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3276,"src":"172:65:10","symbolAliases":[{"foreign":{"id":2160,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"180:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":2163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3353,"src":"238:52:10","symbolAliases":[{"foreign":{"id":2162,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"246:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":4293,"src":"291:48:10","symbolAliases":[{"foreign":{"id":2164,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"299:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":2167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":5799,"src":"340:48:10","symbolAliases":[{"foreign":{"id":2166,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"348:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":5823,"src":"389:69:10","symbolAliases":[{"foreign":{"id":2168,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"397:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2169,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"406:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":285,"src":"459:66:10","symbolAliases":[{"foreign":{"id":2171,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2174,"name":"Context","nameLocations":["803:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4292,"src":"803:7:10"},"id":2175,"nodeType":"InheritanceSpecifier","src":"803:7:10"},{"baseName":{"id":2176,"name":"ERC165","nameLocations":["812:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":5822,"src":"812:6:10"},"id":2177,"nodeType":"InheritanceSpecifier","src":"812:6:10"},{"baseName":{"id":2178,"name":"IERC721","nameLocations":["820:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3229,"src":"820:7:10"},"id":2179,"nodeType":"InheritanceSpecifier","src":"820:7:10"},{"baseName":{"id":2180,"name":"IERC721Metadata","nameLocations":["829:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":3275,"src":"829:15:10"},"id":2181,"nodeType":"InheritanceSpecifier","src":"829:15:10"},{"baseName":{"id":2182,"name":"IERC721Errors","nameLocations":["846:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:10"},"id":2183,"nodeType":"InheritanceSpecifier","src":"846:13:10"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"527:247:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112,237,3275,3229,5822,5834,4292],"name":"ERC721","nameLocation":"793:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2186,"libraryName":{"id":2184,"name":"Strings","nameLocations":["872:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5798,"src":"872:7:10"},"nodeType":"UsingForDirective","src":"866:26:10","typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2188,"mutability":"mutable","name":"_name","nameLocation":"931:5:10","nodeType":"VariableDeclaration","scope":3112,"src":"916:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2190,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:10","nodeType":"VariableDeclaration","scope":3112,"src":"963:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2194,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":3112,"src":"992:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2193,"keyName":"tokenId","keyNameLocation":"1008:7:10","keyType":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2198,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:10","nodeType":"VariableDeclaration","scope":3112,"src":"1050:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2197,"keyName":"owner","keyNameLocation":"1066:5:10","keyType":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2202,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:10","nodeType":"VariableDeclaration","scope":3112,"src":"1108:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2201,"keyName":"tokenId","keyNameLocation":"1124:7:10","keyType":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2208,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:10","nodeType":"VariableDeclaration","scope":3112,"src":"1174:86:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2207,"keyName":"owner","keyNameLocation":"1190:5:10","keyType":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2206,"keyName":"operator","keyNameLocation":"1215:8:10","keyType":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2205,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2224,"nodeType":"Block","src":"1436:57:10","statements":[{"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1446:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2217,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1454:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2219,"nodeType":"ExpressionStatement","src":"1446:13:10"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"1469:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2221,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1479:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2223,"nodeType":"ExpressionStatement","src":"1469:17:10"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"1267:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2225,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"name_","nameLocation":"1406:5:10","nodeType":"VariableDeclaration","scope":2225,"src":"1392:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:10","nodeType":"VariableDeclaration","scope":2225,"src":"1413:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2212,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:10"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"1436:0:10"},"scope":3112,"src":"1380:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5821,5833],"body":{"id":2255,"nodeType":"Block","src":"1668:192:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1697:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2238,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"1717:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3229_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3229_$","typeString":"type(contract IERC721)"}],"id":2237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1712:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3229","typeString":"type(contract IERC721)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1753:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2244,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"1773:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3275_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3275_$","typeString":"type(contract IERC721Metadata)"}],"id":2243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1768:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3275","typeString":"type(contract IERC721Metadata)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2251,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1841:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2249,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1817:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3112_$","typeString":"type(contract super ERC721)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"1817:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2235,"id":2254,"nodeType":"Return","src":"1678:175:10"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"1499:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:10","nodeType":"FunctionDefinition","overrides":{"id":2232,"nodeType":"OverrideSpecifier","overrides":[{"id":2230,"name":"ERC165","nameLocations":["1636:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":5822,"src":"1636:6:10"},{"id":2231,"name":"IERC165","nameLocations":["1644:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"1644:7:10"}],"src":"1627:25:10"},"parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:10","nodeType":"VariableDeclaration","scope":2256,"src":"1587:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:10"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"1662:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:10"},"scope":3112,"src":"1560:300:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3154],"body":{"id":2283,"nodeType":"Block","src":"1991:136:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2005:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:10","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"2001:87:10","trueBody":{"id":2277,"nodeType":"Block","src":"2026:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2270,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"RevertStatement","src":"2040:37:10"}]}},{"expression":{"baseExpression":{"id":2279,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"2104:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2281,"indexExpression":{"id":2280,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2114:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2263,"id":2282,"nodeType":"Return","src":"2097:23:10"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"1866:48:10","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:10","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"owner","nameLocation":"1946:5:10","nodeType":"VariableDeclaration","scope":2284,"src":"1938:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:10"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"1982:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:10"},"scope":3112,"src":"1919:208:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3162],"body":{"id":2296,"nodeType":"Block","src":"2256:46:10","statements":[{"expression":{"arguments":[{"id":2293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2287:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2292,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2273:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2291,"id":2295,"nodeType":"Return","src":"2266:29:10"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"2133:46:10","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:10","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:10","nodeType":"VariableDeclaration","scope":2297,"src":"2201:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:10"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2297,"src":"2247:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:10"},"scope":3112,"src":"2184:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3260],"body":{"id":2305,"nodeType":"Block","src":"2424:29:10","statements":[{"expression":{"id":2303,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2441:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2302,"id":2304,"nodeType":"Return","src":"2434:12:10"}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"2308:51:10","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:10","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"2377:2:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"2409:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:10"},"scope":3112,"src":"2364:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3266],"body":{"id":2314,"nodeType":"Block","src":"2579:31:10","statements":[{"expression":{"id":2312,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2596:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2311,"id":2313,"nodeType":"Return","src":"2589:14:10"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"2459:53:10","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:10","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"2532:2:10"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"2564:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2309,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:10"},"scope":3112,"src":"2517:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3274],"body":{"id":2350,"nodeType":"Block","src":"2755:176:10","statements":[{"expression":{"arguments":[{"id":2324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2323,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2765:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2326,"nodeType":"ExpressionStatement","src":"2765:22:10"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:10","nodeType":"VariableDeclaration","scope":2350,"src":"2798:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2329,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2822:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2334,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2855:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2332,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:10","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:10","memberName":"length","nodeType":"MemberAccess","src":"2849:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:10","trueExpression":{"arguments":[{"id":2342,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2891:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4676,"src":"2900:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:10","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2322,"id":2349,"nodeType":"Return","src":"2842:82:10"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2616:55:10","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:10","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:10","nodeType":"VariableDeclaration","scope":2351,"src":"2694:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:10"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"2740:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:10"},"scope":3112,"src":"2676:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"3239:26:10","statements":[{"expression":{"hexValue":"","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2356,"id":2358,"nodeType":"Return","src":"3249:9:10"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"2937:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:10","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[],"src":"3190:2:10"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"3224:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2354,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:10"},"scope":3112,"src":"3173:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3202],"body":{"id":2375,"nodeType":"Block","src":"3383:52:10","statements":[{"expression":{"arguments":[{"id":2369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3402:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2371,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3415:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2368,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":2979,"src":"3393:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2374,"nodeType":"ExpressionStatement","src":"3393:35:10"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"3271:46:10","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:10","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"to","nameLocation":"3347:2:10","nodeType":"VariableDeclaration","scope":2376,"src":"3339:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:10","nodeType":"VariableDeclaration","scope":2376,"src":"3351:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:10"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"3383:0:10"},"scope":3112,"src":"3322:113:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3218],"body":{"id":2392,"nodeType":"Block","src":"3572:78:10","statements":[{"expression":{"arguments":[{"id":2385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3596:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2384,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"3582:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2387,"nodeType":"ExpressionStatement","src":"3582:22:10"},{"expression":{"arguments":[{"id":2389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"3622:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2383,"id":2391,"nodeType":"Return","src":"3615:28:10"}]},"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"3441:50:10","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:10","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:10","nodeType":"VariableDeclaration","scope":2393,"src":"3517:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:10"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"3563:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:10"},"scope":3112,"src":"3496:154:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3210],"body":{"id":2408,"nodeType":"Block","src":"3792:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3821:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2404,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3835:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2405,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3845:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2401,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3802:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"ExpressionStatement","src":"3802:52:10"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"3656:56:10","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:10","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"operator","nameLocation":"3752:8:10","nodeType":"VariableDeclaration","scope":2409,"src":"3744:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"approved","nameLocation":"3767:8:10","nodeType":"VariableDeclaration","scope":2409,"src":"3762:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:10"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"3792:0:10"},"scope":3112,"src":"3717:144:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3228],"body":{"id":2425,"nodeType":"Block","src":"4021:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2419,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4038:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2421,"indexExpression":{"id":2420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4057:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2423,"indexExpression":{"id":2422,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4064:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2418,"id":2424,"nodeType":"Return","src":"4031:42:10"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"3867:55:10","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:10","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"owner","nameLocation":"3961:5:10","nodeType":"VariableDeclaration","scope":2426,"src":"3953:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"operator","nameLocation":"3976:8:10","nodeType":"VariableDeclaration","scope":2426,"src":"3968:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:10"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"4015:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:10"},"scope":3112,"src":"3927:153:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3194],"body":{"id":2471,"nodeType":"Block","src":"4222:498:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4236:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:10","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"4232:87:10","trueBody":{"id":2449,"nodeType":"Block","src":"4254:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:10","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2448,"nodeType":"RevertStatement","src":"4268:40:10"}]}},{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:10","nodeType":"VariableDeclaration","scope":2471,"src":"4537:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"id":2454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4569:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4582:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2453,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4561:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4609:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4626:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"IfStatement","src":"4605:109:10","trueBody":{"id":2469,"nodeType":"Block","src":"4632:82:10","statements":[{"errorCall":{"arguments":[{"id":2464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4674:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2466,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4689:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2463,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2468,"nodeType":"RevertStatement","src":"4646:57:10"}]}}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"4086:51:10","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:10","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"from","nameLocation":"4172:4:10","nodeType":"VariableDeclaration","scope":2472,"src":"4164:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"to","nameLocation":"4186:2:10","nodeType":"VariableDeclaration","scope":2472,"src":"4178:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:10","nodeType":"VariableDeclaration","scope":2472,"src":"4190:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:10"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"4222:0:10"},"scope":3112,"src":"4142:578:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3184],"body":{"id":2489,"nodeType":"Block","src":"4862:56:10","statements":[{"expression":{"arguments":[{"id":2483,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4889:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2484,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"4895:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"4899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2482,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2490,2520],"referencedDeclaration":2520,"src":"4872:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2488,"nodeType":"ExpressionStatement","src":"4872:39:10"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"4726:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:10","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"from","nameLocation":"4820:4:10","nodeType":"VariableDeclaration","scope":2490,"src":"4812:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"to","nameLocation":"4834:2:10","nodeType":"VariableDeclaration","scope":2490,"src":"4826:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:10","nodeType":"VariableDeclaration","scope":2490,"src":"4838:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:10"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"4862:0:10"},"scope":3112,"src":"4786:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3174],"body":{"id":2519,"nodeType":"Block","src":"5087:130:10","statements":[{"expression":{"arguments":[{"id":2503,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"5110:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5116:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5120:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2502,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"5097:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2507,"nodeType":"ExpressionStatement","src":"5097:31:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2511,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"5172:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"5186:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5192:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5196:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5205:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2508,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"5138:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"5138:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"ExpressionStatement","src":"5138:72:10"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"4924:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:10","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"from","nameLocation":"5018:4:10","nodeType":"VariableDeclaration","scope":2520,"src":"5010:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"to","nameLocation":"5032:2:10","nodeType":"VariableDeclaration","scope":2520,"src":"5024:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:10","nodeType":"VariableDeclaration","scope":2520,"src":"5036:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"data","nameLocation":"5066:4:10","nodeType":"VariableDeclaration","scope":2520,"src":"5053:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2498,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:10"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"5087:0:10"},"scope":3112,"src":"4984:233:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2532,"nodeType":"Block","src":"5807:40:10","statements":[{"expression":{"baseExpression":{"id":2528,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5824:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2530,"indexExpression":{"id":2529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5832:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2527,"id":2531,"nodeType":"Return","src":"5817:23:10"}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"5223:504:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:10","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:10","nodeType":"VariableDeclaration","scope":2533,"src":"5750:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:10"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"5798:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:10"},"scope":3112,"src":"5732:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2545,"nodeType":"Block","src":"6042:48:10","statements":[{"expression":{"baseExpression":{"id":2541,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"6059:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2543,"indexExpression":{"id":2542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"6075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2540,"id":2544,"nodeType":"Return","src":"6052:31:10"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"5853:105:10","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:10","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:10","nodeType":"VariableDeclaration","scope":2546,"src":"5985:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:10"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2546,"src":"6033:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2538,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:10"},"scope":3112,"src":"5963:127:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"6510:163:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6539:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:10","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6577:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2565,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6586:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6614:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6621:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2567,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6597:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"6646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6633:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6658:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2557,"id":2580,"nodeType":"Return","src":"6520:146:10"}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"6096:300:10","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:10","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"owner","nameLocation":"6432:5:10","nodeType":"VariableDeclaration","scope":2582,"src":"6424:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"spender","nameLocation":"6447:7:10","nodeType":"VariableDeclaration","scope":2582,"src":"6439:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:10","nodeType":"VariableDeclaration","scope":2582,"src":"6456:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:10"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2582,"src":"6504:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2555,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:10"},"scope":3112,"src":"6401:272:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2618,"nodeType":"Block","src":"7202:271:10","statements":[{"condition":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:10","subExpression":{"arguments":[{"id":2593,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7231:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2594,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7238:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7247:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"7217:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"7212:255:10","trueBody":{"id":2616,"nodeType":"Block","src":"7257:210:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7275:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:10","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2614,"nodeType":"Block","src":"7373:84:10","statements":[{"errorCall":{"arguments":[{"id":2610,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7425:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7434:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"RevertStatement","src":"7391:51:10"}]},"id":2615,"nodeType":"IfStatement","src":"7271:186:10","trueBody":{"id":2608,"nodeType":"Block","src":"7296:71:10","statements":[{"errorCall":{"arguments":[{"id":2605,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7344:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"RevertStatement","src":"7314:38:10"}]}}]}}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"6679:421:10","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:10","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"owner","nameLocation":"7139:5:10","nodeType":"VariableDeclaration","scope":2619,"src":"7131:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"spender","nameLocation":"7154:7:10","nodeType":"VariableDeclaration","scope":2619,"src":"7146:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:10","nodeType":"VariableDeclaration","scope":2619,"src":"7163:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:10"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"7202:0:10"},"scope":3112,"src":"7105:368:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"8190:78:10","statements":[{"id":2633,"nodeType":"UncheckedBlock","src":"8200:62:10","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2627,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"8224:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2629,"indexExpression":{"id":2628,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"8234:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"8246:5:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"8224:27:10"}]}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"7479:631:10","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:10","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"account","nameLocation":"8149:7:10","nodeType":"VariableDeclaration","scope":2635,"src":"8141:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"8166:5:10","nodeType":"VariableDeclaration","scope":2635,"src":"8158:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2623,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:10"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"8190:0:10"},"scope":3112,"src":"8115:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"8956:700:10","statements":[{"assignments":[2648],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"from","nameLocation":"8974:4:10","nodeType":"VariableDeclaration","scope":2724,"src":"8966:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"id":2650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"8990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2649,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8981:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"9058:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:10","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"9054:86:10","trueBody":{"id":2665,"nodeType":"Block","src":"9078:62:10","statements":[{"expression":{"arguments":[{"id":2660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9109:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2661,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"9115:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2659,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"9092:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"9092:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9184:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:10","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"9180:256:10","trueBody":{"id":2693,"nodeType":"Block","src":"9204:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:10","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:10","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2673,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":3045,"src":"9300:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"ExpressionStatement","src":"9300:48:10"},{"id":2692,"nodeType":"UncheckedBlock","src":"9363:63:10","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2686,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9391:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2688,"indexExpression":{"id":2687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"9391:20:10"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9450:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:10","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"9446:107:10","trueBody":{"id":2708,"nodeType":"Block","src":"9468:85:10","statements":[{"id":2707,"nodeType":"UncheckedBlock","src":"9482:61:10","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2701,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9510:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2703,"indexExpression":{"id":2702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9520:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"nodeType":"ExpressionStatement","src":"9510:18:10"}]}]}},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2710,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9563:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2712,"indexExpression":{"id":2711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9571:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9582:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"nodeType":"ExpressionStatement","src":"9563:21:10"},{"eventCall":{"arguments":[{"id":2717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9609:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9615:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9619:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2716,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"9600:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"EmitStatement","src":"9595:32:10"},{"expression":{"id":2722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9645:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2646,"id":2723,"nodeType":"Return","src":"9638:11:10"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"8274:582:10","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:10","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"to","nameLocation":"8886:2:10","nodeType":"VariableDeclaration","scope":2725,"src":"8878:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:10","nodeType":"VariableDeclaration","scope":2725,"src":"8890:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"auth","nameLocation":"8915:4:10","nodeType":"VariableDeclaration","scope":2725,"src":"8907:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:10"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"8947:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:10"},"scope":3112,"src":"8861:795:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"10031:274:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"10045:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:10","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"10041:87:10","trueBody":{"id":2746,"nodeType":"Block","src":"10063:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:10","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2739,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"RevertStatement","src":"10077:40:10"}]}},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:10","nodeType":"VariableDeclaration","scope":2774,"src":"10137:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"id":2751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"10169:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2752,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"10173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:10","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2750,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10161:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"10207:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:10","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"10203:96:10","trueBody":{"id":2772,"nodeType":"Block","src":"10236:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:10","typeDescriptions":{}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2765,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"RevertStatement","src":"10250:38:10"}]}}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"9662:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:10","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"to","nameLocation":"10001:2:10","nodeType":"VariableDeclaration","scope":2775,"src":"9993:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:10","nodeType":"VariableDeclaration","scope":2775,"src":"10005:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:10"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"10031:0:10"},"scope":3112,"src":"9978:327:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"10713:43:10","statements":[{"expression":{"arguments":[{"id":2784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"10733:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"10737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2783,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2790,2820],"referencedDeclaration":2820,"src":"10723:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"ExpressionStatement","src":"10723:26:10"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"10311:340:10","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:10","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"to","nameLocation":"10683:2:10","nodeType":"VariableDeclaration","scope":2790,"src":"10675:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:10","nodeType":"VariableDeclaration","scope":2790,"src":"10687:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:10"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"10713:0:10"},"scope":3112,"src":"10656:100:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"11061:123:10","statements":[{"expression":{"arguments":[{"id":2801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"11077:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"11071:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"11071:18:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2808,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"11133:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:10","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"11159:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"11163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"11172:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2805,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"11099:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"11099:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"ExpressionStatement","src":"11099:78:10"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"10762:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:10","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"to","nameLocation":"11004:2:10","nodeType":"VariableDeclaration","scope":2820,"src":"10996:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:10","nodeType":"VariableDeclaration","scope":2820,"src":"11008:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"data","nameLocation":"11038:4:10","nodeType":"VariableDeclaration","scope":2820,"src":"11025:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2796,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:10"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"11061:0:10"},"scope":3112,"src":"10977:207:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2852,"nodeType":"Block","src":"11551:186:10","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:10","nodeType":"VariableDeclaration","scope":2852,"src":"11561:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2839,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:10","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2833,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"11605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:10","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2828,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"11585:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"11639:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:10","typeDescriptions":{}}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"11635:96:10","trueBody":{"id":2850,"nodeType":"Block","src":"11668:63:10","statements":[{"errorCall":{"arguments":[{"id":2847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"11712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2849,"nodeType":"RevertStatement","src":"11682:38:10"}]}}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"11190:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2853,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:10","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:10","nodeType":"VariableDeclaration","scope":2853,"src":"11525:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:10"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"11551:0:10"},"scope":3112,"src":"11510:227:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"12132:389:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"12146:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:10","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2877,"nodeType":"IfStatement","src":"12142:87:10","trueBody":{"id":2876,"nodeType":"Block","src":"12164:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:10","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2869,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"RevertStatement","src":"12178:40:10"}]}},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:10","nodeType":"VariableDeclaration","scope":2912,"src":"12238:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2888,"initialValue":{"arguments":[{"id":2881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"12270:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:10","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2880,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"12262:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"12308:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:10","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"12410:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2901,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12427:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"12406:109:10","trueBody":{"id":2909,"nodeType":"Block","src":"12433:82:10","statements":[{"errorCall":{"arguments":[{"id":2904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12475:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12481:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2906,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"12490:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2903,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"RevertStatement","src":"12447:57:10"}]}},"id":2911,"nodeType":"IfStatement","src":"12304:211:10","trueBody":{"id":2899,"nodeType":"Block","src":"12337:63:10","statements":[{"errorCall":{"arguments":[{"id":2896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2898,"nodeType":"RevertStatement","src":"12351:38:10"}]}}]},"documentation":{"id":2854,"nodeType":"StructuredDocumentation","src":"11743:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:10","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"from","nameLocation":"12088:4:10","nodeType":"VariableDeclaration","scope":2913,"src":"12080:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"to","nameLocation":"12102:2:10","nodeType":"VariableDeclaration","scope":2913,"src":"12094:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:10","nodeType":"VariableDeclaration","scope":2913,"src":"12106:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:10"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[],"src":"12132:0:10"},"scope":3112,"src":"12061:460:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"13530:53:10","statements":[{"expression":{"arguments":[{"id":2924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"13554:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"13560:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"13564:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2923,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2931,2961],"referencedDeclaration":2961,"src":"13540:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"13540:36:10"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"12527:923:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:10","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"from","nameLocation":"13486:4:10","nodeType":"VariableDeclaration","scope":2931,"src":"13478:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"to","nameLocation":"13500:2:10","nodeType":"VariableDeclaration","scope":2931,"src":"13492:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:10","nodeType":"VariableDeclaration","scope":2931,"src":"13504:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:10"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"13530:0:10"},"scope":3112,"src":"13455:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"13922:127:10","statements":[{"expression":{"arguments":[{"id":2944,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"13942:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"13948:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"13952:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2943,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"13932:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"13932:28:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2952,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"14004:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2954,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"14018:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"14024:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"14028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"14037:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2949,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"13970:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"13970:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2959,"nodeType":"ExpressionStatement","src":"13970:72:10"}]},"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"13589:226:10","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:10","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"from","nameLocation":"13851:4:10","nodeType":"VariableDeclaration","scope":2961,"src":"13843:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"to","nameLocation":"13865:2:10","nodeType":"VariableDeclaration","scope":2961,"src":"13857:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:10","nodeType":"VariableDeclaration","scope":2961,"src":"13869:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"data","nameLocation":"13899:4:10","nodeType":"VariableDeclaration","scope":2961,"src":"13886:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2939,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:10"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"13922:0:10"},"scope":3112,"src":"13820:229:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"14562:50:10","statements":[{"expression":{"arguments":[{"id":2972,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"14581:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2973,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"14585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2974,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"14594:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2971,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":3045,"src":"14572:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"ExpressionStatement","src":"14572:33:10"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"14055:432:10","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:10","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"to","nameLocation":"14518:2:10","nodeType":"VariableDeclaration","scope":2979,"src":"14510:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:10","nodeType":"VariableDeclaration","scope":2979,"src":"14522:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"auth","nameLocation":"14547:4:10","nodeType":"VariableDeclaration","scope":2979,"src":"14539:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:10"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[],"src":"14562:0:10"},"scope":3112,"src":"14492:120:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"14888:568:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"14954:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14967:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:10","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3037,"nodeType":"IfStatement","src":"14950:460:10","trueBody":{"id":3036,"nodeType":"Block","src":"14987:423:10","statements":[{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"owner","nameLocation":"15009:5:10","nodeType":"VariableDeclaration","scope":3036,"src":"15001:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3004,"initialValue":{"arguments":[{"id":3002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"15031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"15017:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"15167:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:10","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"15189:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3012,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"15198:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:10","subExpression":{"arguments":[{"id":3016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"15224:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3017,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"15231:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3015,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15207:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3026,"nodeType":"IfStatement","src":"15163:142:10","trueBody":{"id":3025,"nodeType":"Block","src":"15238:67:10","statements":[{"errorCall":{"arguments":[{"id":3022,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"15285:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"RevertStatement","src":"15256:34:10"}]}},{"condition":{"id":3027,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"15323:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3035,"nodeType":"IfStatement","src":"15319:81:10","trueBody":{"id":3034,"nodeType":"Block","src":"15334:66:10","statements":[{"eventCall":{"arguments":[{"id":3029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"15366:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"15373:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"15377:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3028,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"15357:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"EmitStatement","src":"15352:33:10"}]}}]}},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3038,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"15420:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3040,"indexExpression":{"id":3039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"15436:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"15447:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3043,"nodeType":"ExpressionStatement","src":"15420:29:10"}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"14618:171:10","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:10","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"to","nameLocation":"14820:2:10","nodeType":"VariableDeclaration","scope":3045,"src":"14812:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:10","nodeType":"VariableDeclaration","scope":3045,"src":"14824:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"auth","nameLocation":"14849:4:10","nodeType":"VariableDeclaration","scope":3045,"src":"14841:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:10","nodeType":"VariableDeclaration","scope":3045,"src":"14855:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:10"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[],"src":"14888:0:10"},"scope":3112,"src":"14794:662:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"15758:219:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15772:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:10","typeDescriptions":{}}},"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3066,"nodeType":"IfStatement","src":"15768:91:10","trueBody":{"id":3065,"nodeType":"Block","src":"15796:63:10","statements":[{"errorCall":{"arguments":[{"id":3062,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15839:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3061,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3064,"nodeType":"RevertStatement","src":"15810:38:10"}]}},{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3067,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"15868:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":3070,"indexExpression":{"id":3068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"15887:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3071,"indexExpression":{"id":3069,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15894:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3072,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"15906:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"ExpressionStatement","src":"15868:46:10"},{"eventCall":{"arguments":[{"id":3076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"15944:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3077,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15951:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3078,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"15961:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3075,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15929:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"EmitStatement","src":"15924:46:10"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"15462:198:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:10","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"owner","nameLocation":"15701:5:10","nodeType":"VariableDeclaration","scope":3082,"src":"15693:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"operator","nameLocation":"15716:8:10","nodeType":"VariableDeclaration","scope":3082,"src":"15708:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"approved","nameLocation":"15731:8:10","nodeType":"VariableDeclaration","scope":3082,"src":"15726:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3051,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:10"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[],"src":"15758:0:10"},"scope":3112,"src":"15665:312:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"16284:169:10","statements":[{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"owner","nameLocation":"16302:5:10","nodeType":"VariableDeclaration","scope":3110,"src":"16294:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3095,"initialValue":{"arguments":[{"id":3093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"16319:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"16310:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"16341:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:10","typeDescriptions":{}}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"nodeType":"IfStatement","src":"16337:88:10","trueBody":{"id":3106,"nodeType":"Block","src":"16362:63:10","statements":[{"errorCall":{"arguments":[{"id":3103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"16406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3105,"nodeType":"RevertStatement","src":"16376:38:10"}]}},{"expression":{"id":3108,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"16441:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3089,"id":3109,"nodeType":"Return","src":"16434:12:10"}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"15983:224:10","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:10","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:10","nodeType":"VariableDeclaration","scope":3111,"src":"16235:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:10"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"16275:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:10"},"scope":3112,"src":"16212:241:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3113,"src":"775:15680:10","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[3128,3137,3146]}],"src":"107:16349:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5834],"IERC721":[3229]},"id":3230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3230,"sourceUnit":5835,"src":"134:62:11","symbolAliases":[{"foreign":{"id":3115,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"142:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3118,"name":"IERC165","nameLocations":["288:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"288:7:11"},"id":3119,"nodeType":"InheritanceSpecifier","src":"288:7:11"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"198:68:11","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":3229,"linearizedBaseContracts":[3229,5834],"name":"IERC721","nameLocation":"277:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"302:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3128,"name":"Transfer","nameLocation":"401:8:11","nodeType":"EventDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:11","nodeType":"VariableDeclaration","scope":3128,"src":"410:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3124,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:11","nodeType":"VariableDeclaration","scope":3128,"src":"432:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3126,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:11","nodeType":"VariableDeclaration","scope":3128,"src":"452:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:11"},"src":"395:82:11"},{"anonymous":false,"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"483:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3137,"name":"Approval","nameLocation":"588:8:11","nodeType":"EventDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:11","nodeType":"VariableDeclaration","scope":3137,"src":"597:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:11","nodeType":"VariableDeclaration","scope":3137,"src":"620:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:11","nodeType":"VariableDeclaration","scope":3137,"src":"646:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:11"},"src":"582:89:11"},{"anonymous":false,"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"677:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3146,"name":"ApprovalForAll","nameLocation":"805:14:11","nodeType":"EventDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:11","nodeType":"VariableDeclaration","scope":3146,"src":"820:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3142,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:11","nodeType":"VariableDeclaration","scope":3146,"src":"843:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:11","nodeType":"VariableDeclaration","scope":3146,"src":"869:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3143,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:11"},"src":"799:85:11"},{"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"890:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3154,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:11","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"owner","nameLocation":"998:5:11","nodeType":"VariableDeclaration","scope":3154,"src":"990:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:11"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"balance","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":3154,"src":"1028:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:11"},"scope":3229,"src":"971:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"1051:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3162,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:11","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:11","nodeType":"VariableDeclaration","scope":3162,"src":"1204:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:11"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"owner","nameLocation":"1252:5:11","nodeType":"VariableDeclaration","scope":3162,"src":"1244:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:11"},"scope":3229,"src":"1187:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"1265:565:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3174,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:11","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"from","nameLocation":"1869:4:11","nodeType":"VariableDeclaration","scope":3174,"src":"1861:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"to","nameLocation":"1883:2:11","nodeType":"VariableDeclaration","scope":3174,"src":"1875:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:11","nodeType":"VariableDeclaration","scope":3174,"src":"1887:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"data","nameLocation":"1919:4:11","nodeType":"VariableDeclaration","scope":3174,"src":"1904:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:11"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"1933:0:11"},"scope":3229,"src":"1835:99:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"1940:706:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:11","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"from","nameLocation":"2685:4:11","nodeType":"VariableDeclaration","scope":3184,"src":"2677:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"to","nameLocation":"2699:2:11","nodeType":"VariableDeclaration","scope":3184,"src":"2691:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:11","nodeType":"VariableDeclaration","scope":3184,"src":"2703:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:11"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"2728:0:11"},"scope":3229,"src":"2651:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"2735:733:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3194,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:11","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"from","nameLocation":"3503:4:11","nodeType":"VariableDeclaration","scope":3194,"src":"3495:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"to","nameLocation":"3517:2:11","nodeType":"VariableDeclaration","scope":3194,"src":"3509:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:11","nodeType":"VariableDeclaration","scope":3194,"src":"3521:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:11"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[],"src":"3546:0:11"},"scope":3229,"src":"3473:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"3553:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3202,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:11","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"to","nameLocation":"4035:2:11","nodeType":"VariableDeclaration","scope":3202,"src":"4027:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:11","nodeType":"VariableDeclaration","scope":3202,"src":"4039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:11"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[],"src":"4064:0:11"},"scope":3229,"src":"4010:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"4071:315:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3210,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:11","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"operator","nameLocation":"4426:8:11","nodeType":"VariableDeclaration","scope":3210,"src":"4418:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"approved","nameLocation":"4441:8:11","nodeType":"VariableDeclaration","scope":3210,"src":"4436:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3206,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:11"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"4459:0:11"},"scope":3229,"src":"4391:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"4466:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3218,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:11","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:11","nodeType":"VariableDeclaration","scope":3218,"src":"4631:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:11"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"operator","nameLocation":"4679:8:11","nodeType":"VariableDeclaration","scope":3218,"src":"4671:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:11"},"scope":3229,"src":"4610:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"4695:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3228,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:11","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"owner","nameLocation":"4872:5:11","nodeType":"VariableDeclaration","scope":3228,"src":"4864:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"operator","nameLocation":"4887:8:11","nodeType":"VariableDeclaration","scope":3228,"src":"4879:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:11"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"4920:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:11"},"scope":3229,"src":"4838:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3230,"src":"267:4661:11","usedErrors":[],"usedEvents":[3128,3137,3146]}],"src":"108:4821:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3247]},"id":3248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"142:154:12","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":3247,"linearizedBaseContracts":[3247],"name":"IERC721Receiver","nameLocation":"307:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"329:500:12","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3246,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:12","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"operator","nameLocation":"877:8:12","nodeType":"VariableDeclaration","scope":3246,"src":"869:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"from","nameLocation":"903:4:12","nodeType":"VariableDeclaration","scope":3246,"src":"895:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:12","nodeType":"VariableDeclaration","scope":3246,"src":"917:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"data","nameLocation":"957:4:12","nodeType":"VariableDeclaration","scope":3246,"src":"942:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3240,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:12"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"986:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3243,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:12"},"scope":3247,"src":"834:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3248,"src":"297:699:12","usedErrors":[],"usedEvents":[]}],"src":"116:881:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3229],"IERC721Metadata":[3275]},"id":3276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3230,"src":"153:39:13","symbolAliases":[{"foreign":{"id":3250,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3253,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":3229,"src":"357:7:13"},"id":3254,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3275,"linearizedBaseContracts":[3275,3229,5834],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3260,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":3275,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3266,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3266,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3263,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":3275,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3274,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":3274,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3271,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":3275,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3276,"src":"328:463:13","usedErrors":[],"usedEvents":[3128,3137,3146]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3352],"IERC721Errors":[237],"IERC721Receiver":[3247]},"id":3353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3277,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3353,"sourceUnit":3248,"src":"144:55:14","symbolAliases":[{"foreign":{"id":3278,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3353,"sourceUnit":285,"src":"200:69:14","symbolAliases":[{"foreign":{"id":3280,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3352,"linearizedBaseContracts":[3352],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3350,"nodeType":"Block","src":"1151:758:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3296,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1165:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:14","memberName":"code","nodeType":"MemberAccess","src":"1165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:14","memberName":"length","nodeType":"MemberAccess","src":"1165:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"1161:742:14","trueBody":{"id":3348,"nodeType":"Block","src":"1185:718:14","statements":[{"clauses":[{"block":{"id":3326,"nodeType":"Block","src":"1295:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1317:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3314,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"1327:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3247_$","typeString":"type(contract IERC721Receiver)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3246,"src":"1327:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3325,"nodeType":"IfStatement","src":"1313:182:14","trueBody":{"id":3324,"nodeType":"Block","src":"1370:125:14","statements":[{"errorCall":{"arguments":[{"id":3321,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1473:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3318,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1437:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1437:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3323,"nodeType":"RevertStatement","src":"1430:46:14"}]}}]},"errorName":"","id":3327,"nodeType":"TryCatchClause","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"retval","nameLocation":"1287:6:14","nodeType":"VariableDeclaration","scope":3327,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3310,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:14"},"src":"1271:238:14"},{"block":{"id":3345,"nodeType":"Block","src":"1538:355:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3331,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1560:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:14","memberName":"length","nodeType":"MemberAccess","src":"1560:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3343,"nodeType":"Block","src":"1728:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:14","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:14"},"nodeType":"YulFunctionCall","src":"1808:15:14"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:14"},"nodeType":"YulFunctionCall","src":"1825:13:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:14"},"nodeType":"YulFunctionCall","src":"1801:38:14"},"nodeType":"YulExpressionStatement","src":"1801:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1816:6:14","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1831:6:14","valueSize":1}],"flags":["memory-safe"],"id":3342,"nodeType":"InlineAssembly","src":"1750:111:14"}]},"id":3344,"nodeType":"IfStatement","src":"1556:323:14","trueBody":{"id":3341,"nodeType":"Block","src":"1580:142:14","statements":[{"errorCall":{"arguments":[{"id":3338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1700:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3335,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1664:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1664:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"RevertStatement","src":"1657:46:14"}]}}]},"errorName":"","id":3346,"nodeType":"TryCatchClause","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"reason","nameLocation":"1530:6:14","nodeType":"VariableDeclaration","scope":3346,"src":"1517:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:14"},"src":"1510:383:14"}],"externalCall":{"arguments":[{"id":3305,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"1240:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1250:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"1256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1265:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1219:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3301,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"1203:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3247_$","typeString":"type(contract IERC721Receiver)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3247","typeString":"contract IERC721Receiver"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3246,"src":"1203:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3347,"nodeType":"TryStatement","src":"1199:694:14"}]}}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"457:523:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:14","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"operator","nameLocation":"1033:8:14","nodeType":"VariableDeclaration","scope":3351,"src":"1025:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"from","nameLocation":"1059:4:14","nodeType":"VariableDeclaration","scope":3351,"src":"1051:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"to","nameLocation":"1081:2:14","nodeType":"VariableDeclaration","scope":3351,"src":"1073:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:14","nodeType":"VariableDeclaration","scope":3351,"src":"1093:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"data","nameLocation":"1131:4:14","nodeType":"VariableDeclaration","scope":3351,"src":"1118:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3292,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:14"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"1151:0:14"},"scope":3352,"src":"985:924:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3353,"src":"431:1480:14","usedErrors":[],"usedEvents":[]}],"src":"118:1794:14"},"id":14},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4230],"Comparators":[4262],"Math":[7440],"SlotDerivation":[4474],"StorageSlot":[4598]},"id":4231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3354,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4231,"sourceUnit":4263,"src":"209:46:15","symbolAliases":[{"foreign":{"id":3355,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"217:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4231,"sourceUnit":4475,"src":"256:52:15","symbolAliases":[{"foreign":{"id":3357,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"264:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4231,"sourceUnit":4599,"src":"309:46:15","symbolAliases":[{"foreign":{"id":3359,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"317:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4231,"sourceUnit":7441,"src":"356:37:15","symbolAliases":[{"foreign":{"id":3361,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"364:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"395:63:15","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4230,"linearizedBaseContracts":[4230],"name":"Arrays","nameLocation":"467:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3366,"libraryName":{"id":3364,"name":"SlotDerivation","nameLocations":["486:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":4474,"src":"486:14:15"},"nodeType":"UsingForDirective","src":"480:33:15","typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3369,"libraryName":{"id":3367,"name":"StorageSlot","nameLocations":["524:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"524:11:15"},"nodeType":"UsingForDirective","src":"518:30:15","typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3401,"nodeType":"Block","src":"1628:83:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3391,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1656:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3390,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"1649:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3394,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1669:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3393,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"1664:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3396,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1677:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3389,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1638:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"ExpressionStatement","src":"1638:44:15"},{"expression":{"id":3399,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1699:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3388,"id":3400,"nodeType":"Return","src":"1692:12:15"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"554:915:15","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:15","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"array","nameLocation":"1514:5:15","nodeType":"VariableDeclaration","scope":3402,"src":"1497:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ArrayTypeName","src":"1497:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"comp","nameLocation":"1576:4:15","nodeType":"VariableDeclaration","scope":3402,"src":"1529:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3382,"nodeType":"FunctionTypeName","parameterTypes":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1538:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1547:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:15"},"returnParameterTypes":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1570:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3379,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:15"},"src":"1529:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:15"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"1610:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"nodeType":"ArrayTypeName","src":"1610:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:15"},"scope":4230,"src":"1474:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3420,"nodeType":"Block","src":"1894:66:15","statements":[{"expression":{"arguments":[{"id":3413,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1909:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3414,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"1916:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4262_$","typeString":"type(library Comparators)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4247,"src":"1916:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3412,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"1904:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3417,"nodeType":"ExpressionStatement","src":"1904:27:15"},{"expression":{"id":3418,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1948:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3411,"id":3419,"nodeType":"Return","src":"1941:12:15"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"1717:93:15","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:15","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"array","nameLocation":"1846:5:15","nodeType":"VariableDeclaration","scope":3421,"src":"1829:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ArrayTypeName","src":"1829:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:15"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"1876:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ArrayTypeName","src":"1876:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:15"},"scope":4230,"src":"1815:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3452,"nodeType":"Block","src":"3040:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3443,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"3075:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3442,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3678,"src":"3055:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3446,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3102:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3445,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3716,3742],"referencedDeclaration":3716,"src":"3083:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3441,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"3050:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3449,"nodeType":"ExpressionStatement","src":"3050:58:15"},{"expression":{"id":3450,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"3125:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3440,"id":3451,"nodeType":"Return","src":"3118:12:15"}]},"documentation":{"id":3422,"nodeType":"StructuredDocumentation","src":"1966:915:15","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:15","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"array","nameLocation":"2926:5:15","nodeType":"VariableDeclaration","scope":3453,"src":"2909:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3424,"nodeType":"ArrayTypeName","src":"2909:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"comp","nameLocation":"2988:4:15","nodeType":"VariableDeclaration","scope":3453,"src":"2941:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3434,"nodeType":"FunctionTypeName","parameterTypes":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2950:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2959:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:15"},"returnParameterTypes":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2982:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3431,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:15"},"src":"2941:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:15"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"3022:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3437,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3438,"nodeType":"ArrayTypeName","src":"3022:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:15"},"scope":4230,"src":"2886:251:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"3320:87:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3465,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"3355:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3464,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3678,"src":"3335:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3467,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"3363:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4262_$","typeString":"type(library Comparators)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4247,"src":"3363:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3463,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"3330:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3470,"nodeType":"ExpressionStatement","src":"3330:48:15"},{"expression":{"id":3471,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"3395:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3462,"id":3472,"nodeType":"Return","src":"3388:12:15"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"3143:93:15","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:15","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"array","nameLocation":"3272:5:15","nodeType":"VariableDeclaration","scope":3474,"src":"3255:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3456,"nodeType":"ArrayTypeName","src":"3255:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:15"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"3302:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3460,"nodeType":"ArrayTypeName","src":"3302:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:15"},"scope":4230,"src":"3241:166:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"4487:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3496,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4522:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3495,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3690,"src":"4502:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3499,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"4549:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3498,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3716,3742],"referencedDeclaration":3742,"src":"4530:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3494,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"4497:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3502,"nodeType":"ExpressionStatement","src":"4497:58:15"},{"expression":{"id":3503,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4572:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3493,"id":3504,"nodeType":"Return","src":"4565:12:15"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"3413:915:15","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:15","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"array","nameLocation":"4373:5:15","nodeType":"VariableDeclaration","scope":3506,"src":"4356:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3477,"nodeType":"ArrayTypeName","src":"4356:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"comp","nameLocation":"4435:4:15","nodeType":"VariableDeclaration","scope":3506,"src":"4388:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3487,"nodeType":"FunctionTypeName","parameterTypes":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4397:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4406:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:15"},"returnParameterTypes":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4429:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3484,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:15"},"src":"4388:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:15"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"4469:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3491,"nodeType":"ArrayTypeName","src":"4469:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:15"},"scope":4230,"src":"4333:251:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"4767:87:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3518,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4802:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3517,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3690,"src":"4782:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3520,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"4810:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4262_$","typeString":"type(library Comparators)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4247,"src":"4810:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3516,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"4777:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3523,"nodeType":"ExpressionStatement","src":"4777:48:15"},{"expression":{"id":3524,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4842:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3515,"id":3525,"nodeType":"Return","src":"4835:12:15"}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"4590:93:15","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:15","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"array","nameLocation":"4719:5:15","nodeType":"VariableDeclaration","scope":3527,"src":"4702:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3509,"nodeType":"ArrayTypeName","src":"4702:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:15"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"4749:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3513,"nodeType":"ArrayTypeName","src":"4749:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:15"},"scope":4230,"src":"4688:166:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3614,"nodeType":"Block","src":"5470:889:15","statements":[{"id":3613,"nodeType":"UncheckedBlock","src":"5480:873:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5508:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3546,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5514:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"IfStatement","src":"5504:31:15","trueBody":{"functionReturnParameters":3544,"id":3550,"nodeType":"Return","src":"5528:7:15"}},{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:15","nodeType":"VariableDeclaration","scope":3613,"src":"5591:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3557,"initialValue":{"arguments":[{"id":3555,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5614:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"5607:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:15"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"pos","nameLocation":"5715:3:15","nodeType":"VariableDeclaration","scope":3613,"src":"5707:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3561,"initialValue":{"id":3560,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5721:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:15"},{"body":{"id":3592,"nodeType":"Block","src":"5795:331:15","statements":[{"condition":{"arguments":[{"arguments":[{"id":3577,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5829:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3576,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"5822:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3579,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3575,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"5817:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"5813:299:15","trueBody":{"id":3590,"nodeType":"Block","src":"5842:270:15","statements":[{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6046:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"6046:11:15"},{"expression":{"arguments":[{"id":3586,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6085:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3587,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"6090:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"6079:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3589,"nodeType":"ExpressionStatement","src":"6079:14:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5773:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3569,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5778:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"initializationExpression":{"assignments":[3563],"declarations":[{"constant":false,"id":3563,"mutability":"mutable","name":"it","nameLocation":"5754:2:15","nodeType":"VariableDeclaration","scope":3593,"src":"5746:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3567,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5759:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:15"},"loopExpression":{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3571,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5783:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"5783:10:15"},"nodeType":"ForStatement","src":"5741:385:15"},{"expression":{"arguments":[{"id":3595,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6146:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3596,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6153:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3594,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"6140:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"6140:17:15"},{"expression":{"arguments":[{"id":3600,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6207:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3601,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6214:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"6219:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3599,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6196:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3604,"nodeType":"ExpressionStatement","src":"6196:28:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6284:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3609,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6296:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3610,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"6301:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3605,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6273:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"ExpressionStatement","src":"6273:33:15"}]}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"4860:491:15","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:15","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"begin","nameLocation":"5384:5:15","nodeType":"VariableDeclaration","scope":3615,"src":"5376:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"end","nameLocation":"5399:3:15","nodeType":"VariableDeclaration","scope":3615,"src":"5391:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"comp","nameLocation":"5451:4:15","nodeType":"VariableDeclaration","scope":3615,"src":"5404:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3541,"nodeType":"FunctionTypeName","parameterTypes":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5413:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5422:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:15"},"returnParameterTypes":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5445:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3538,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:15"},"src":"5404:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:15"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[],"src":"5470:0:15"},"scope":4230,"src":"5356:1003:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3625,"nodeType":"Block","src":"6532:88:15","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:15","statements":[{"nodeType":"YulAssignment","src":"6581:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:15"},"nodeType":"YulFunctionCall","src":"6588:16:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3619,"isOffset":false,"isSlot":false,"src":"6592:5:15","valueSize":1},{"declaration":3622,"isOffset":false,"isSlot":false,"src":"6581:3:15","valueSize":1}],"flags":["memory-safe"],"id":3624,"nodeType":"InlineAssembly","src":"6542:72:15"}]},"documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"6365:87:15","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3626,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:15","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"array","nameLocation":"6490:5:15","nodeType":"VariableDeclaration","scope":3626,"src":"6473:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ArrayTypeName","src":"6473:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:15"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:15","nodeType":"VariableDeclaration","scope":3626,"src":"6519:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:15"},"scope":4230,"src":"6457:163:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3645,"nodeType":"Block","src":"6892:93:15","statements":[{"id":3644,"nodeType":"UncheckedBlock","src":"6902:77:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3636,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6940:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3635,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"6933:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3638,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6949:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:15","memberName":"length","nodeType":"MemberAccess","src":"6949:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3634,"id":3643,"nodeType":"Return","src":"6926:42:15"}]}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"6626:188:15","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3646,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:15","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"array","nameLocation":"6850:5:15","nodeType":"VariableDeclaration","scope":3646,"src":"6833:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ArrayTypeName","src":"6833:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:15"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:15","nodeType":"VariableDeclaration","scope":3646,"src":"6879:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:15"},"scope":4230,"src":"6819:166:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3655,"nodeType":"Block","src":"7136:68:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:15","statements":[{"nodeType":"YulAssignment","src":"7169:19:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:15"},"nodeType":"YulFunctionCall","src":"7178:10:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"7184:3:15","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"7169:5:15","valueSize":1}],"id":3654,"nodeType":"InlineAssembly","src":"7146:52:15"}]},"documentation":{"id":3647,"nodeType":"StructuredDocumentation","src":"6991:74:15","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:15","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:15","nodeType":"VariableDeclaration","scope":3656,"src":"7086:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:15"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"7129:5:15","nodeType":"VariableDeclaration","scope":3656,"src":"7121:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:15"},"scope":4230,"src":"7070:134:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3665,"nodeType":"Block","src":"7348:178:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:15","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:15"},"nodeType":"YulFunctionCall","src":"7395:11:15"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:15","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:15"},"nodeType":"YulFunctionCall","src":"7433:11:15"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:15","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:15"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:15"},"nodeType":"YulFunctionCall","src":"7457:20:15"},"nodeType":"YulExpressionStatement","src":"7457:20:15"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:15"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:15"},"nodeType":"YulFunctionCall","src":"7490:20:15"},"nodeType":"YulExpressionStatement","src":"7490:20:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3659,"isOffset":false,"isSlot":false,"src":"7401:4:15","valueSize":1},{"declaration":3659,"isOffset":false,"isSlot":false,"src":"7464:4:15","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"7439:4:15","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"7497:4:15","valueSize":1}],"id":3664,"nodeType":"InlineAssembly","src":"7358:162:15"}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"7210:77:15","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:15","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:15","nodeType":"VariableDeclaration","scope":3666,"src":"7307:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:15","nodeType":"VariableDeclaration","scope":3666,"src":"7321:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:15"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[],"src":"7348:0:15"},"scope":4230,"src":"7292:234:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3677,"nodeType":"Block","src":"7713:64:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:15","statements":[{"nodeType":"YulAssignment","src":"7746:15:15","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:15"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3670,"isOffset":false,"isSlot":false,"src":"7756:5:15","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"7746:6:15","valueSize":1}],"id":3676,"nodeType":"InlineAssembly","src":"7723:48:15"}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"7532:76:15","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:15","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"input","nameLocation":"7659:5:15","nodeType":"VariableDeclaration","scope":3678,"src":"7642:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3669,"nodeType":"ArrayTypeName","src":"7642:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:15"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"output","nameLocation":"7705:6:15","nodeType":"VariableDeclaration","scope":3678,"src":"7688:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ArrayTypeName","src":"7688:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:15"},"scope":4230,"src":"7613:164:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3689,"nodeType":"Block","src":"7964:64:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:15","statements":[{"nodeType":"YulAssignment","src":"7997:15:15","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:15"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3682,"isOffset":false,"isSlot":false,"src":"8007:5:15","valueSize":1},{"declaration":3686,"isOffset":false,"isSlot":false,"src":"7997:6:15","valueSize":1}],"id":3688,"nodeType":"InlineAssembly","src":"7974:48:15"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"7783:76:15","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:15","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"input","nameLocation":"7910:5:15","nodeType":"VariableDeclaration","scope":3690,"src":"7893:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3681,"nodeType":"ArrayTypeName","src":"7893:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:15"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"output","nameLocation":"7956:6:15","nodeType":"VariableDeclaration","scope":3690,"src":"7939:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ArrayTypeName","src":"7939:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:15"},"scope":4230,"src":"7864:164:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3715,"nodeType":"Block","src":"8290:64:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:15","statements":[{"nodeType":"YulAssignment","src":"8323:15:15","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:15"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3701,"isOffset":false,"isSlot":false,"src":"8333:5:15","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"8323:6:15","valueSize":1}],"id":3714,"nodeType":"InlineAssembly","src":"8300:48:15"}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"8034:78:15","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:15","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"input","nameLocation":"8201:5:15","nodeType":"VariableDeclaration","scope":3716,"src":"8154:52:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3700,"nodeType":"FunctionTypeName","parameterTypes":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8163:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3692,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8172:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3694,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:15"},"returnParameterTypes":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8195:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:15"},"src":"8154:52:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:15"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"output","nameLocation":"8282:6:15","nodeType":"VariableDeclaration","scope":3716,"src":"8235:53:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3711,"nodeType":"FunctionTypeName","parameterTypes":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8244:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8253:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:15"},"returnParameterTypes":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8276:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3708,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:15"},"src":"8235:53:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:15"},"scope":4230,"src":"8117:237:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3741,"nodeType":"Block","src":"8616:64:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:15","statements":[{"nodeType":"YulAssignment","src":"8649:15:15","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:15"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3727,"isOffset":false,"isSlot":false,"src":"8659:5:15","valueSize":1},{"declaration":3738,"isOffset":false,"isSlot":false,"src":"8649:6:15","valueSize":1}],"id":3740,"nodeType":"InlineAssembly","src":"8626:48:15"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"8360:78:15","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:15","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"input","nameLocation":"8527:5:15","nodeType":"VariableDeclaration","scope":3742,"src":"8480:52:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3726,"nodeType":"FunctionTypeName","parameterTypes":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8489:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8498:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:15"},"returnParameterTypes":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8521:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:15"},"src":"8480:52:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:15"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"output","nameLocation":"8608:6:15","nodeType":"VariableDeclaration","scope":3742,"src":"8561:53:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3737,"nodeType":"FunctionTypeName","parameterTypes":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8570:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8579:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:15"},"returnParameterTypes":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8602:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:15"},"src":"8561:53:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:15"},"scope":4230,"src":"8443:237:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3824,"nodeType":"Block","src":"9405:834:15","statements":[{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"low","nameLocation":"9423:3:15","nodeType":"VariableDeclaration","scope":3824,"src":"9415:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:15"},{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"high","nameLocation":"9448:4:15","nodeType":"VariableDeclaration","scope":3824,"src":"9440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3761,"initialValue":{"expression":{"id":3759,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"9455:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:15","memberName":"length","nodeType":"MemberAccess","src":"9455:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9482:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3768,"nodeType":"IfStatement","src":"9478:48:15","trueBody":{"id":3767,"nodeType":"Block","src":"9493:33:15","statements":[{"expression":{"hexValue":"30","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3752,"id":3766,"nodeType":"Return","src":"9507:8:15"}]}},{"body":{"id":3800,"nodeType":"Block","src":"9555:423:15","statements":[{"assignments":[3773],"declarations":[{"constant":false,"id":3773,"mutability":"mutable","name":"mid","nameLocation":"9577:3:15","nodeType":"VariableDeclaration","scope":3800,"src":"9569:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3779,"initialValue":{"arguments":[{"id":3776,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9596:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3777,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9601:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"9583:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"9583:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3781,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"9844:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3782,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3780,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157],"referencedDeclaration":4157,"src":"9831:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4489_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"9831:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3785,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3798,"nodeType":"Block","src":"9922:46:15","statements":[{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9940:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9946:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"9940:13:15"}]},"id":3799,"nodeType":"IfStatement","src":"9827:141:15","trueBody":{"id":3791,"nodeType":"Block","src":"9873:43:15","statements":[{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9891:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3788,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9898:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"9891:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9543:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3770,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9549:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3801,"nodeType":"WhileStatement","src":"9536:442:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10095:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3806,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"10119:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10126:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3805,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157],"referencedDeclaration":4157,"src":"10106:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4489_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"10106:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3812,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3822,"nodeType":"Block","src":"10198:35:15","statements":[{"expression":{"id":3820,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10219:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3821,"nodeType":"Return","src":"10212:10:15"}]},"id":3823,"nodeType":"IfStatement","src":"10091:142:15","trueBody":{"id":3819,"nodeType":"Block","src":"10153:39:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10174:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3818,"nodeType":"Return","src":"10167:14:15"}]}}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"8686:616:15","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:15","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"array","nameLocation":"9349:5:15","nodeType":"VariableDeclaration","scope":3825,"src":"9331:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ArrayTypeName","src":"9331:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"element","nameLocation":"9364:7:15","nodeType":"VariableDeclaration","scope":3825,"src":"9356:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:15"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"9396:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:15"},"scope":4230,"src":"9307:932:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"10756:709:15","statements":[{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"low","nameLocation":"10774:3:15","nodeType":"VariableDeclaration","scope":3888,"src":"10766:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3839,"initialValue":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:15"},{"assignments":[3841],"declarations":[{"constant":false,"id":3841,"mutability":"mutable","name":"high","nameLocation":"10799:4:15","nodeType":"VariableDeclaration","scope":3888,"src":"10791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3844,"initialValue":{"expression":{"id":3842,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"10806:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:15","memberName":"length","nodeType":"MemberAccess","src":"10806:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10833:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"10829:48:15","trueBody":{"id":3850,"nodeType":"Block","src":"10844:33:15","statements":[{"expression":{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3835,"id":3849,"nodeType":"Return","src":"10858:8:15"}]}},{"body":{"id":3884,"nodeType":"Block","src":"10906:532:15","statements":[{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"mid","nameLocation":"10928:3:15","nodeType":"VariableDeclaration","scope":3884,"src":"10920:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3862,"initialValue":{"arguments":[{"id":3859,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"10947:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3860,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10952:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3857,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"10934:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"10934:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3864,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"11195:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3865,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11202:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3863,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157],"referencedDeclaration":4157,"src":"11182:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4489_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"11182:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3868,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"11215:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3882,"nodeType":"Block","src":"11385:43:15","statements":[{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"11403:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3879,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11410:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"11403:10:15"}]},"id":3883,"nodeType":"IfStatement","src":"11178:250:15","trueBody":{"id":3877,"nodeType":"Block","src":"11224:155:15","statements":[{"id":3876,"nodeType":"UncheckedBlock","src":"11301:64:15","statements":[{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11333:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"11333:13:15"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"10894:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3853,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10900:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"WhileStatement","src":"10887:551:15"},{"expression":{"id":3886,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11455:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3835,"id":3887,"nodeType":"Return","src":"11448:10:15"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"10245:412:15","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:15","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"array","nameLocation":"10700:5:15","nodeType":"VariableDeclaration","scope":3889,"src":"10682:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ArrayTypeName","src":"10682:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"element","nameLocation":"10715:7:15","nodeType":"VariableDeclaration","scope":3889,"src":"10707:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:15"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"10747:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:15"},"scope":4230,"src":"10662:803:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3952,"nodeType":"Block","src":"11982:709:15","statements":[{"assignments":[3901],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"low","nameLocation":"12000:3:15","nodeType":"VariableDeclaration","scope":3952,"src":"11992:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3903,"initialValue":{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:15"},{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"high","nameLocation":"12025:4:15","nodeType":"VariableDeclaration","scope":3952,"src":"12017:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3908,"initialValue":{"expression":{"id":3906,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"12032:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:15","memberName":"length","nodeType":"MemberAccess","src":"12032:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12059:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"12055:48:15","trueBody":{"id":3914,"nodeType":"Block","src":"12070:33:15","statements":[{"expression":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3899,"id":3913,"nodeType":"Return","src":"12084:8:15"}]}},{"body":{"id":3948,"nodeType":"Block","src":"12132:532:15","statements":[{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"mid","nameLocation":"12154:3:15","nodeType":"VariableDeclaration","scope":3948,"src":"12146:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3926,"initialValue":{"arguments":[{"id":3923,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12173:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3924,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12178:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3921,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"12160:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"12160:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3928,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"12421:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3929,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12428:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3927,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157],"referencedDeclaration":4157,"src":"12408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4489_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"12408:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3932,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"12441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3946,"nodeType":"Block","src":"12499:155:15","statements":[{"id":3945,"nodeType":"UncheckedBlock","src":"12576:64:15","statements":[{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12608:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12614:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"12608:13:15"}]}]},"id":3947,"nodeType":"IfStatement","src":"12404:250:15","trueBody":{"id":3938,"nodeType":"Block","src":"12450:43:15","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3934,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12468:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3935,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12475:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"12468:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12120:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3917,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12126:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3949,"nodeType":"WhileStatement","src":"12113:551:15"},{"expression":{"id":3950,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3899,"id":3951,"nodeType":"Return","src":"12674:10:15"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"11471:412:15","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3953,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:15","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"array","nameLocation":"11926:5:15","nodeType":"VariableDeclaration","scope":3953,"src":"11908:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3892,"nodeType":"ArrayTypeName","src":"11908:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"element","nameLocation":"11941:7:15","nodeType":"VariableDeclaration","scope":3953,"src":"11933:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:15"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3953,"src":"11973:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:15"},"scope":4230,"src":"11888:803:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"12875:709:15","statements":[{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"low","nameLocation":"12893:3:15","nodeType":"VariableDeclaration","scope":4015,"src":"12885:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3967,"initialValue":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:15"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"high","nameLocation":"12918:4:15","nodeType":"VariableDeclaration","scope":4015,"src":"12910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"expression":{"id":3970,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"12925:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:15","memberName":"length","nodeType":"MemberAccess","src":"12925:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"12952:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"nodeType":"IfStatement","src":"12948:48:15","trueBody":{"id":3978,"nodeType":"Block","src":"12963:33:15","statements":[{"expression":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3963,"id":3977,"nodeType":"Return","src":"12977:8:15"}]}},{"body":{"id":4011,"nodeType":"Block","src":"13025:532:15","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"mid","nameLocation":"13047:3:15","nodeType":"VariableDeclaration","scope":4011,"src":"13039:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3990,"initialValue":{"arguments":[{"id":3987,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13066:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3988,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13071:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3985,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"13053:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"13053:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3992,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"13320:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3993,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13327:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3991,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4170,4183,4196],"referencedDeclaration":4196,"src":"13301:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3995,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"13334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4009,"nodeType":"Block","src":"13504:43:15","statements":[{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13522:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4006,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13529:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"13522:10:15"}]},"id":4010,"nodeType":"IfStatement","src":"13297:250:15","trueBody":{"id":4004,"nodeType":"Block","src":"13343:155:15","statements":[{"id":4003,"nodeType":"UncheckedBlock","src":"13420:64:15","statements":[{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3997,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13452:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"13452:13:15"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13013:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3981,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13019:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4012,"nodeType":"WhileStatement","src":"13006:551:15"},{"expression":{"id":4013,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13574:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3963,"id":4014,"nodeType":"Return","src":"13567:10:15"}]},"documentation":{"id":3954,"nodeType":"StructuredDocumentation","src":"12697:74:15","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:15","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"array","nameLocation":"12819:5:15","nodeType":"VariableDeclaration","scope":4016,"src":"12802:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ArrayTypeName","src":"12802:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"element","nameLocation":"12834:7:15","nodeType":"VariableDeclaration","scope":4016,"src":"12826:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:15"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"12866:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:15"},"scope":4230,"src":"12776:808:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"13768:709:15","statements":[{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"low","nameLocation":"13786:3:15","nodeType":"VariableDeclaration","scope":4078,"src":"13778:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4030,"initialValue":{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:15"},{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"high","nameLocation":"13811:4:15","nodeType":"VariableDeclaration","scope":4078,"src":"13803:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4035,"initialValue":{"expression":{"id":4033,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"13818:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:15","memberName":"length","nodeType":"MemberAccess","src":"13818:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13845:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"IfStatement","src":"13841:48:15","trueBody":{"id":4041,"nodeType":"Block","src":"13856:33:15","statements":[{"expression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4026,"id":4040,"nodeType":"Return","src":"13870:8:15"}]}},{"body":{"id":4074,"nodeType":"Block","src":"13918:532:15","statements":[{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"mid","nameLocation":"13940:3:15","nodeType":"VariableDeclaration","scope":4074,"src":"13932:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4053,"initialValue":{"arguments":[{"id":4050,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"13959:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4051,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13964:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4048,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"13946:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"13946:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4055,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"14213:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4056,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14220:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4054,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4170,4183,4196],"referencedDeclaration":4196,"src":"14194:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4058,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"14227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4072,"nodeType":"Block","src":"14285:155:15","statements":[{"id":4071,"nodeType":"UncheckedBlock","src":"14362:64:15","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"14394:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14400:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"14394:13:15"}]}]},"id":4073,"nodeType":"IfStatement","src":"14190:250:15","trueBody":{"id":4064,"nodeType":"Block","src":"14236:43:15","statements":[{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"14254:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4061,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14261:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"14254:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"13906:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4044,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13912:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4075,"nodeType":"WhileStatement","src":"13899:551:15"},{"expression":{"id":4076,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"14467:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4026,"id":4077,"nodeType":"Return","src":"14460:10:15"}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"13590:74:15","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:15","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"array","nameLocation":"13712:5:15","nodeType":"VariableDeclaration","scope":4079,"src":"13695:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4019,"nodeType":"ArrayTypeName","src":"13695:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"element","nameLocation":"13727:7:15","nodeType":"VariableDeclaration","scope":4079,"src":"13719:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:15"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"13759:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:15"},"scope":4230,"src":"13669:808:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"14793:167:15","statements":[{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"slot","nameLocation":"14811:4:15","nodeType":"VariableDeclaration","scope":4104,"src":"14803:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4093,"nodeType":"VariableDeclarationStatement","src":"14803:12:15"},{"AST":{"nodeType":"YulBlock","src":"14850:40:15","statements":[{"nodeType":"YulAssignment","src":"14864:16:15","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4083,"isOffset":false,"isSlot":true,"src":"14872:8:15","suffix":"slot","valueSize":1},{"declaration":4092,"isOffset":false,"isSlot":false,"src":"14864:4:15","valueSize":1}],"flags":["memory-safe"],"id":4094,"nodeType":"InlineAssembly","src":"14825:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4099,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"14932:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4095,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14906:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4389,"src":"14906:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4379,"src":"14906:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4509,"src":"14906:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4480_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4480_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4090,"id":4103,"nodeType":"Return","src":"14899:54:15"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"14483:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:15","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"arr","nameLocation":"14719:3:15","nodeType":"VariableDeclaration","scope":4105,"src":"14701:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4082,"nodeType":"ArrayTypeName","src":"14701:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"pos","nameLocation":"14732:3:15","nodeType":"VariableDeclaration","scope":4105,"src":"14724:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:15"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"14760:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4480_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:15","14772:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4480,"src":"14760:23:15"},"referencedDeclaration":4480,"src":"14760:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4480_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:15"},"scope":4230,"src":"14679:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"15276:167:15","statements":[{"assignments":[4118],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"slot","nameLocation":"15294:4:15","nodeType":"VariableDeclaration","scope":4130,"src":"15286:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4119,"nodeType":"VariableDeclarationStatement","src":"15286:12:15"},{"AST":{"nodeType":"YulBlock","src":"15333:40:15","statements":[{"nodeType":"YulAssignment","src":"15347:16:15","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4109,"isOffset":false,"isSlot":true,"src":"15355:8:15","suffix":"slot","valueSize":1},{"declaration":4118,"isOffset":false,"isSlot":false,"src":"15347:4:15","valueSize":1}],"flags":["memory-safe"],"id":4120,"nodeType":"InlineAssembly","src":"15308:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4125,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"15415:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4121,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"15389:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4389,"src":"15389:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4379,"src":"15389:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:15","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4531,"src":"15389:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4486_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4486_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4116,"id":4129,"nodeType":"Return","src":"15382:54:15"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"14966:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:15","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"arr","nameLocation":"15202:3:15","nodeType":"VariableDeclaration","scope":4131,"src":"15184:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4108,"nodeType":"ArrayTypeName","src":"15184:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"pos","nameLocation":"15215:3:15","nodeType":"VariableDeclaration","scope":4131,"src":"15207:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:15"},"returnParameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"15243:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4486_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:15","15255:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4486,"src":"15243:23:15"},"referencedDeclaration":4486,"src":"15243:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4486_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:15"},"scope":4230,"src":"15162:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"15759:167:15","statements":[{"assignments":[4144],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"slot","nameLocation":"15777:4:15","nodeType":"VariableDeclaration","scope":4156,"src":"15769:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4145,"nodeType":"VariableDeclarationStatement","src":"15769:12:15"},{"AST":{"nodeType":"YulBlock","src":"15816:40:15","statements":[{"nodeType":"YulAssignment","src":"15830:16:15","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4135,"isOffset":false,"isSlot":true,"src":"15838:8:15","suffix":"slot","valueSize":1},{"declaration":4144,"isOffset":false,"isSlot":false,"src":"15830:4:15","valueSize":1}],"flags":["memory-safe"],"id":4146,"nodeType":"InlineAssembly","src":"15791:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4151,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"15898:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4147,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"15872:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4389,"src":"15872:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4379,"src":"15872:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:15","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4542,"src":"15872:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4489_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4142,"id":4155,"nodeType":"Return","src":"15865:54:15"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"15449:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:15","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"arr","nameLocation":"15685:3:15","nodeType":"VariableDeclaration","scope":4157,"src":"15667:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4134,"nodeType":"ArrayTypeName","src":"15667:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"pos","nameLocation":"15698:3:15","nodeType":"VariableDeclaration","scope":4157,"src":"15690:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:15"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"15726:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4140,"nodeType":"UserDefinedTypeName","pathNode":{"id":4139,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:15","15738:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4489,"src":"15726:23:15"},"referencedDeclaration":4489,"src":"15726:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:15"},"scope":4230,"src":"15645:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4169,"nodeType":"Block","src":"16227:98:15","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:15","statements":[{"nodeType":"YulAssignment","src":"16260:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:15"},"nodeType":"YulFunctionCall","src":"16277:14:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:15"},"nodeType":"YulFunctionCall","src":"16293:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:15"},"nodeType":"YulFunctionCall","src":"16273:35:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:15"},"nodeType":"YulFunctionCall","src":"16267:42:15"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4161,"isOffset":false,"isSlot":false,"src":"16281:3:15","valueSize":1},{"declaration":4163,"isOffset":false,"isSlot":false,"src":"16297:3:15","valueSize":1},{"declaration":4166,"isOffset":false,"isSlot":false,"src":"16260:3:15","valueSize":1}],"id":4168,"nodeType":"InlineAssembly","src":"16237:82:15"}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"15932:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4170,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:15","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"arr","nameLocation":"16173:3:15","nodeType":"VariableDeclaration","scope":4170,"src":"16156:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4160,"nodeType":"ArrayTypeName","src":"16156:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"pos","nameLocation":"16186:3:15","nodeType":"VariableDeclaration","scope":4170,"src":"16178:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:15"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"res","nameLocation":"16222:3:15","nodeType":"VariableDeclaration","scope":4170,"src":"16214:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:15"},"scope":4230,"src":"16128:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"16626:98:15","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:15","statements":[{"nodeType":"YulAssignment","src":"16659:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:15"},"nodeType":"YulFunctionCall","src":"16676:14:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:15"},"nodeType":"YulFunctionCall","src":"16692:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:15"},"nodeType":"YulFunctionCall","src":"16672:35:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:15"},"nodeType":"YulFunctionCall","src":"16666:42:15"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4174,"isOffset":false,"isSlot":false,"src":"16680:3:15","valueSize":1},{"declaration":4176,"isOffset":false,"isSlot":false,"src":"16696:3:15","valueSize":1},{"declaration":4179,"isOffset":false,"isSlot":false,"src":"16659:3:15","valueSize":1}],"id":4181,"nodeType":"InlineAssembly","src":"16636:82:15"}]},"documentation":{"id":4171,"nodeType":"StructuredDocumentation","src":"16331:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:15","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"arr","nameLocation":"16572:3:15","nodeType":"VariableDeclaration","scope":4183,"src":"16555:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4173,"nodeType":"ArrayTypeName","src":"16555:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"pos","nameLocation":"16585:3:15","nodeType":"VariableDeclaration","scope":4183,"src":"16577:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:15"},"returnParameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"res","nameLocation":"16621:3:15","nodeType":"VariableDeclaration","scope":4183,"src":"16613:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:15"},"scope":4230,"src":"16527:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4195,"nodeType":"Block","src":"17025:98:15","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:15","statements":[{"nodeType":"YulAssignment","src":"17058:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:15"},"nodeType":"YulFunctionCall","src":"17075:14:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:15"},"nodeType":"YulFunctionCall","src":"17091:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:15"},"nodeType":"YulFunctionCall","src":"17071:35:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:15"},"nodeType":"YulFunctionCall","src":"17065:42:15"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4187,"isOffset":false,"isSlot":false,"src":"17079:3:15","valueSize":1},{"declaration":4189,"isOffset":false,"isSlot":false,"src":"17095:3:15","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"17058:3:15","valueSize":1}],"id":4194,"nodeType":"InlineAssembly","src":"17035:82:15"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"16730:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:15","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"arr","nameLocation":"16971:3:15","nodeType":"VariableDeclaration","scope":4196,"src":"16954:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ArrayTypeName","src":"16954:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"pos","nameLocation":"16984:3:15","nodeType":"VariableDeclaration","scope":4196,"src":"16976:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:15"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"res","nameLocation":"17020:3:15","nodeType":"VariableDeclaration","scope":4196,"src":"17012:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:15"},"scope":4230,"src":"16926:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4206,"nodeType":"Block","src":"17440:88:15","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:15"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:15"},"nodeType":"YulFunctionCall","src":"17489:23:15"},"nodeType":"YulExpressionStatement","src":"17489:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4200,"isOffset":false,"isSlot":true,"src":"17496:10:15","suffix":"slot","valueSize":1},{"declaration":4202,"isOffset":false,"isSlot":false,"src":"17508:3:15","valueSize":1}],"flags":["memory-safe"],"id":4205,"nodeType":"InlineAssembly","src":"17450:72:15"}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"17129:234:15","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4207,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:15","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"array","nameLocation":"17411:5:15","nodeType":"VariableDeclaration","scope":4207,"src":"17393:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4198,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4199,"nodeType":"ArrayTypeName","src":"17393:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"len","nameLocation":"17426:3:15","nodeType":"VariableDeclaration","scope":4207,"src":"17418:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:15"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[],"src":"17440:0:15"},"scope":4230,"src":"17368:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"17845:88:15","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:15"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:15"},"nodeType":"YulFunctionCall","src":"17894:23:15"},"nodeType":"YulExpressionStatement","src":"17894:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4211,"isOffset":false,"isSlot":true,"src":"17901:10:15","suffix":"slot","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"17913:3:15","valueSize":1}],"flags":["memory-safe"],"id":4216,"nodeType":"InlineAssembly","src":"17855:72:15"}]},"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"17534:234:15","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:15","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"array","nameLocation":"17816:5:15","nodeType":"VariableDeclaration","scope":4218,"src":"17798:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4210,"nodeType":"ArrayTypeName","src":"17798:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"len","nameLocation":"17831:3:15","nodeType":"VariableDeclaration","scope":4218,"src":"17823:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:15"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[],"src":"17845:0:15"},"scope":4230,"src":"17773:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"18250:88:15","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:15"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:15"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:15"},"nodeType":"YulFunctionCall","src":"18299:23:15"},"nodeType":"YulExpressionStatement","src":"18299:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4222,"isOffset":false,"isSlot":true,"src":"18306:10:15","suffix":"slot","valueSize":1},{"declaration":4224,"isOffset":false,"isSlot":false,"src":"18318:3:15","valueSize":1}],"flags":["memory-safe"],"id":4227,"nodeType":"InlineAssembly","src":"18260:72:15"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"17939:234:15","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:15","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"array","nameLocation":"18221:5:15","nodeType":"VariableDeclaration","scope":4229,"src":"18203:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ArrayTypeName","src":"18203:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"len","nameLocation":"18236:3:15","nodeType":"VariableDeclaration","scope":4229,"src":"18228:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:15"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[],"src":"18250:0:15"},"scope":4230,"src":"18178:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4231,"src":"459:17881:15","usedErrors":[],"usedEvents":[]}],"src":"183:18158:15"},"id":15},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4262]},"id":4263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"131:92:16","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4262,"linearizedBaseContracts":[4262],"name":"Comparators","nameLocation":"232:11:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":4246,"nodeType":"Block","src":"313:29:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"330:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"334:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4241,"id":4245,"nodeType":"Return","src":"323:12:16"}]},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:16","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"a","nameLocation":"270:1:16","nodeType":"VariableDeclaration","scope":4247,"src":"262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"b","nameLocation":"281:1:16","nodeType":"VariableDeclaration","scope":4247,"src":"273:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:16"},"returnParameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"307:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:16"},"scope":4262,"src":"250:92:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"411:29:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"428:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"432:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4255,"id":4259,"nodeType":"Return","src":"421:12:16"}]},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:16","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"a","nameLocation":"368:1:16","nodeType":"VariableDeclaration","scope":4261,"src":"360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"b","nameLocation":"379:1:16","nodeType":"VariableDeclaration","scope":4261,"src":"371:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:16"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"405:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4253,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:16"},"scope":4262,"src":"348:92:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4263,"src":"224:218:16","usedErrors":[],"usedEvents":[]}],"src":"105:338:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4292]},"id":4293,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4264,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4292,"linearizedBaseContracts":[4292],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":4273,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":4270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4269,"id":4272,"nodeType":"Return","src":"728:17:17"}]},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4274,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4267,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":4292,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4282,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":4279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4278,"id":4281,"nodeType":"Return","src":"835:15:17"}]},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4283,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4276,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":4292,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4290,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4287,"id":4289,"nodeType":"Return","src":"945:8:17"}]},"id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4291,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":4292,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4293,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4344]},"id":4345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4294,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4344,"linearizedBaseContracts":[4344],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":4299,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":4344,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":4303,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":4344,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4304,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":4307,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":4344,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4308,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":4311,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":4344,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":4315,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":4344,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":4319,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":4344,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":4323,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":4344,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4324,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":4327,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":4344,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":4331,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":4344,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":4335,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":4344,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4342,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:18"},"nodeType":"YulFunctionCall","src":"1868:24:18"},"nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:18"},"nodeType":"YulFunctionCall","src":"1905:18:18"},"nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:18"},"nodeType":"YulFunctionCall","src":"1936:18:18"},"nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4338,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":4341,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4343,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":4343,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":4344,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4345,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4474]},"id":4475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4346,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"225:1372:19","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4474,"linearizedBaseContracts":[4474],"name":"SlotDerivation","nameLocation":"1606:14:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4356,"nodeType":"Block","src":"1789:194:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:19"},"nodeType":"YulFunctionCall","src":"1865:20:19"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:19"},"nodeType":"YulFunctionCall","src":"1887:16:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:19"},"nodeType":"YulFunctionCall","src":"1855:49:19"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:19"},"nodeType":"YulFunctionCall","src":"1851:57:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:19"},"nodeType":"YulFunctionCall","src":"1838:71:19"},"nodeType":"YulExpressionStatement","src":"1838:71:19"},{"nodeType":"YulAssignment","src":"1922:45:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:19"},"nodeType":"YulFunctionCall","src":"1934:21:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:19","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:19"},"nodeType":"YulFunctionCall","src":"1957:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:19"},"nodeType":"YulFunctionCall","src":"1930:37:19"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4350,"isOffset":false,"isSlot":false,"src":"1869:9:19","valueSize":1},{"declaration":4350,"isOffset":false,"isSlot":false,"src":"1893:9:19","valueSize":1},{"declaration":4353,"isOffset":false,"isSlot":false,"src":"1922:4:19","valueSize":1}],"flags":["memory-safe"],"id":4355,"nodeType":"InlineAssembly","src":"1799:178:19"}]},"documentation":{"id":4348,"nodeType":"StructuredDocumentation","src":"1627:74:19","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:19","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:19","nodeType":"VariableDeclaration","scope":4357,"src":"1727:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4349,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:19"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"slot","nameLocation":"1783:4:19","nodeType":"VariableDeclaration","scope":4357,"src":"1775:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:19"},"scope":4474,"src":"1706:277:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"2175:86:19","statements":[{"id":4377,"nodeType":"UncheckedBlock","src":"2185:70:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4371,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2232:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:19","typeDescriptions":{}}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4373,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"2240:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:19","typeDescriptions":{}}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4366,"id":4376,"nodeType":"Return","src":"2209:35:19"}]}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"1989:99:19","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:19","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"slot","nameLocation":"2117:4:19","nodeType":"VariableDeclaration","scope":4379,"src":"2109:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"pos","nameLocation":"2131:3:19","nodeType":"VariableDeclaration","scope":4379,"src":"2123:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:19"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"result","nameLocation":"2167:6:19","nodeType":"VariableDeclaration","scope":4379,"src":"2159:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:19"},"scope":4474,"src":"2093:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"2464:127:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:19","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:19"},"nodeType":"YulFunctionCall","src":"2513:18:19"},"nodeType":"YulExpressionStatement","src":"2513:18:19"},{"nodeType":"YulAssignment","src":"2544:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:19"},"nodeType":"YulFunctionCall","src":"2554:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4385,"isOffset":false,"isSlot":false,"src":"2544:6:19","valueSize":1},{"declaration":4382,"isOffset":false,"isSlot":false,"src":"2526:4:19","valueSize":1}],"flags":["memory-safe"],"id":4387,"nodeType":"InlineAssembly","src":"2474:111:19"}]},"documentation":{"id":4380,"nodeType":"StructuredDocumentation","src":"2267:118:19","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:19","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"slot","nameLocation":"2419:4:19","nodeType":"VariableDeclaration","scope":4389,"src":"2411:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:19"},"returnParameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"result","nameLocation":"2456:6:19","nodeType":"VariableDeclaration","scope":4389,"src":"2448:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:19"},"scope":4474,"src":"2390:201:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4400,"nodeType":"Block","src":"2769:179:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:19","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:19","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:19"},"nodeType":"YulFunctionCall","src":"2848:6:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:19"},"nodeType":"YulFunctionCall","src":"2840:15:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:19"},"nodeType":"YulFunctionCall","src":"2831:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:19"},"nodeType":"YulFunctionCall","src":"2818:39:19"},"nodeType":"YulExpressionStatement","src":"2818:39:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:19"},"nodeType":"YulFunctionCall","src":"2870:18:19"},"nodeType":"YulExpressionStatement","src":"2870:18:19"},{"nodeType":"YulAssignment","src":"2901:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:19"},"nodeType":"YulFunctionCall","src":"2911:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4394,"isOffset":false,"isSlot":false,"src":"2835:3:19","valueSize":1},{"declaration":4397,"isOffset":false,"isSlot":false,"src":"2901:6:19","valueSize":1},{"declaration":4392,"isOffset":false,"isSlot":false,"src":"2883:4:19","valueSize":1}],"flags":["memory-safe"],"id":4399,"nodeType":"InlineAssembly","src":"2779:163:19"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"2597:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4401,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:19","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"slot","nameLocation":"2711:4:19","nodeType":"VariableDeclaration","scope":4401,"src":"2703:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"key","nameLocation":"2725:3:19","nodeType":"VariableDeclaration","scope":4401,"src":"2717:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4393,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:19"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"result","nameLocation":"2761:6:19","nodeType":"VariableDeclaration","scope":4401,"src":"2753:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:19"},"scope":4474,"src":"2680:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4412,"nodeType":"Block","src":"3123:173:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:19"},"nodeType":"YulFunctionCall","src":"3192:11:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:19"},"nodeType":"YulFunctionCall","src":"3185:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:19"},"nodeType":"YulFunctionCall","src":"3172:33:19"},"nodeType":"YulExpressionStatement","src":"3172:33:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:19"},"nodeType":"YulFunctionCall","src":"3218:18:19"},"nodeType":"YulExpressionStatement","src":"3218:18:19"},{"nodeType":"YulAssignment","src":"3249:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:19"},"nodeType":"YulFunctionCall","src":"3259:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4406,"isOffset":false,"isSlot":false,"src":"3199:3:19","valueSize":1},{"declaration":4409,"isOffset":false,"isSlot":false,"src":"3249:6:19","valueSize":1},{"declaration":4404,"isOffset":false,"isSlot":false,"src":"3231:4:19","valueSize":1}],"flags":["memory-safe"],"id":4411,"nodeType":"InlineAssembly","src":"3133:157:19"}]},"documentation":{"id":4402,"nodeType":"StructuredDocumentation","src":"2954:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4413,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:19","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"slot","nameLocation":"3068:4:19","nodeType":"VariableDeclaration","scope":4413,"src":"3060:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"key","nameLocation":"3079:3:19","nodeType":"VariableDeclaration","scope":4413,"src":"3074:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4405,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:19"},"returnParameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"result","nameLocation":"3115:6:19","nodeType":"VariableDeclaration","scope":4413,"src":"3107:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:19"},"scope":4474,"src":"3037:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4424,"nodeType":"Block","src":"3474:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:19"},"nodeType":"YulFunctionCall","src":"3523:17:19"},"nodeType":"YulExpressionStatement","src":"3523:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:19"},"nodeType":"YulFunctionCall","src":"3553:18:19"},"nodeType":"YulExpressionStatement","src":"3553:18:19"},{"nodeType":"YulAssignment","src":"3584:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:19"},"nodeType":"YulFunctionCall","src":"3594:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4418,"isOffset":false,"isSlot":false,"src":"3536:3:19","valueSize":1},{"declaration":4421,"isOffset":false,"isSlot":false,"src":"3584:6:19","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"3566:4:19","valueSize":1}],"flags":["memory-safe"],"id":4423,"nodeType":"InlineAssembly","src":"3484:141:19"}]},"documentation":{"id":4414,"nodeType":"StructuredDocumentation","src":"3302:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:19","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"slot","nameLocation":"3416:4:19","nodeType":"VariableDeclaration","scope":4425,"src":"3408:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"key","nameLocation":"3430:3:19","nodeType":"VariableDeclaration","scope":4425,"src":"3422:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:19"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"result","nameLocation":"3466:6:19","nodeType":"VariableDeclaration","scope":4425,"src":"3458:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:19"},"scope":4474,"src":"3385:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"3809:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:19"},"nodeType":"YulFunctionCall","src":"3858:17:19"},"nodeType":"YulExpressionStatement","src":"3858:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:19"},"nodeType":"YulFunctionCall","src":"3888:18:19"},"nodeType":"YulExpressionStatement","src":"3888:18:19"},{"nodeType":"YulAssignment","src":"3919:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:19"},"nodeType":"YulFunctionCall","src":"3929:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4430,"isOffset":false,"isSlot":false,"src":"3871:3:19","valueSize":1},{"declaration":4433,"isOffset":false,"isSlot":false,"src":"3919:6:19","valueSize":1},{"declaration":4428,"isOffset":false,"isSlot":false,"src":"3901:4:19","valueSize":1}],"flags":["memory-safe"],"id":4435,"nodeType":"InlineAssembly","src":"3819:141:19"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"3637:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:19","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"slot","nameLocation":"3751:4:19","nodeType":"VariableDeclaration","scope":4437,"src":"3743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"key","nameLocation":"3765:3:19","nodeType":"VariableDeclaration","scope":4437,"src":"3757:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:19"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"result","nameLocation":"3801:6:19","nodeType":"VariableDeclaration","scope":4437,"src":"3793:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:19"},"scope":4474,"src":"3720:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4448,"nodeType":"Block","src":"4143:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:19"},"nodeType":"YulFunctionCall","src":"4192:17:19"},"nodeType":"YulExpressionStatement","src":"4192:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:19"},"nodeType":"YulFunctionCall","src":"4222:18:19"},"nodeType":"YulExpressionStatement","src":"4222:18:19"},{"nodeType":"YulAssignment","src":"4253:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:19"},"nodeType":"YulFunctionCall","src":"4263:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4442,"isOffset":false,"isSlot":false,"src":"4205:3:19","valueSize":1},{"declaration":4445,"isOffset":false,"isSlot":false,"src":"4253:6:19","valueSize":1},{"declaration":4440,"isOffset":false,"isSlot":false,"src":"4235:4:19","valueSize":1}],"flags":["memory-safe"],"id":4447,"nodeType":"InlineAssembly","src":"4153:141:19"}]},"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"3972:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:19","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"slot","nameLocation":"4086:4:19","nodeType":"VariableDeclaration","scope":4449,"src":"4078:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4442,"mutability":"mutable","name":"key","nameLocation":"4099:3:19","nodeType":"VariableDeclaration","scope":4449,"src":"4092:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4441,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:19"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"result","nameLocation":"4135:6:19","nodeType":"VariableDeclaration","scope":4449,"src":"4127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:19"},"scope":4474,"src":"4055:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4460,"nodeType":"Block","src":"4484:326:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:19"},"nodeType":"YulFunctionCall","src":"4547:10:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:19"},"nodeType":"YulFunctionCall","src":"4583:14:19"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:19"},"nodeType":"YulFunctionCall","src":"4621:18:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:19","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:19"},"nodeType":"YulFunctionCall","src":"4665:10:19"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:19"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:19"},"nodeType":"YulFunctionCall","src":"4688:17:19"},"nodeType":"YulExpressionStatement","src":"4688:17:19"},{"nodeType":"YulAssignment","src":"4718:45:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:19"},"nodeType":"YulFunctionCall","src":"4745:17:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:19"},"nodeType":"YulFunctionCall","src":"4728:35:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:19"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:19"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:19"},"nodeType":"YulFunctionCall","src":"4776:18:19"},"nodeType":"YulExpressionStatement","src":"4776:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4553:3:19","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4587:3:19","valueSize":1},{"declaration":4457,"isOffset":false,"isSlot":false,"src":"4718:6:19","valueSize":1},{"declaration":4452,"isOffset":false,"isSlot":false,"src":"4700:4:19","valueSize":1}],"flags":["memory-safe"],"id":4459,"nodeType":"InlineAssembly","src":"4494:310:19"}]},"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"4306:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:19","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"slot","nameLocation":"4420:4:19","nodeType":"VariableDeclaration","scope":4461,"src":"4412:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"key","nameLocation":"4440:3:19","nodeType":"VariableDeclaration","scope":4461,"src":"4426:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4453,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:19"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"result","nameLocation":"4476:6:19","nodeType":"VariableDeclaration","scope":4461,"src":"4468:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:19"},"scope":4474,"src":"4389:421:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"4993:326:19","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:19"},"nodeType":"YulFunctionCall","src":"5056:10:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:19"},"nodeType":"YulFunctionCall","src":"5092:14:19"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:19"},"nodeType":"YulFunctionCall","src":"5130:18:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:19","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:19"},"nodeType":"YulFunctionCall","src":"5174:10:19"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:19"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:19"},"nodeType":"YulFunctionCall","src":"5197:17:19"},"nodeType":"YulExpressionStatement","src":"5197:17:19"},{"nodeType":"YulAssignment","src":"5227:45:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:19"},"nodeType":"YulFunctionCall","src":"5254:17:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:19"},"nodeType":"YulFunctionCall","src":"5237:35:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:19"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:19"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:19"},"nodeType":"YulFunctionCall","src":"5285:18:19"},"nodeType":"YulExpressionStatement","src":"5285:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4466,"isOffset":false,"isSlot":false,"src":"5062:3:19","valueSize":1},{"declaration":4466,"isOffset":false,"isSlot":false,"src":"5096:3:19","valueSize":1},{"declaration":4469,"isOffset":false,"isSlot":false,"src":"5227:6:19","valueSize":1},{"declaration":4464,"isOffset":false,"isSlot":false,"src":"5209:4:19","valueSize":1}],"flags":["memory-safe"],"id":4471,"nodeType":"InlineAssembly","src":"5003:310:19"}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"4816:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:19","nodeType":"FunctionDefinition","parameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"slot","nameLocation":"4930:4:19","nodeType":"VariableDeclaration","scope":4473,"src":"4922:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4466,"mutability":"mutable","name":"key","nameLocation":"4949:3:19","nodeType":"VariableDeclaration","scope":4473,"src":"4936:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4465,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:19"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"result","nameLocation":"4985:6:19","nodeType":"VariableDeclaration","scope":4473,"src":"4977:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:19"},"scope":4474,"src":"4899:420:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4475,"src":"1598:3723:19","usedErrors":[],"usedEvents":[]}],"src":"199:5123:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4598]},"id":4599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4476,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"219:1187:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4598,"linearizedBaseContracts":[4598],"name":"StorageSlot","nameLocation":"1415:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4480,"members":[{"constant":false,"id":4479,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":4480,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4478,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":4598,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4483,"members":[{"constant":false,"id":4482,"mutability":"mutable","name":"value","nameLocation":"1522:5:20","nodeType":"VariableDeclaration","scope":4483,"src":"1517:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4481,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:20","nodeType":"StructDefinition","scope":4598,"src":"1488:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4486,"members":[{"constant":false,"id":4485,"mutability":"mutable","name":"value","nameLocation":"1577:5:20","nodeType":"VariableDeclaration","scope":4486,"src":"1569:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:20","nodeType":"StructDefinition","scope":4598,"src":"1540:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4489,"members":[{"constant":false,"id":4488,"mutability":"mutable","name":"value","nameLocation":"1632:5:20","nodeType":"VariableDeclaration","scope":4489,"src":"1624:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:20","nodeType":"StructDefinition","scope":4598,"src":"1595:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4492,"members":[{"constant":false,"id":4491,"mutability":"mutable","name":"value","nameLocation":"1685:5:20","nodeType":"VariableDeclaration","scope":4492,"src":"1678:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4490,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:20","nodeType":"StructDefinition","scope":4598,"src":"1650:47:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4495,"members":[{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"1738:5:20","nodeType":"VariableDeclaration","scope":4495,"src":"1731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4493,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:20","nodeType":"StructDefinition","scope":4598,"src":"1703:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4498,"members":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"1789:5:20","nodeType":"VariableDeclaration","scope":4498,"src":"1783:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4496,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:20","nodeType":"StructDefinition","scope":4598,"src":"1756:45:20","visibility":"public"},{"body":{"id":4508,"nodeType":"Block","src":"1983:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:20","statements":[{"nodeType":"YulAssignment","src":"2032:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4505,"isOffset":false,"isSlot":true,"src":"2032:6:20","suffix":"slot","valueSize":1},{"declaration":4501,"isOffset":false,"isSlot":false,"src":"2042:4:20","valueSize":1}],"flags":["memory-safe"],"id":4507,"nodeType":"InlineAssembly","src":"1993:63:20"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"1807:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:20","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"slot","nameLocation":"1931:4:20","nodeType":"VariableDeclaration","scope":4509,"src":"1923:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:20"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"r","nameLocation":"1980:1:20","nodeType":"VariableDeclaration","scope":4509,"src":"1960:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4480_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4504,"nodeType":"UserDefinedTypeName","pathNode":{"id":4503,"name":"AddressSlot","nameLocations":["1960:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4480,"src":"1960:11:20"},"referencedDeclaration":4480,"src":"1960:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4480_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:20"},"scope":4598,"src":"1899:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4519,"nodeType":"Block","src":"2243:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:20","statements":[{"nodeType":"YulAssignment","src":"2292:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4516,"isOffset":false,"isSlot":true,"src":"2292:6:20","suffix":"slot","valueSize":1},{"declaration":4512,"isOffset":false,"isSlot":false,"src":"2302:4:20","valueSize":1}],"flags":["memory-safe"],"id":4518,"nodeType":"InlineAssembly","src":"2253:63:20"}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"2068:86:20","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4520,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:20","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"slot","nameLocation":"2191:4:20","nodeType":"VariableDeclaration","scope":4520,"src":"2183:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:20"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"r","nameLocation":"2240:1:20","nodeType":"VariableDeclaration","scope":4520,"src":"2220:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4483_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4515,"nodeType":"UserDefinedTypeName","pathNode":{"id":4514,"name":"BooleanSlot","nameLocations":["2220:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4483,"src":"2220:11:20"},"referencedDeclaration":4483,"src":"2220:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4483_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:20"},"scope":4598,"src":"2159:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4530,"nodeType":"Block","src":"2503:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:20","statements":[{"nodeType":"YulAssignment","src":"2552:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4527,"isOffset":false,"isSlot":true,"src":"2552:6:20","suffix":"slot","valueSize":1},{"declaration":4523,"isOffset":false,"isSlot":false,"src":"2562:4:20","valueSize":1}],"flags":["memory-safe"],"id":4529,"nodeType":"InlineAssembly","src":"2513:63:20"}]},"documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"2328:86:20","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:20","nodeType":"FunctionDefinition","parameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"slot","nameLocation":"2451:4:20","nodeType":"VariableDeclaration","scope":4531,"src":"2443:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:20"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"r","nameLocation":"2500:1:20","nodeType":"VariableDeclaration","scope":4531,"src":"2480:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4486_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4526,"nodeType":"UserDefinedTypeName","pathNode":{"id":4525,"name":"Bytes32Slot","nameLocations":["2480:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4486,"src":"2480:11:20"},"referencedDeclaration":4486,"src":"2480:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4486_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:20"},"scope":4598,"src":"2419:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"2763:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:20","statements":[{"nodeType":"YulAssignment","src":"2812:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4538,"isOffset":false,"isSlot":true,"src":"2812:6:20","suffix":"slot","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"2822:4:20","valueSize":1}],"flags":["memory-safe"],"id":4540,"nodeType":"InlineAssembly","src":"2773:63:20"}]},"documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"2588:86:20","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:20","nodeType":"FunctionDefinition","parameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"slot","nameLocation":"2711:4:20","nodeType":"VariableDeclaration","scope":4542,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:20"},"returnParameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"r","nameLocation":"2760:1:20","nodeType":"VariableDeclaration","scope":4542,"src":"2740:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4537,"nodeType":"UserDefinedTypeName","pathNode":{"id":4536,"name":"Uint256Slot","nameLocations":["2740:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4489,"src":"2740:11:20"},"referencedDeclaration":4489,"src":"2740:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4489_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:20"},"scope":4598,"src":"2679:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"3020:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:20","statements":[{"nodeType":"YulAssignment","src":"3069:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4549,"isOffset":false,"isSlot":true,"src":"3069:6:20","suffix":"slot","valueSize":1},{"declaration":4545,"isOffset":false,"isSlot":false,"src":"3079:4:20","valueSize":1}],"flags":["memory-safe"],"id":4551,"nodeType":"InlineAssembly","src":"3030:63:20"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"2848:85:20","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:20","nodeType":"FunctionDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"slot","nameLocation":"2969:4:20","nodeType":"VariableDeclaration","scope":4553,"src":"2961:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:20"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"r","nameLocation":"3017:1:20","nodeType":"VariableDeclaration","scope":4553,"src":"2998:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4492_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4548,"nodeType":"UserDefinedTypeName","pathNode":{"id":4547,"name":"Int256Slot","nameLocations":["2998:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4492,"src":"2998:10:20"},"referencedDeclaration":4492,"src":"2998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4492_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:20"},"scope":4598,"src":"2938:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4563,"nodeType":"Block","src":"3277:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:20","statements":[{"nodeType":"YulAssignment","src":"3326:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4560,"isOffset":false,"isSlot":true,"src":"3326:6:20","suffix":"slot","valueSize":1},{"declaration":4556,"isOffset":false,"isSlot":false,"src":"3336:4:20","valueSize":1}],"flags":["memory-safe"],"id":4562,"nodeType":"InlineAssembly","src":"3287:63:20"}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"3105:85:20","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4564,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:20","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"slot","nameLocation":"3226:4:20","nodeType":"VariableDeclaration","scope":4564,"src":"3218:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:20"},"returnParameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"r","nameLocation":"3274:1:20","nodeType":"VariableDeclaration","scope":4564,"src":"3255:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4495_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4559,"nodeType":"UserDefinedTypeName","pathNode":{"id":4558,"name":"StringSlot","nameLocations":["3255:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4495,"src":"3255:10:20"},"referencedDeclaration":4495,"src":"3255:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4495_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:20"},"scope":4598,"src":"3195:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"3558:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:20","statements":[{"nodeType":"YulAssignment","src":"3607:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4571,"isOffset":false,"isSlot":true,"src":"3607:6:20","suffix":"slot","valueSize":1},{"declaration":4567,"isOffset":false,"isSlot":true,"src":"3617:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4573,"nodeType":"InlineAssembly","src":"3568:69:20"}]},"documentation":{"id":4565,"nodeType":"StructuredDocumentation","src":"3362:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:20","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"store","nameLocation":"3506:5:20","nodeType":"VariableDeclaration","scope":4575,"src":"3491:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4566,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:20"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"r","nameLocation":"3555:1:20","nodeType":"VariableDeclaration","scope":4575,"src":"3536:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4495_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4570,"nodeType":"UserDefinedTypeName","pathNode":{"id":4569,"name":"StringSlot","nameLocations":["3536:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4495,"src":"3536:10:20"},"referencedDeclaration":4495,"src":"3536:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4495_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:20"},"scope":4598,"src":"3468:175:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4585,"nodeType":"Block","src":"3818:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:20","statements":[{"nodeType":"YulAssignment","src":"3867:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4582,"isOffset":false,"isSlot":true,"src":"3867:6:20","suffix":"slot","valueSize":1},{"declaration":4578,"isOffset":false,"isSlot":false,"src":"3877:4:20","valueSize":1}],"flags":["memory-safe"],"id":4584,"nodeType":"InlineAssembly","src":"3828:63:20"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"3649:84:20","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:20","nodeType":"FunctionDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"slot","nameLocation":"3768:4:20","nodeType":"VariableDeclaration","scope":4586,"src":"3760:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:20"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"r","nameLocation":"3815:1:20","nodeType":"VariableDeclaration","scope":4586,"src":"3797:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4498_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4581,"nodeType":"UserDefinedTypeName","pathNode":{"id":4580,"name":"BytesSlot","nameLocations":["3797:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4498,"src":"3797:9:20"},"referencedDeclaration":4498,"src":"3797:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4498_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:20"},"scope":4598,"src":"3738:159:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4596,"nodeType":"Block","src":"4094:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:20","statements":[{"nodeType":"YulAssignment","src":"4143:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4593,"isOffset":false,"isSlot":true,"src":"4143:6:20","suffix":"slot","valueSize":1},{"declaration":4589,"isOffset":false,"isSlot":true,"src":"4153:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4595,"nodeType":"InlineAssembly","src":"4104:69:20"}]},"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"3903:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4597,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:20","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"store","nameLocation":"4043:5:20","nodeType":"VariableDeclaration","scope":4597,"src":"4029:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4588,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:20"},"returnParameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"r","nameLocation":"4091:1:20","nodeType":"VariableDeclaration","scope":4597,"src":"4073:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4498_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4592,"nodeType":"UserDefinedTypeName","pathNode":{"id":4591,"name":"BytesSlot","nameLocations":["4073:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4498,"src":"4073:9:20"},"referencedDeclaration":4498,"src":"4073:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4498_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:20"},"scope":4598,"src":"4007:172:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4599,"src":"1407:2774:20","usedErrors":[],"usedEvents":[]}],"src":"193:3989:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7440],"SafeCast":[9205],"SignedMath":[9349],"Strings":[5798]},"id":5799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5799,"sourceUnit":7441,"src":"127:37:21","symbolAliases":[{"foreign":{"id":4601,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5799,"sourceUnit":9206,"src":"165:45:21","symbolAliases":[{"foreign":{"id":4603,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5799,"sourceUnit":9350,"src":"211:49:21","symbolAliases":[{"foreign":{"id":4605,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9349,"src":"219:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"262:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":5798,"linearizedBaseContracts":[5798],"name":"Strings","nameLocation":"305:7:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4609,"libraryName":{"id":4608,"name":"SafeCast","nameLocations":["325:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":9205,"src":"325:8:21"},"nodeType":"UsingForDirective","src":"319:21:21"},{"constant":true,"id":4612,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:21","nodeType":"VariableDeclaration","scope":5798,"src":"346:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4610,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4615,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:21","nodeType":"VariableDeclaration","scope":5798,"src":"408:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4613,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":4616,"nodeType":"StructuredDocumentation","src":"457:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4622,"name":"StringsInsufficientHexLength","nameLocation":"549:28:21","nodeType":"ErrorDefinition","parameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"value","nameLocation":"586:5:21","nodeType":"VariableDeclaration","scope":4622,"src":"578:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4620,"mutability":"mutable","name":"length","nameLocation":"601:6:21","nodeType":"VariableDeclaration","scope":4622,"src":"593:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:21"},"src":"543:66:21"},{"documentation":{"id":4623,"nodeType":"StructuredDocumentation","src":"615:108:21","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4625,"name":"StringsInvalidChar","nameLocation":"734:18:21","nodeType":"ErrorDefinition","parameters":{"id":4624,"nodeType":"ParameterList","parameters":[],"src":"752:2:21"},"src":"728:27:21"},{"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"761:84:21","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4628,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:21","nodeType":"ErrorDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[],"src":"883:2:21"},"src":"850:36:21"},{"body":{"id":4675,"nodeType":"Block","src":"1058:561:21","statements":[{"id":4674,"nodeType":"UncheckedBlock","src":"1068:545:21","statements":[{"assignments":[4637],"declarations":[{"constant":false,"id":4637,"mutability":"mutable","name":"length","nameLocation":"1100:6:21","nodeType":"VariableDeclaration","scope":4674,"src":"1092:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4644,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"1120:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4638,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"1109:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7212,"src":"1109:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:21"},{"assignments":[4646],"declarations":[{"constant":false,"id":4646,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:21","nodeType":"VariableDeclaration","scope":4674,"src":"1144:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4645,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4651,"initialValue":{"arguments":[{"id":4649,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"1178:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4647,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:21"},{"assignments":[4653],"declarations":[{"constant":false,"id":4653,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:21","nodeType":"VariableDeclaration","scope":4674,"src":"1199:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"nodeType":"VariableDeclarationStatement","src":"1199:11:21"},{"AST":{"nodeType":"YulBlock","src":"1249:67:21","statements":[{"nodeType":"YulAssignment","src":"1267:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:21"},"nodeType":"YulFunctionCall","src":"1286:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:21"},"nodeType":"YulFunctionCall","src":"1274:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4646,"isOffset":false,"isSlot":false,"src":"1278:6:21","valueSize":1},{"declaration":4637,"isOffset":false,"isSlot":false,"src":"1294:6:21","valueSize":1},{"declaration":4653,"isOffset":false,"isSlot":false,"src":"1267:3:21","valueSize":1}],"flags":["memory-safe"],"id":4655,"nodeType":"InlineAssembly","src":"1224:92:21"},{"body":{"id":4670,"nodeType":"Block","src":"1342:234:21","statements":[{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:21","subExpression":{"id":4657,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"1360:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"1360:5:21"},{"AST":{"nodeType":"YulBlock","src":"1408:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:21"},"nodeType":"YulFunctionCall","src":"1448:14:21"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:21"},"nodeType":"YulFunctionCall","src":"1443:32:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:21"},"nodeType":"YulFunctionCall","src":"1430:46:21"},"nodeType":"YulExpressionStatement","src":"1430:46:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4612,"isOffset":false,"isSlot":false,"src":"1464:10:21","valueSize":1},{"declaration":4653,"isOffset":false,"isSlot":false,"src":"1438:3:21","valueSize":1},{"declaration":4631,"isOffset":false,"isSlot":false,"src":"1452:5:21","valueSize":1}],"flags":["memory-safe"],"id":4660,"nodeType":"InlineAssembly","src":"1383:111:21"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"1511:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"1511:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"1544:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4669,"nodeType":"IfStatement","src":"1540:21:21","trueBody":{"id":4668,"nodeType":"Break","src":"1556:5:21"}}]},"condition":{"hexValue":"74727565","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4671,"nodeType":"WhileStatement","src":"1329:247:21"},{"expression":{"id":4672,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"1596:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4635,"id":4673,"nodeType":"Return","src":"1589:13:21"}]}]},"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"892:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4676,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:21","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"value","nameLocation":"1013:5:21","nodeType":"VariableDeclaration","scope":4676,"src":"1005:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:21"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4676,"src":"1043:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4633,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:21"},"scope":5798,"src":"987:632:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"1795:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1826:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:21","trueExpression":{"hexValue":"2d","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"1872:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4694,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9349,"src":"1857:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9349_$","typeString":"type(library SignedMath)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"1857:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"1848:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4684,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:21","typeDescriptions":{}}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4683,"id":4700,"nodeType":"Return","src":"1805:75:21"}]},"documentation":{"id":4677,"nodeType":"StructuredDocumentation","src":"1625:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:21","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"value","nameLocation":"1750:5:21","nodeType":"VariableDeclaration","scope":4702,"src":"1743:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4678,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:21"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"1780:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4681,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:21"},"scope":5798,"src":"1719:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"2066:100:21","statements":[{"id":4720,"nodeType":"UncheckedBlock","src":"2076:84:21","statements":[{"expression":{"arguments":[{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"2119:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"2138:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4712,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"2126:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7383,"src":"2126:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4722,4805,4825],"referencedDeclaration":4805,"src":"2107:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4709,"id":4719,"nodeType":"Return","src":"2100:49:21"}]}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"1893:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:21","nodeType":"FunctionDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"value","nameLocation":"2021:5:21","nodeType":"VariableDeclaration","scope":4722,"src":"2013:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:21"},"returnParameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4722,"src":"2051:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4707,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:21"},"scope":5798,"src":"1992:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4804,"nodeType":"Block","src":"2379:435:21","statements":[{"assignments":[4733],"declarations":[{"constant":false,"id":4733,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:21","nodeType":"VariableDeclaration","scope":4804,"src":"2389:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4735,"initialValue":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"2410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:21"},{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:21","nodeType":"VariableDeclaration","scope":4804,"src":"2425:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4736,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4746,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4741,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"2461:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4738,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:21"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4747,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2482:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4749,"indexExpression":{"hexValue":"30","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4752,"nodeType":"ExpressionStatement","src":"2482:15:21"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4753,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2507:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4755,"indexExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4758,"nodeType":"ExpressionStatement","src":"2507:15:21"},{"body":{"id":4787,"nodeType":"Block","src":"2577:95:21","statements":[{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4773,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2591:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4775,"indexExpression":{"id":4774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2598:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4776,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2603:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4780,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"2614:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4782,"nodeType":"ExpressionStatement","src":"2591:40:21"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4783,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"2645:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"2645:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2565:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4788,"initializationExpression":{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"i","nameLocation":"2545:1:21","nodeType":"VariableDeclaration","scope":4788,"src":"2537:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4766,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4762,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"2553:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:21"},"loopExpression":{"expression":{"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:21","subExpression":{"id":4770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4772,"nodeType":"ExpressionStatement","src":"2572:3:21"},"nodeType":"ForStatement","src":"2532:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"2685:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4798,"nodeType":"IfStatement","src":"2681:96:21","trueBody":{"id":4797,"nodeType":"Block","src":"2702:75:21","statements":[{"errorCall":{"arguments":[{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"2752:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4794,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"2759:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4792,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2723:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4796,"nodeType":"RevertStatement","src":"2716:50:21"}]}},{"expression":{"arguments":[{"id":4801,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2800:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4799,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:21","typeDescriptions":{}}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4731,"id":4803,"nodeType":"Return","src":"2786:21:21"}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"2172:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4805,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:21","nodeType":"FunctionDefinition","parameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"2318:5:21","nodeType":"VariableDeclaration","scope":4805,"src":"2310:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"length","nameLocation":"2333:6:21","nodeType":"VariableDeclaration","scope":4805,"src":"2325:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:21"},"returnParameters":{"id":4731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4805,"src":"2364:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4729,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:21"},"scope":5798,"src":"2289:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"3046:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4818,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"3091:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4816,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:21","typeDescriptions":{}}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:21","typeDescriptions":{}}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4821,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"3099:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4813,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4722,4805,4825],"referencedDeclaration":4805,"src":"3063:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4812,"id":4823,"nodeType":"Return","src":"3056:58:21"}]},"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"2820:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:21","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"addr","nameLocation":"3002:4:21","nodeType":"VariableDeclaration","scope":4825,"src":"2994:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:21"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"3031:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4810,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:21"},"scope":5798,"src":"2973:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"3378:642:21","statements":[{"assignments":[4834],"declarations":[{"constant":false,"id":4834,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:21","nodeType":"VariableDeclaration","scope":4889,"src":"3388:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4841,"initialValue":{"arguments":[{"arguments":[{"id":4838,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"3428:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4837,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4722,4805,4825],"referencedDeclaration":4825,"src":"3416:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4835,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:21","typeDescriptions":{}}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:21"},{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:21","nodeType":"VariableDeclaration","scope":4889,"src":"3519:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4844,"nodeType":"VariableDeclarationStatement","src":"3519:17:21"},{"AST":{"nodeType":"YulBlock","src":"3571:78:21","statements":[{"nodeType":"YulAssignment","src":"3585:54:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:21","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:21"},"nodeType":"YulFunctionCall","src":"3616:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:21","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:21"},"nodeType":"YulFunctionCall","src":"3606:32:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:21"},"nodeType":"YulFunctionCall","src":"3598:41:21"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4834,"isOffset":false,"isSlot":false,"src":"3620:6:21","valueSize":1},{"declaration":4843,"isOffset":false,"isSlot":false,"src":"3585:9:21","valueSize":1}],"flags":["memory-safe"],"id":4845,"nodeType":"InlineAssembly","src":"3546:103:21"},{"body":{"id":4882,"nodeType":"Block","src":"3692:291:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4856,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"3798:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4863,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"3827:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4865,"indexExpression":{"id":4864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"3834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4861,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:21","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4877,"nodeType":"IfStatement","src":"3794:150:21","trueBody":{"id":4876,"nodeType":"Block","src":"3844:100:21","statements":[{"expression":{"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4870,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"3912:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4872,"indexExpression":{"id":4871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"3919:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4875,"nodeType":"ExpressionStatement","src":"3912:17:21"}]}},{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"3957:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"3957:15:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"3680:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"initializationExpression":{"assignments":[4847],"declarations":[{"constant":false,"id":4847,"mutability":"mutable","name":"i","nameLocation":"3672:1:21","nodeType":"VariableDeclaration","scope":4883,"src":"3664:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4849,"initialValue":{"hexValue":"3431","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:21","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:21"},"loopExpression":{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:21","subExpression":{"id":4853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"3689:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4855,"nodeType":"ExpressionStatement","src":"3687:3:21"},"nodeType":"ForStatement","src":"3659:324:21"},{"expression":{"arguments":[{"id":4886,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"4006:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4884,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:21","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4832,"id":4888,"nodeType":"Return","src":"3992:21:21"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"3127:165:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:21","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"addr","nameLocation":"3334:4:21","nodeType":"VariableDeclaration","scope":4890,"src":"3326:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4827,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:21"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"3363:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4830,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:21"},"scope":5798,"src":"3297:723:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4926,"nodeType":"Block","src":"4175:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"4198:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:21","typeDescriptions":{}}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:21","memberName":"length","nodeType":"MemberAccess","src":"4192:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4217:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:21","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:21","memberName":"length","nodeType":"MemberAccess","src":"4211:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"4246:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4912,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:21","typeDescriptions":{}}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4911,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4230:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4920,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4269:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4918,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:21","typeDescriptions":{}}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4917,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4253:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4899,"id":4925,"nodeType":"Return","src":"4185:87:21"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"4026:66:21","text":" @dev Returns true if the two strings are equal."},"id":4927,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:21","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"a","nameLocation":"4126:1:21","nodeType":"VariableDeclaration","scope":4927,"src":"4112:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4892,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"b","nameLocation":"4143:1:21","nodeType":"VariableDeclaration","scope":4927,"src":"4129:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4894,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:21"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4927,"src":"4169:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4897,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:21"},"scope":5798,"src":"4097:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"4576:64:21","statements":[{"expression":{"arguments":[{"id":4936,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"4603:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4940,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"4619:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4938,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:21","typeDescriptions":{}}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:21","memberName":"length","nodeType":"MemberAccess","src":"4613:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4935,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4946,4977],"referencedDeclaration":4977,"src":"4593:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4934,"id":4944,"nodeType":"Return","src":"4586:47:21"}]},"documentation":{"id":4928,"nodeType":"StructuredDocumentation","src":"4285:214:21","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:21","nodeType":"FunctionDefinition","parameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"input","nameLocation":"4537:5:21","nodeType":"VariableDeclaration","scope":4946,"src":"4523:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4929,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:21"},"returnParameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4946,"src":"4567:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:21"},"scope":5798,"src":"4504:136:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"5038:153:21","statements":[{"assignments":[4959,4961],"declarations":[{"constant":false,"id":4959,"mutability":"mutable","name":"success","nameLocation":"5054:7:21","nodeType":"VariableDeclaration","scope":4976,"src":"5049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4958,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"value","nameLocation":"5071:5:21","nodeType":"VariableDeclaration","scope":4976,"src":"5063:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4967,"initialValue":{"arguments":[{"id":4963,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"5093:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4964,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"5100:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4965,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"5107:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4998,5035],"referencedDeclaration":5035,"src":"5080:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:21"},{"condition":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:21","subExpression":{"id":4968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"5126:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4973,"nodeType":"IfStatement","src":"5121:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4970,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"5142:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"RevertStatement","src":"5135:27:21"}},{"expression":{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"5179:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4957,"id":4975,"nodeType":"Return","src":"5172:12:21"}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"4646:287:21","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:21","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"input","nameLocation":"4971:5:21","nodeType":"VariableDeclaration","scope":4977,"src":"4957:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4948,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"begin","nameLocation":"4986:5:21","nodeType":"VariableDeclaration","scope":4977,"src":"4978:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4953,"mutability":"mutable","name":"end","nameLocation":"5001:3:21","nodeType":"VariableDeclaration","scope":4977,"src":"4993:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:21"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"5029:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:21"},"scope":5798,"src":"4938:253:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"5512:83:21","statements":[{"expression":{"arguments":[{"id":4988,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"5558:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4992,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"5574:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4990,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:21","typeDescriptions":{}}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:21","memberName":"length","nodeType":"MemberAccess","src":"5568:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4987,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"5529:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4986,"id":4996,"nodeType":"Return","src":"5522:66:21"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"5197:215:21","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:21","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"input","nameLocation":"5453:5:21","nodeType":"VariableDeclaration","scope":4998,"src":"5439:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4979,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:21"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"success","nameLocation":"5488:7:21","nodeType":"VariableDeclaration","scope":4998,"src":"5483:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4982,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"value","nameLocation":"5505:5:21","nodeType":"VariableDeclaration","scope":4998,"src":"5497:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:21"},"scope":5798,"src":"5417:178:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"5997:144:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6011:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"6023:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5013,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:21","typeDescriptions":{}}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:21","memberName":"length","nodeType":"MemberAccess","src":"6017:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5019,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"6040:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5020,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6048:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5027,"nodeType":"IfStatement","src":"6007:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5011,"id":5026,"nodeType":"Return","src":"6053:17:21"}},{"expression":{"arguments":[{"id":5029,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"6116:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"6123:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5031,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6130:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"6087:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5011,"id":5033,"nodeType":"Return","src":"6080:54:21"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"5601:238:21","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:21","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"input","nameLocation":"5889:5:21","nodeType":"VariableDeclaration","scope":5035,"src":"5875:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5000,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"begin","nameLocation":"5912:5:21","nodeType":"VariableDeclaration","scope":5035,"src":"5904:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"end","nameLocation":"5935:3:21","nodeType":"VariableDeclaration","scope":5035,"src":"5927:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:21"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"success","nameLocation":"5973:7:21","nodeType":"VariableDeclaration","scope":5035,"src":"5968:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5007,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5010,"mutability":"mutable","name":"value","nameLocation":"5990:5:21","nodeType":"VariableDeclaration","scope":5035,"src":"5982:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:21"},"scope":5798,"src":"5844:297:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5104,"nodeType":"Block","src":"6521:347:21","statements":[{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:21","nodeType":"VariableDeclaration","scope":5104,"src":"6531:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5049,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5055,"initialValue":{"arguments":[{"id":5053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"6559:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5051,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:21","typeDescriptions":{}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:21"},{"assignments":[5057],"declarations":[{"constant":false,"id":5057,"mutability":"mutable","name":"result","nameLocation":"6584:6:21","nodeType":"VariableDeclaration","scope":5104,"src":"6576:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5059,"initialValue":{"hexValue":"30","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:21"},{"body":{"id":5098,"nodeType":"Block","src":"6642:189:21","statements":[{"assignments":[5071],"declarations":[{"constant":false,"id":5071,"mutability":"mutable","name":"chr","nameLocation":"6662:3:21","nodeType":"VariableDeclaration","scope":5098,"src":"6656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5070,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5081,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5076,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"6711:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"6688:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5073,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:21","typeDescriptions":{}}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5072,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"6668:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6741:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:21","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5089,"nodeType":"IfStatement","src":"6737:30:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5048,"id":5088,"nodeType":"Return","src":"6750:17:21"}},{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6781:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"nodeType":"ExpressionStatement","src":"6781:12:21"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6807:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5095,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6817:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"6807:13:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5065,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"6632:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"initializationExpression":{"assignments":[5061],"declarations":[{"constant":false,"id":5061,"mutability":"mutable","name":"i","nameLocation":"6617:1:21","nodeType":"VariableDeclaration","scope":5099,"src":"6609:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5063,"initialValue":{"id":5062,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"6621:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:21"},"loopExpression":{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:21","subExpression":{"id":5067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"6639:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"6637:3:21"},"nodeType":"ForStatement","src":"6604:227:21"},{"expression":{"components":[{"hexValue":"74727565","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6854:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5048,"id":5103,"nodeType":"Return","src":"6840:21:21"}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"6147:201:21","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5105,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:21","nodeType":"FunctionDefinition","parameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"input","nameLocation":"6414:5:21","nodeType":"VariableDeclaration","scope":5105,"src":"6400:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5037,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5040,"mutability":"mutable","name":"begin","nameLocation":"6437:5:21","nodeType":"VariableDeclaration","scope":5105,"src":"6429:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5042,"mutability":"mutable","name":"end","nameLocation":"6460:3:21","nodeType":"VariableDeclaration","scope":5105,"src":"6452:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:21"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"success","nameLocation":"6497:7:21","nodeType":"VariableDeclaration","scope":5105,"src":"6492:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5044,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"value","nameLocation":"6514:5:21","nodeType":"VariableDeclaration","scope":5105,"src":"6506:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5046,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:21"},"scope":5798,"src":"6353:515:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5123,"nodeType":"Block","src":"7165:63:21","statements":[{"expression":{"arguments":[{"id":5114,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7191:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5118,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"7207:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5116,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:21","typeDescriptions":{}}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:21","memberName":"length","nodeType":"MemberAccess","src":"7201:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5113,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5124,5155],"referencedDeclaration":5155,"src":"7182:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5112,"id":5122,"nodeType":"Return","src":"7175:46:21"}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"6874:216:21","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:21","nodeType":"FunctionDefinition","parameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"input","nameLocation":"7127:5:21","nodeType":"VariableDeclaration","scope":5124,"src":"7113:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5107,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:21"},"returnParameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5124,"src":"7157:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5110,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:21"},"scope":5798,"src":"7095:133:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5154,"nodeType":"Block","src":"7633:151:21","statements":[{"assignments":[5137,5139],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"success","nameLocation":"7649:7:21","nodeType":"VariableDeclaration","scope":5154,"src":"7644:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5136,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"value","nameLocation":"7665:5:21","nodeType":"VariableDeclaration","scope":5154,"src":"7658:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5138,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5145,"initialValue":{"arguments":[{"id":5141,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7686:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5142,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"7693:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5143,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"7700:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5176,5218],"referencedDeclaration":5218,"src":"7674:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:21"},{"condition":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:21","subExpression":{"id":5146,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"7719:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"7714:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5148,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"7735:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5150,"nodeType":"RevertStatement","src":"7728:27:21"}},{"expression":{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"7772:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5135,"id":5153,"nodeType":"Return","src":"7765:12:21"}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"7234:296:21","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5155,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:21","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"input","nameLocation":"7567:5:21","nodeType":"VariableDeclaration","scope":5155,"src":"7553:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5126,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"begin","nameLocation":"7582:5:21","nodeType":"VariableDeclaration","scope":5155,"src":"7574:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"end","nameLocation":"7597:3:21","nodeType":"VariableDeclaration","scope":5155,"src":"7589:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:21"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5155,"src":"7625:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5133,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:21"},"scope":5798,"src":"7535:249:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"8175:82:21","statements":[{"expression":{"arguments":[{"id":5166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"8220:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5170,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"8236:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5168,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:21","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:21","memberName":"length","nodeType":"MemberAccess","src":"8230:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5165,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"8192:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5164,"id":5174,"nodeType":"Return","src":"8185:65:21"}]},"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"7790:287:21","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:21","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"input","nameLocation":"8117:5:21","nodeType":"VariableDeclaration","scope":5176,"src":"8103:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5157,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:21"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"success","nameLocation":"8152:7:21","nodeType":"VariableDeclaration","scope":5176,"src":"8147:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5160,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"value","nameLocation":"8168:5:21","nodeType":"VariableDeclaration","scope":5176,"src":"8161:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5162,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:21"},"scope":5798,"src":"8082:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5181,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:21","nodeType":"VariableDeclaration","scope":5798,"src":"8263:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5217,"nodeType":"Block","src":"8779:143:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"8793:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"8805:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5196,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:21","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:21","memberName":"length","nodeType":"MemberAccess","src":"8799:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"8822:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5203,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"8830:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"8789:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5194,"id":5209,"nodeType":"Return","src":"8835:17:21"}},{"expression":{"arguments":[{"id":5212,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"8897:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"8904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5214,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"8911:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"8869:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5194,"id":5216,"nodeType":"Return","src":"8862:53:21"}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"8320:303:21","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5218,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:21","nodeType":"FunctionDefinition","parameters":{"id":5189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"input","nameLocation":"8672:5:21","nodeType":"VariableDeclaration","scope":5218,"src":"8658:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5183,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5186,"mutability":"mutable","name":"begin","nameLocation":"8695:5:21","nodeType":"VariableDeclaration","scope":5218,"src":"8687:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5188,"mutability":"mutable","name":"end","nameLocation":"8718:3:21","nodeType":"VariableDeclaration","scope":5218,"src":"8710:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:21"},"returnParameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"success","nameLocation":"8756:7:21","nodeType":"VariableDeclaration","scope":5218,"src":"8751:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5190,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"value","nameLocation":"8772:5:21","nodeType":"VariableDeclaration","scope":5218,"src":"8765:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5192,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:21"},"scope":5798,"src":"8628:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5338,"nodeType":"Block","src":"9299:812:21","statements":[{"assignments":[5233],"declarations":[{"constant":false,"id":5233,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:21","nodeType":"VariableDeclaration","scope":5338,"src":"9309:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5232,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5238,"initialValue":{"arguments":[{"id":5236,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9337:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5234,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:21","typeDescriptions":{}}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:21"},{"assignments":[5240],"declarations":[{"constant":false,"id":5240,"mutability":"mutable","name":"sign","nameLocation":"9407:4:21","nodeType":"VariableDeclaration","scope":5338,"src":"9400:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5239,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5256,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5241,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"9414:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5242,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5251,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"9471:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"9479:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5250,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"9448:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5248,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:21","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:21","trueExpression":{"arguments":[{"hexValue":"30","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5244,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:21","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:21"},{"assignments":[5258],"declarations":[{"constant":false,"id":5258,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:21","nodeType":"VariableDeclaration","scope":5338,"src":"9567:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5257,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5265,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"9587:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5260,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:21","typeDescriptions":{}}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:21"},{"assignments":[5267],"declarations":[{"constant":false,"id":5267,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:21","nodeType":"VariableDeclaration","scope":5338,"src":"9616:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5266,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5274,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"9636:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5269,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:21","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:21"},{"assignments":[5276],"declarations":[{"constant":false,"id":5276,"mutability":"mutable","name":"offset","nameLocation":"9673:6:21","nodeType":"VariableDeclaration","scope":5338,"src":"9665:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5275,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"9683:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5278,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"9699:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"9682:37:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:21"},{"assignments":[5285,5287],"declarations":[{"constant":false,"id":5285,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:21","nodeType":"VariableDeclaration","scope":5338,"src":"9733:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5284,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:21","nodeType":"VariableDeclaration","scope":5338,"src":"9750:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5295,"initialValue":{"arguments":[{"id":5289,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"9783:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"9790:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5291,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"9798:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5293,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"9806:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4998,5035],"referencedDeclaration":5035,"src":"9770:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"9825:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9839:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5298,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"9850:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"9967:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5317,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"9981:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9997:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5320,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"10009:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5231,"id":5335,"nodeType":"Return","src":"10087:17:21"},"id":5336,"nodeType":"IfStatement","src":"9963:141:21","trueBody":{"id":5331,"nodeType":"Block","src":"10025:56:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5325,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10053:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:21","memberName":"min","nodeType":"MemberAccess","src":"10053:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5231,"id":5330,"nodeType":"Return","src":"10039:31:21"}]}},"id":5337,"nodeType":"IfStatement","src":"9821:283:21","trueBody":{"id":5315,"nodeType":"Block","src":"9866:91:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5302,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"9894:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5310,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9936:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5308,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:21","typeDescriptions":{}}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:21","trueExpression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:21","subExpression":{"arguments":[{"id":5305,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9917:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5303,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:21","typeDescriptions":{}}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5231,"id":5314,"nodeType":"Return","src":"9880:66:21"}]}}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"8928:200:21","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5339,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:21","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"input","nameLocation":"9193:5:21","nodeType":"VariableDeclaration","scope":5339,"src":"9179:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5220,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5223,"mutability":"mutable","name":"begin","nameLocation":"9216:5:21","nodeType":"VariableDeclaration","scope":5339,"src":"9208:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5222,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5225,"mutability":"mutable","name":"end","nameLocation":"9239:3:21","nodeType":"VariableDeclaration","scope":5339,"src":"9231:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:21"},"returnParameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"success","nameLocation":"9276:7:21","nodeType":"VariableDeclaration","scope":5339,"src":"9271:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5227,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"9292:5:21","nodeType":"VariableDeclaration","scope":5339,"src":"9285:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5229,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:21"},"scope":5798,"src":"9133:978:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5357,"nodeType":"Block","src":"10456:67:21","statements":[{"expression":{"arguments":[{"id":5348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"10486:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5352,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"10502:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5350,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:21","typeDescriptions":{}}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:21","memberName":"length","nodeType":"MemberAccess","src":"10496:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5347,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5358,5389],"referencedDeclaration":5389,"src":"10473:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5346,"id":5356,"nodeType":"Return","src":"10466:50:21"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"10117:259:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:21","nodeType":"FunctionDefinition","parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"input","nameLocation":"10417:5:21","nodeType":"VariableDeclaration","scope":5358,"src":"10403:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5341,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:21"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"10447:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:21"},"scope":5798,"src":"10381:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5388,"nodeType":"Block","src":"10937:156:21","statements":[{"assignments":[5371,5373],"declarations":[{"constant":false,"id":5371,"mutability":"mutable","name":"success","nameLocation":"10953:7:21","nodeType":"VariableDeclaration","scope":5388,"src":"10948:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5370,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5373,"mutability":"mutable","name":"value","nameLocation":"10970:5:21","nodeType":"VariableDeclaration","scope":5388,"src":"10962:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5379,"initialValue":{"arguments":[{"id":5375,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"10995:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5376,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"11002:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5377,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11009:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5410,5447],"referencedDeclaration":5447,"src":"10979:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:21"},{"condition":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:21","subExpression":{"id":5380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"11028:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"11023:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5382,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11044:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"RevertStatement","src":"11037:27:21"}},{"expression":{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"11081:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5369,"id":5387,"nodeType":"Return","src":"11074:12:21"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"10529:300:21","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5389,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:21","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"input","nameLocation":"10870:5:21","nodeType":"VariableDeclaration","scope":5389,"src":"10856:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5360,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"begin","nameLocation":"10885:5:21","nodeType":"VariableDeclaration","scope":5389,"src":"10877:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5365,"mutability":"mutable","name":"end","nameLocation":"10900:3:21","nodeType":"VariableDeclaration","scope":5389,"src":"10892:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5364,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:21"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5389,"src":"10928:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:21"},"scope":5798,"src":"10834:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5409,"nodeType":"Block","src":"11420:86:21","statements":[{"expression":{"arguments":[{"id":5400,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"11469:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5404,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"11485:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5402,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:21","typeDescriptions":{}}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:21","memberName":"length","nodeType":"MemberAccess","src":"11479:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5399,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"11437:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5398,"id":5408,"nodeType":"Return","src":"11430:69:21"}]},"documentation":{"id":5390,"nodeType":"StructuredDocumentation","src":"11099:218:21","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5410,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:21","nodeType":"FunctionDefinition","parameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"input","nameLocation":"11361:5:21","nodeType":"VariableDeclaration","scope":5410,"src":"11347:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5391,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:21"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"success","nameLocation":"11396:7:21","nodeType":"VariableDeclaration","scope":5410,"src":"11391:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5394,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"11413:5:21","nodeType":"VariableDeclaration","scope":5410,"src":"11405:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:21"},"scope":5798,"src":"11322:184:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5446,"nodeType":"Block","src":"11914:147:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"11928:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5427,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"11940:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5425,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:21","typeDescriptions":{}}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:21","memberName":"length","nodeType":"MemberAccess","src":"11934:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"11957:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"11965:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"IfStatement","src":"11924:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5423,"id":5438,"nodeType":"Return","src":"11970:17:21"}},{"expression":{"arguments":[{"id":5441,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"12036:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"12043:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"12050:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5440,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"12004:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5423,"id":5445,"nodeType":"Return","src":"11997:57:21"}]},"documentation":{"id":5411,"nodeType":"StructuredDocumentation","src":"11512:241:21","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5447,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:21","nodeType":"FunctionDefinition","parameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"input","nameLocation":"11806:5:21","nodeType":"VariableDeclaration","scope":5447,"src":"11792:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5412,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5415,"mutability":"mutable","name":"begin","nameLocation":"11829:5:21","nodeType":"VariableDeclaration","scope":5447,"src":"11821:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5417,"mutability":"mutable","name":"end","nameLocation":"11852:3:21","nodeType":"VariableDeclaration","scope":5447,"src":"11844:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:21"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"success","nameLocation":"11890:7:21","nodeType":"VariableDeclaration","scope":5447,"src":"11885:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5419,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"value","nameLocation":"11907:5:21","nodeType":"VariableDeclaration","scope":5447,"src":"11899:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:21"},"scope":5798,"src":"11758:303:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5549,"nodeType":"Block","src":"12447:880:21","statements":[{"assignments":[5462],"declarations":[{"constant":false,"id":5462,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:21","nodeType":"VariableDeclaration","scope":5549,"src":"12457:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5461,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5467,"initialValue":{"arguments":[{"id":5465,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"12485:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5463,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:21","typeDescriptions":{}}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:21"},{"assignments":[5469],"declarations":[{"constant":false,"id":5469,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:21","nodeType":"VariableDeclaration","scope":5549,"src":"12539:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5468,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5489,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12557:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12563:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5479,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"12607:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5480,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12615:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"12584:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5476,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:21","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5483,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:21","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:21"},{"assignments":[5491],"declarations":[{"constant":false,"id":5491,"mutability":"mutable","name":"offset","nameLocation":"12727:6:21","nodeType":"VariableDeclaration","scope":5549,"src":"12719:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5497,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5492,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"12736:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"12736:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:21"},{"assignments":[5499],"declarations":[{"constant":false,"id":5499,"mutability":"mutable","name":"result","nameLocation":"12777:6:21","nodeType":"VariableDeclaration","scope":5549,"src":"12769:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5501,"initialValue":{"hexValue":"30","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:21"},{"body":{"id":5543,"nodeType":"Block","src":"12844:446:21","statements":[{"assignments":[5515],"declarations":[{"constant":false,"id":5515,"mutability":"mutable","name":"chr","nameLocation":"12864:3:21","nodeType":"VariableDeclaration","scope":5543,"src":"12858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5514,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5525,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5520,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"12913:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"12921:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5519,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"12890:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5517,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:21","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5516,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"12870:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"12943:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"12939:31:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5460,"id":5532,"nodeType":"Return","src":"12953:17:21"}},{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"12984:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"12984:12:21"},{"id":5542,"nodeType":"UncheckedBlock","src":"13010:270:21","statements":[{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"13252:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5539,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"13262:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"13252:13:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"12830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5509,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12834:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5544,"initializationExpression":{"assignments":[5503],"declarations":[{"constant":false,"id":5503,"mutability":"mutable","name":"i","nameLocation":"12810:1:21","nodeType":"VariableDeclaration","scope":5544,"src":"12802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12814:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5505,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"12822:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:21"},"loopExpression":{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:21","subExpression":{"id":5511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"12841:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"12839:3:21"},"nodeType":"ForStatement","src":"12797:493:21"},{"expression":{"components":[{"hexValue":"74727565","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"13313:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5460,"id":5548,"nodeType":"Return","src":"13299:21:21"}]},"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"12067:204:21","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5550,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:21","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"input","nameLocation":"12340:5:21","nodeType":"VariableDeclaration","scope":5550,"src":"12326:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5449,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"begin","nameLocation":"12363:5:21","nodeType":"VariableDeclaration","scope":5550,"src":"12355:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"end","nameLocation":"12386:3:21","nodeType":"VariableDeclaration","scope":5550,"src":"12378:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:21"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"success","nameLocation":"12423:7:21","nodeType":"VariableDeclaration","scope":5550,"src":"12418:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5456,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"value","nameLocation":"12440:5:21","nodeType":"VariableDeclaration","scope":5550,"src":"12432:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:21"},"scope":5798,"src":"12276:1051:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5568,"nodeType":"Block","src":"13625:67:21","statements":[{"expression":{"arguments":[{"id":5559,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13655:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13671:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5561,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:21","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:21","memberName":"length","nodeType":"MemberAccess","src":"13665:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5569,5600],"referencedDeclaration":5600,"src":"13642:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5557,"id":5567,"nodeType":"Return","src":"13635:50:21"}]},"documentation":{"id":5551,"nodeType":"StructuredDocumentation","src":"13333:212:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:21","nodeType":"FunctionDefinition","parameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"input","nameLocation":"13586:5:21","nodeType":"VariableDeclaration","scope":5569,"src":"13572:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5552,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:21"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5569,"src":"13616:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5555,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:21"},"scope":5798,"src":"13550:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5599,"nodeType":"Block","src":"14058:165:21","statements":[{"assignments":[5582,5584],"declarations":[{"constant":false,"id":5582,"mutability":"mutable","name":"success","nameLocation":"14074:7:21","nodeType":"VariableDeclaration","scope":5599,"src":"14069:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5581,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5584,"mutability":"mutable","name":"value","nameLocation":"14091:5:21","nodeType":"VariableDeclaration","scope":5599,"src":"14083:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5583,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5590,"initialValue":{"arguments":[{"id":5586,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"14116:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5587,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"14123:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5588,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"14130:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5585,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5621,5725],"referencedDeclaration":5725,"src":"14100:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:21"},{"condition":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:21","subExpression":{"id":5591,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"14149:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5596,"nodeType":"IfStatement","src":"14144:50:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5593,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"14165:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5595,"nodeType":"RevertStatement","src":"14158:36:21"}},{"expression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"14211:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5580,"id":5598,"nodeType":"Return","src":"14204:12:21"}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"13698:252:21","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5600,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:21","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"input","nameLocation":"13991:5:21","nodeType":"VariableDeclaration","scope":5600,"src":"13977:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5571,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5574,"mutability":"mutable","name":"begin","nameLocation":"14006:5:21","nodeType":"VariableDeclaration","scope":5600,"src":"13998:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5573,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5576,"mutability":"mutable","name":"end","nameLocation":"14021:3:21","nodeType":"VariableDeclaration","scope":5600,"src":"14013:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:21"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5600,"src":"14049:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5578,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:21"},"scope":5798,"src":"13955:268:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"14523:70:21","statements":[{"expression":{"arguments":[{"id":5611,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"14556:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5615,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"14572:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5613,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:21","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:21","memberName":"length","nodeType":"MemberAccess","src":"14566:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5621,5725],"referencedDeclaration":5725,"src":"14540:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5609,"id":5619,"nodeType":"Return","src":"14533:53:21"}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"14229:191:21","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:21","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"input","nameLocation":"14464:5:21","nodeType":"VariableDeclaration","scope":5621,"src":"14450:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5602,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:21"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"success","nameLocation":"14499:7:21","nodeType":"VariableDeclaration","scope":5621,"src":"14494:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5605,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5608,"mutability":"mutable","name":"value","nameLocation":"14516:5:21","nodeType":"VariableDeclaration","scope":5621,"src":"14508:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5607,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:21"},"scope":5798,"src":"14425:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"14963:733:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"14977:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5638,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"14989:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5636,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:21","typeDescriptions":{}}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:21","memberName":"length","nodeType":"MemberAccess","src":"14983:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5642,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15006:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5643,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"15014:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5653,"nodeType":"IfStatement","src":"14973:72:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5647,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:21","typeDescriptions":{}}},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5634,"id":5652,"nodeType":"Return","src":"15019:26:21"}},{"assignments":[5655],"declarations":[{"constant":false,"id":5655,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:21","nodeType":"VariableDeclaration","scope":5724,"src":"15056:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5654,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5678,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"15074:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15080:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5667,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"15130:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5665,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:21","typeDescriptions":{}}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5669,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15138:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5664,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"15101:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5662,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:21","typeDescriptions":{}}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5672,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:21","typeDescriptions":{}}},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:21"},{"assignments":[5680],"declarations":[{"constant":false,"id":5680,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:21","nodeType":"VariableDeclaration","scope":5724,"src":"15242:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5682,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"15272:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"15272:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"15359:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5690,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15365:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5692,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"15374:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5722,"nodeType":"Block","src":"15639:51:21","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5716,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:21","typeDescriptions":{}}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5634,"id":5721,"nodeType":"Return","src":"15653:26:21"}]},"id":5723,"nodeType":"IfStatement","src":"15355:335:21","trueBody":{"id":5714,"nodeType":"Block","src":"15390:243:21","statements":[{"assignments":[5695,5697],"declarations":[{"constant":false,"id":5695,"mutability":"mutable","name":"s","nameLocation":"15511:1:21","nodeType":"VariableDeclaration","scope":5714,"src":"15506:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5694,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"v","nameLocation":"15522:1:21","nodeType":"VariableDeclaration","scope":5714,"src":"15514:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5703,"initialValue":{"arguments":[{"id":5699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"15559:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5700,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15566:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5701,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"15573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5698,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"15527:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:21"},{"expression":{"components":[{"id":5704,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"15599:1:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5709,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"15618:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5707,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:21","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5705,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:21","typeDescriptions":{}}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5634,"id":5713,"nodeType":"Return","src":"15591:31:21"}]}}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"14599:203:21","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:21","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"input","nameLocation":"14855:5:21","nodeType":"VariableDeclaration","scope":5725,"src":"14841:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5623,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"begin","nameLocation":"14878:5:21","nodeType":"VariableDeclaration","scope":5725,"src":"14870:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5628,"mutability":"mutable","name":"end","nameLocation":"14901:3:21","nodeType":"VariableDeclaration","scope":5725,"src":"14893:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5627,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:21"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"success","nameLocation":"14939:7:21","nodeType":"VariableDeclaration","scope":5725,"src":"14934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5630,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"value","nameLocation":"14956:5:21","nodeType":"VariableDeclaration","scope":5725,"src":"14948:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5632,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:21"},"scope":5798,"src":"14807:889:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"15765:461:21","statements":[{"assignments":[5733],"declarations":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"15781:5:21","nodeType":"VariableDeclaration","scope":5784,"src":"15775:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5732,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5738,"initialValue":{"arguments":[{"id":5736,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"15795:3:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5734,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:21","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:21"},{"id":5781,"nodeType":"UncheckedBlock","src":"15959:238:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"15987:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:21","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16001:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:21","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16047:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16061:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:21","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16108:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:21","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5773,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16171:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:21","memberName":"max","nodeType":"MemberAccess","src":"16171:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5731,"id":5777,"nodeType":"Return","src":"16164:22:21"},"id":5778,"nodeType":"IfStatement","src":"16104:82:21","trueBody":{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16134:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:21","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5771,"nodeType":"ExpressionStatement","src":"16134:11:21"}},"id":5779,"nodeType":"IfStatement","src":"16043:143:21","trueBody":{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16074:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:21","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5760,"nodeType":"ExpressionStatement","src":"16074:11:21"}},"id":5780,"nodeType":"IfStatement","src":"15983:203:21","trueBody":{"expression":{"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16013:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5749,"nodeType":"ExpressionStatement","src":"16013:11:21"}}]},{"expression":{"id":5782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"16214:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5731,"id":5783,"nodeType":"Return","src":"16207:12:21"}]},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:21","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"chr","nameLocation":"15731:3:21","nodeType":"VariableDeclaration","scope":5785,"src":"15724:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5726,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:21"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"15758:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5729,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:21"},"scope":5798,"src":"15702:524:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5796,"nodeType":"Block","src":"16611:225:21","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:21","statements":[{"nodeType":"YulAssignment","src":"16774:46:21","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:21","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:21"},"nodeType":"YulFunctionCall","src":"16801:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:21"},"nodeType":"YulFunctionCall","src":"16789:30:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:21"},"nodeType":"YulFunctionCall","src":"16783:37:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5788,"isOffset":false,"isSlot":false,"src":"16793:6:21","valueSize":1},{"declaration":5790,"isOffset":false,"isSlot":false,"src":"16811:6:21","valueSize":1},{"declaration":5793,"isOffset":false,"isSlot":false,"src":"16774:5:21","valueSize":1}],"flags":["memory-safe"],"id":5795,"nodeType":"InlineAssembly","src":"16735:95:21"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"16232:268:21","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:21","nodeType":"FunctionDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:21","nodeType":"VariableDeclaration","scope":5797,"src":"16537:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5787,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5790,"mutability":"mutable","name":"offset","nameLocation":"16566:6:21","nodeType":"VariableDeclaration","scope":5797,"src":"16558:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:21"},"returnParameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"value","nameLocation":"16604:5:21","nodeType":"VariableDeclaration","scope":5797,"src":"16596:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:21"},"scope":5798,"src":"16505:331:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5799,"src":"297:16541:21","usedErrors":[4622,4625,4628],"usedEvents":[]}],"src":"101:16738:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5822],"IERC165":[5834]},"id":5823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5823,"sourceUnit":5835,"src":"140:38:22","symbolAliases":[{"foreign":{"id":5801,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5804,"name":"IERC165","nameLocations":["688:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":5834,"src":"688:7:22"},"id":5805,"nodeType":"InheritanceSpecifier","src":"688:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5803,"nodeType":"StructuredDocumentation","src":"180:479:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":5822,"linearizedBaseContracts":[5822,5834],"name":"ERC165","nameLocation":"678:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5833],"body":{"id":5820,"nodeType":"Block","src":"845:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"862:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5815,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"882:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5834_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5834_$","typeString":"type(contract IERC165)"}],"id":5814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5834","typeString":"type(contract IERC165)"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5812,"id":5819,"nodeType":"Return","src":"855:47:22"}]},"documentation":{"id":5806,"nodeType":"StructuredDocumentation","src":"702:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5821,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:22","nodeType":"FunctionDefinition","parameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:22","nodeType":"VariableDeclaration","scope":5821,"src":"790:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5807,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:22"},"returnParameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5821,"src":"839:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5810,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:22"},"scope":5822,"src":"763:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5823,"src":"660:251:22","usedErrors":[],"usedEvents":[]}],"src":"114:798:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5834]},"id":5835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5824,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5825,"nodeType":"StructuredDocumentation","src":"141:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5834,"linearizedBaseContracts":[5834],"name":"IERC165","nameLocation":"432:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"446:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5833,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:23","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:23","nodeType":"VariableDeclaration","scope":5833,"src":"818:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5827,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:23"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5833,"src":"861:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5830,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:23"},"scope":5834,"src":"791:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5835,"src":"422:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:755:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7440],"Panic":[4344],"SafeCast":[9205]},"id":7441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5836,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5838,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7441,"sourceUnit":4345,"src":"129:35:24","symbolAliases":[{"foreign":{"id":5837,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7441,"sourceUnit":9206,"src":"165:40:24","symbolAliases":[{"foreign":{"id":5839,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5841,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7440,"linearizedBaseContracts":[7440],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5846,"members":[{"id":5842,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":5843,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":5844,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":5845,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":5877,"nodeType":"Block","src":"677:140:24","statements":[{"id":5876,"nodeType":"UncheckedBlock","src":"687:124:24","statements":[{"assignments":[5859],"declarations":[{"constant":false,"id":5859,"mutability":"mutable","name":"c","nameLocation":"719:1:24","nodeType":"VariableDeclaration","scope":5876,"src":"711:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"727:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"746:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"750:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5871,"nodeType":"IfStatement","src":"742:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5857,"id":5870,"nodeType":"Return","src":"753:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5873,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"798:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5857,"id":5875,"nodeType":"Return","src":"784:16:24"}]}]},"documentation":{"id":5847,"nodeType":"StructuredDocumentation","src":"475:106:24","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":5878,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:24","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"a","nameLocation":"610:1:24","nodeType":"VariableDeclaration","scope":5878,"src":"602:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5851,"mutability":"mutable","name":"b","nameLocation":"621:1:24","nodeType":"VariableDeclaration","scope":5878,"src":"613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:24"},"returnParameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"success","nameLocation":"652:7:24","nodeType":"VariableDeclaration","scope":5878,"src":"647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5853,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5856,"mutability":"mutable","name":"result","nameLocation":"669:6:24","nodeType":"VariableDeclaration","scope":5878,"src":"661:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:24"},"scope":7440,"src":"586:231:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5905,"nodeType":"Block","src":"1028:113:24","statements":[{"id":5904,"nodeType":"UncheckedBlock","src":"1038:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"1066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"1070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5897,"nodeType":"IfStatement","src":"1062:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5889,"id":5896,"nodeType":"Return","src":"1073:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"1118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5900,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"1122:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5889,"id":5903,"nodeType":"Return","src":"1104:20:24"}]}]},"documentation":{"id":5879,"nodeType":"StructuredDocumentation","src":"823:109:24","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":5906,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:24","nodeType":"FunctionDefinition","parameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"a","nameLocation":"961:1:24","nodeType":"VariableDeclaration","scope":5906,"src":"953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5880,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5883,"mutability":"mutable","name":"b","nameLocation":"972:1:24","nodeType":"VariableDeclaration","scope":5906,"src":"964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5882,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:24"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"success","nameLocation":"1003:7:24","nodeType":"VariableDeclaration","scope":5906,"src":"998:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5885,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5888,"mutability":"mutable","name":"result","nameLocation":"1020:6:24","nodeType":"VariableDeclaration","scope":5906,"src":"1012:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:24"},"scope":7440,"src":"937:204:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5947,"nodeType":"Block","src":"1355:417:24","statements":[{"id":5946,"nodeType":"UncheckedBlock","src":"1365:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"1623:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"1619:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5917,"id":5924,"nodeType":"Return","src":"1631:16:24"}},{"assignments":[5927],"declarations":[{"constant":false,"id":5927,"mutability":"mutable","name":"c","nameLocation":"1669:1:24","nodeType":"VariableDeclaration","scope":5946,"src":"1661:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"1673:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"1677:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5932,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"1696:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"1700:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"1705:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5941,"nodeType":"IfStatement","src":"1692:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5917,"id":5940,"nodeType":"Return","src":"1708:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5943,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"1753:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5917,"id":5945,"nodeType":"Return","src":"1739:16:24"}]}]},"documentation":{"id":5907,"nodeType":"StructuredDocumentation","src":"1147:112:24","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:24","nodeType":"FunctionDefinition","parameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"a","nameLocation":"1288:1:24","nodeType":"VariableDeclaration","scope":5948,"src":"1280:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5911,"mutability":"mutable","name":"b","nameLocation":"1299:1:24","nodeType":"VariableDeclaration","scope":5948,"src":"1291:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:24"},"returnParameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"success","nameLocation":"1330:7:24","nodeType":"VariableDeclaration","scope":5948,"src":"1325:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5913,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5916,"mutability":"mutable","name":"result","nameLocation":"1347:6:24","nodeType":"VariableDeclaration","scope":5948,"src":"1339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:24"},"scope":7440,"src":"1264:508:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5975,"nodeType":"Block","src":"1987:114:24","statements":[{"id":5974,"nodeType":"UncheckedBlock","src":"1997:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"2025:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5967,"nodeType":"IfStatement","src":"2021:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5959,"id":5966,"nodeType":"Return","src":"2033:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"2078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"2082:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5959,"id":5973,"nodeType":"Return","src":"2064:20:24"}]}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"1778:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:24","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"a","nameLocation":"1920:1:24","nodeType":"VariableDeclaration","scope":5976,"src":"1912:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5953,"mutability":"mutable","name":"b","nameLocation":"1931:1:24","nodeType":"VariableDeclaration","scope":5976,"src":"1923:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:24"},"returnParameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"success","nameLocation":"1962:7:24","nodeType":"VariableDeclaration","scope":5976,"src":"1957:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5955,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5958,"mutability":"mutable","name":"result","nameLocation":"1979:6:24","nodeType":"VariableDeclaration","scope":5976,"src":"1971:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:24"},"scope":7440,"src":"1896:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6003,"nodeType":"Block","src":"2326:114:24","statements":[{"id":6002,"nodeType":"UncheckedBlock","src":"2336:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5988,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"2364:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"nodeType":"IfStatement","src":"2360:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5987,"id":5994,"nodeType":"Return","src":"2372:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"2417:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"2421:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5987,"id":6001,"nodeType":"Return","src":"2403:20:24"}]}]},"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"2107:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6004,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:24","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"a","nameLocation":"2259:1:24","nodeType":"VariableDeclaration","scope":6004,"src":"2251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5981,"mutability":"mutable","name":"b","nameLocation":"2270:1:24","nodeType":"VariableDeclaration","scope":6004,"src":"2262:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:24"},"returnParameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"success","nameLocation":"2301:7:24","nodeType":"VariableDeclaration","scope":6004,"src":"2296:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5983,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5986,"mutability":"mutable","name":"result","nameLocation":"2318:6:24","nodeType":"VariableDeclaration","scope":6004,"src":"2310:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:24"},"scope":7440,"src":"2235:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"2912:207:24","statements":[{"id":6029,"nodeType":"UncheckedBlock","src":"2922:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"3060:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"3066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"3070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6023,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3091:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6021,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"3075:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"3075:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6015,"id":6028,"nodeType":"Return","src":"3053:49:24"}]}]},"documentation":{"id":6005,"nodeType":"StructuredDocumentation","src":"2446:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:24","nodeType":"FunctionDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"condition","nameLocation":"2847:9:24","nodeType":"VariableDeclaration","scope":6031,"src":"2842:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6006,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6009,"mutability":"mutable","name":"a","nameLocation":"2866:1:24","nodeType":"VariableDeclaration","scope":6031,"src":"2858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6011,"mutability":"mutable","name":"b","nameLocation":"2877:1:24","nodeType":"VariableDeclaration","scope":6031,"src":"2869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:24"},"returnParameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"2903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:24"},"scope":7440,"src":"2825:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"3256:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3281:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"3285:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"3291:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6041,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"3273:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6040,"id":6048,"nodeType":"Return","src":"3266:27:24"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"3125:59:24","text":" @dev Returns the largest of two numbers."},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:24","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"a","nameLocation":"3210:1:24","nodeType":"VariableDeclaration","scope":6050,"src":"3202:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6036,"mutability":"mutable","name":"b","nameLocation":"3221:1:24","nodeType":"VariableDeclaration","scope":6050,"src":"3213:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:24"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"3247:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:24"},"scope":7440,"src":"3189:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6068,"nodeType":"Block","src":"3438:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"3463:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"3470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"3473:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6060,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6059,"id":6067,"nodeType":"Return","src":"3448:27:24"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"3306:60:24","text":" @dev Returns the smallest of two numbers."},"id":6069,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:24","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"a","nameLocation":"3392:1:24","nodeType":"VariableDeclaration","scope":6069,"src":"3384:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"b","nameLocation":"3403:1:24","nodeType":"VariableDeclaration","scope":6069,"src":"3395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:24"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6069,"src":"3429:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:24"},"scope":7440,"src":"3371:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6091,"nodeType":"Block","src":"3666:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"3721:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"3725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"3731:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"3735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6078,"id":6090,"nodeType":"Return","src":"3713:28:24"}]},"documentation":{"id":6070,"nodeType":"StructuredDocumentation","src":"3488:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6092,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:24","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"a","nameLocation":"3620:1:24","nodeType":"VariableDeclaration","scope":6092,"src":"3612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"b","nameLocation":"3631:1:24","nodeType":"VariableDeclaration","scope":6092,"src":"3623:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:24"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6092,"src":"3657:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:24"},"scope":7440,"src":"3595:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6132,"nodeType":"Block","src":"4040:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6113,"nodeType":"IfStatement","src":"4050:150:24","trueBody":{"id":6112,"nodeType":"Block","src":"4062:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":6108,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"4166:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4311,"src":"4166:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6105,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"4154:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"4154:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6111,"nodeType":"ExpressionStatement","src":"4154:35:24"}]}},{"id":6131,"nodeType":"UncheckedBlock","src":"4583:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"4630:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"4614:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"4614:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"4641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4650:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6101,"id":6130,"nodeType":"Return","src":"4607:49:24"}]}]},"documentation":{"id":6093,"nodeType":"StructuredDocumentation","src":"3754:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6133,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:24","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"a","nameLocation":"3994:1:24","nodeType":"VariableDeclaration","scope":6133,"src":"3986:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"b","nameLocation":"4005:1:24","nodeType":"VariableDeclaration","scope":6133,"src":"3997:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:24"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6133,"src":"4031:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:24"},"scope":7440,"src":"3969:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6269,"nodeType":"Block","src":"5094:4128:24","statements":[{"id":6268,"nodeType":"UncheckedBlock","src":"5104:4112:24","statements":[{"assignments":[6146],"declarations":[{"constant":false,"id":6146,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:24","nodeType":"VariableDeclaration","scope":6268,"src":"5433:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"5449:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6148,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"5453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:24"},{"assignments":[6152],"declarations":[{"constant":false,"id":6152,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:24","nodeType":"VariableDeclaration","scope":6268,"src":"5513:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6153,"nodeType":"VariableDeclarationStatement","src":"5513:13:24"},{"AST":{"nodeType":"YulBlock","src":"5593:122:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:24"},"nodeType":"YulFunctionCall","src":"5634:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:24"},"nodeType":"YulFunctionCall","src":"5621:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:24","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:24"},"nodeType":"YulFunctionCall","src":"5671:14:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:24"},"nodeType":"YulFunctionCall","src":"5687:13:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:24"},"nodeType":"YulFunctionCall","src":"5667:34:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6146,"isOffset":false,"isSlot":false,"src":"5679:5:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"5694:5:24","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"5658:5:24","valueSize":1},{"declaration":6136,"isOffset":false,"isSlot":false,"src":"5628:1:24","valueSize":1},{"declaration":6138,"isOffset":false,"isSlot":false,"src":"5631:1:24","valueSize":1}],"id":6154,"nodeType":"InlineAssembly","src":"5584:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"5796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"5792:368:24","trueBody":{"id":6162,"nodeType":"Block","src":"5808:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6158,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"6126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6159,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6134:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6144,"id":6161,"nodeType":"Return","src":"6119:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6165,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"6285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6182,"nodeType":"IfStatement","src":"6266:143:24","trueBody":{"id":6181,"nodeType":"Block","src":"6292:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6330:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6174,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6348:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4311,"src":"6348:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6176,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6372:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4307,"src":"6372:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6170,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"6322:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6167,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6310:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"6310:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6180,"nodeType":"ExpressionStatement","src":"6310:84:24"}]}},{"assignments":[6184],"declarations":[{"constant":false,"id":6184,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:24","nodeType":"VariableDeclaration","scope":6268,"src":"6664:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6183,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6185,"nodeType":"VariableDeclarationStatement","src":"6664:17:24"},{"AST":{"nodeType":"YulBlock","src":"6704:291:24","statements":[{"nodeType":"YulAssignment","src":"6773:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:24"},"nodeType":"YulFunctionCall","src":"6786:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:24"}]},{"nodeType":"YulAssignment","src":"6893:41:24","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:24"},"nodeType":"YulFunctionCall","src":"6913:20:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:24"},"nodeType":"YulFunctionCall","src":"6902:32:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:24"}]},{"nodeType":"YulAssignment","src":"6951:30:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:24"},"nodeType":"YulFunctionCall","src":"6960:21:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6140,"isOffset":false,"isSlot":false,"src":"6799:11:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"6927:5:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"6951:5:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"6964:5:24","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"6893:5:24","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"6906:5:24","valueSize":1},{"declaration":6184,"isOffset":false,"isSlot":false,"src":"6773:9:24","valueSize":1},{"declaration":6184,"isOffset":false,"isSlot":false,"src":"6916:9:24","valueSize":1},{"declaration":6184,"isOffset":false,"isSlot":false,"src":"6971:9:24","valueSize":1},{"declaration":6136,"isOffset":false,"isSlot":false,"src":"6793:1:24","valueSize":1},{"declaration":6138,"isOffset":false,"isSlot":false,"src":"6796:1:24","valueSize":1}],"id":6186,"nodeType":"InlineAssembly","src":"6695:300:24"},{"assignments":[6188],"declarations":[{"constant":false,"id":6188,"mutability":"mutable","name":"twos","nameLocation":"7207:4:24","nodeType":"VariableDeclaration","scope":6268,"src":"7199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6187,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6195,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"7214:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6191,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"7233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:24"},{"AST":{"nodeType":"YulBlock","src":"7268:366:24","statements":[{"nodeType":"YulAssignment","src":"7333:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:24"},"nodeType":"YulFunctionCall","src":"7348:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:24"}]},{"nodeType":"YulAssignment","src":"7437:25:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:24"},"nodeType":"YulFunctionCall","src":"7446:16:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:24"}]},{"nodeType":"YulAssignment","src":"7581:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:24"},"nodeType":"YulFunctionCall","src":"7597:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:24"},"nodeType":"YulFunctionCall","src":"7593:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:24"},"nodeType":"YulFunctionCall","src":"7589:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6140,"isOffset":false,"isSlot":false,"src":"7333:11:24","valueSize":1},{"declaration":6140,"isOffset":false,"isSlot":false,"src":"7352:11:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"7437:5:24","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"7450:5:24","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"7365:4:24","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"7457:4:24","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"7581:4:24","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"7604:4:24","valueSize":1},{"declaration":6188,"isOffset":false,"isSlot":false,"src":"7611:4:24","valueSize":1}],"id":6196,"nodeType":"InlineAssembly","src":"7259:375:24"},{"expression":{"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6197,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"7700:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"7709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6199,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"7717:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6202,"nodeType":"ExpressionStatement","src":"7700:21:24"},{"assignments":[6204],"declarations":[{"constant":false,"id":6204,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:24","nodeType":"VariableDeclaration","scope":6268,"src":"8056:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6211,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6206,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8079:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:24"},{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6212,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8327:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6215,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8341:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"8312:36:24"},{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6220,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8397:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6223,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8411:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6227,"nodeType":"ExpressionStatement","src":"8382:36:24"},{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6228,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8454:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8469:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6231,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8483:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6235,"nodeType":"ExpressionStatement","src":"8454:36:24"},{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8525:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6239,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8554:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6243,"nodeType":"ExpressionStatement","src":"8525:36:24"},{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8613:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6247,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8627:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6251,"nodeType":"ExpressionStatement","src":"8598:36:24"},{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6252,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"8687:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6255,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"8701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6259,"nodeType":"ExpressionStatement","src":"8672:36:24"},{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"9154:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6261,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"9163:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"9171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6265,"nodeType":"ExpressionStatement","src":"9154:24:24"},{"expression":{"id":6266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"9199:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6144,"id":6267,"nodeType":"Return","src":"9192:13:24"}]}]},"documentation":{"id":6134,"nodeType":"StructuredDocumentation","src":"4679:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6270,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:24","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"x","nameLocation":"5020:1:24","nodeType":"VariableDeclaration","scope":6270,"src":"5012:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6138,"mutability":"mutable","name":"y","nameLocation":"5031:1:24","nodeType":"VariableDeclaration","scope":6270,"src":"5023:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6140,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:24","nodeType":"VariableDeclaration","scope":6270,"src":"5034:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:24"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"result","nameLocation":"5086:6:24","nodeType":"VariableDeclaration","scope":6270,"src":"5078:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:24"},"scope":7440,"src":"4996:4226:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6306,"nodeType":"Block","src":"9461:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6286,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"9485:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6287,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"9488:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"9491:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6285,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6270,6307],"referencedDeclaration":6270,"src":"9478:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6293,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"9539:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":6292,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"9522:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5846_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6296,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"9559:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6297,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"9562:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6298,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"9565:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"9552:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6290,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"9506:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"9506:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6284,"id":6305,"nodeType":"Return","src":"9471:111:24"}]},"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"9228:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6307,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:24","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"x","nameLocation":"9375:1:24","nodeType":"VariableDeclaration","scope":6307,"src":"9367:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"y","nameLocation":"9386:1:24","nodeType":"VariableDeclaration","scope":6307,"src":"9378:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6277,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:24","nodeType":"VariableDeclaration","scope":6307,"src":"9389:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6280,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:24","nodeType":"VariableDeclaration","scope":6307,"src":"9410:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":6279,"nodeType":"UserDefinedTypeName","pathNode":{"id":6278,"name":"Rounding","nameLocations":["9410:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"9410:8:24"},"referencedDeclaration":5846,"src":"9410:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:24"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6307,"src":"9452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:24"},"scope":7440,"src":"9351:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6403,"nodeType":"Block","src":"10223:1849:24","statements":[{"id":6402,"nodeType":"UncheckedBlock","src":"10233:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10261:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6322,"nodeType":"IfStatement","src":"10257:20:24","trueBody":{"expression":{"hexValue":"30","id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6316,"id":6321,"nodeType":"Return","src":"10269:8:24"}},{"assignments":[6324],"declarations":[{"constant":false,"id":6324,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:24","nodeType":"VariableDeclaration","scope":6402,"src":"10748:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"10768:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6326,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10772:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:24"},{"assignments":[6330],"declarations":[{"constant":false,"id":6330,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:24","nodeType":"VariableDeclaration","scope":6402,"src":"10787:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6332,"initialValue":{"id":6331,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:24"},{"assignments":[6334],"declarations":[{"constant":false,"id":6334,"mutability":"mutable","name":"x","nameLocation":"10945:1:24","nodeType":"VariableDeclaration","scope":6402,"src":"10938:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6333,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6336,"initialValue":{"hexValue":"30","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:24"},{"assignments":[6338],"declarations":[{"constant":false,"id":6338,"mutability":"mutable","name":"y","nameLocation":"10971:1:24","nodeType":"VariableDeclaration","scope":6402,"src":"10964:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6337,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6340,"initialValue":{"hexValue":"31","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:24"},{"body":{"id":6377,"nodeType":"Block","src":"11014:882:24","statements":[{"assignments":[6345],"declarations":[{"constant":false,"id":6345,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:24","nodeType":"VariableDeclaration","scope":6377,"src":"11032:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6349,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11051:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6347,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"11057:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:24"},{"expression":{"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6350,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11086:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6351,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"11091:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6352,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6353,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11436:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"11442:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6356,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"11454:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6361,"nodeType":"ExpressionStatement","src":"11085:395:24"},{"expression":{"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"11500:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6363,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"11503:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6364,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6365,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"11585:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"11839:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6367,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"11843:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6370,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"11854:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6368,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"ExpressionStatement","src":"11499:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"10998:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"WhileStatement","src":"10991:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"11914:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"nodeType":"IfStatement","src":"11910:22:24","trueBody":{"expression":{"hexValue":"30","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6316,"id":6383,"nodeType":"Return","src":"11924:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"11983:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6389,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:24","subExpression":{"id":6392,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"12003:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:24","typeDescriptions":{}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6398,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"12015:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6396,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:24","typeDescriptions":{}}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6385,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"11975:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6316,"id":6401,"nodeType":"Return","src":"11968:50:24"}]}]},"documentation":{"id":6308,"nodeType":"StructuredDocumentation","src":"9595:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6404,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:24","nodeType":"FunctionDefinition","parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"a","nameLocation":"10177:1:24","nodeType":"VariableDeclaration","scope":6404,"src":"10169:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6312,"mutability":"mutable","name":"n","nameLocation":"10188:1:24","nodeType":"VariableDeclaration","scope":6404,"src":"10180:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:24"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6404,"src":"10214:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:24"},"scope":7440,"src":"10153:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6424,"nodeType":"Block","src":"12672:82:24","statements":[{"id":6423,"nodeType":"UncheckedBlock","src":"12682:66:24","statements":[{"expression":{"arguments":[{"id":6416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"12725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6417,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"12728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6420,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"12735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6414,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"12713:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7440_$","typeString":"type(library Math)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6461,"src":"12713:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6413,"id":6422,"nodeType":"Return","src":"12706:31:24"}]}]},"documentation":{"id":6405,"nodeType":"StructuredDocumentation","src":"12078:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6425,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:24","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"a","nameLocation":"12626:1:24","nodeType":"VariableDeclaration","scope":6425,"src":"12618:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6406,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6409,"mutability":"mutable","name":"p","nameLocation":"12637:1:24","nodeType":"VariableDeclaration","scope":6425,"src":"12629:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6408,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:24"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6425,"src":"12663:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6411,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:24"},"scope":7440,"src":"12597:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"13524:174:24","statements":[{"assignments":[6438,6440],"declarations":[{"constant":false,"id":6438,"mutability":"mutable","name":"success","nameLocation":"13540:7:24","nodeType":"VariableDeclaration","scope":6460,"src":"13535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6437,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"result","nameLocation":"13557:6:24","nodeType":"VariableDeclaration","scope":6460,"src":"13549:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6446,"initialValue":{"arguments":[{"id":6442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"13577:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6443,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"13580:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6444,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"13583:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6441,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6485,6567],"referencedDeclaration":6485,"src":"13567:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:24"},{"condition":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:24","subExpression":{"id":6447,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"13600:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"13595:74:24","trueBody":{"id":6456,"nodeType":"Block","src":"13609:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":6452,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"13635:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4311,"src":"13635:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6449,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"13623:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"13623:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"ExpressionStatement","src":"13623:35:24"}]}},{"expression":{"id":6458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"13685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6436,"id":6459,"nodeType":"Return","src":"13678:13:24"}]},"documentation":{"id":6426,"nodeType":"StructuredDocumentation","src":"12760:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:24","nodeType":"FunctionDefinition","parameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"b","nameLocation":"13467:1:24","nodeType":"VariableDeclaration","scope":6461,"src":"13459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6430,"mutability":"mutable","name":"e","nameLocation":"13478:1:24","nodeType":"VariableDeclaration","scope":6461,"src":"13470:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6432,"mutability":"mutable","name":"m","nameLocation":"13489:1:24","nodeType":"VariableDeclaration","scope":6461,"src":"13481:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6431,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:24"},"returnParameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6461,"src":"13515:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:24"},"scope":7440,"src":"13443:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"14552:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"14566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"14562:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6474,"id":6481,"nodeType":"Return","src":"14574:17:24"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:24"},"nodeType":"YulFunctionCall","src":"14651:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:24"},"nodeType":"YulFunctionCall","src":"15563:17:24"},"nodeType":"YulExpressionStatement","src":"15563:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:24"},"nodeType":"YulFunctionCall","src":"15600:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:24"},"nodeType":"YulFunctionCall","src":"15593:28:24"},"nodeType":"YulExpressionStatement","src":"15593:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:24"},"nodeType":"YulFunctionCall","src":"15641:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:24"},"nodeType":"YulFunctionCall","src":"15634:28:24"},"nodeType":"YulExpressionStatement","src":"15634:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:24"},"nodeType":"YulFunctionCall","src":"15682:14:24"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:24"},"nodeType":"YulFunctionCall","src":"15675:25:24"},"nodeType":"YulExpressionStatement","src":"15675:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:24"},"nodeType":"YulFunctionCall","src":"15720:14:24"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:24"},"nodeType":"YulFunctionCall","src":"15713:25:24"},"nodeType":"YulExpressionStatement","src":"15713:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:24"},"nodeType":"YulFunctionCall","src":"15758:14:24"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:24"},"nodeType":"YulFunctionCall","src":"15751:25:24"},"nodeType":"YulExpressionStatement","src":"15751:25:24"},{"nodeType":"YulAssignment","src":"15938:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:24"},"nodeType":"YulFunctionCall","src":"15960:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:24","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:24","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:24"},"nodeType":"YulFunctionCall","src":"15949:46:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:24"}]},{"nodeType":"YulAssignment","src":"16008:21:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:24"},"nodeType":"YulFunctionCall","src":"16018:11:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6464,"isOffset":false,"isSlot":false,"src":"15698:1:24","valueSize":1},{"declaration":6466,"isOffset":false,"isSlot":false,"src":"15736:1:24","valueSize":1},{"declaration":6468,"isOffset":false,"isSlot":false,"src":"15774:1:24","valueSize":1},{"declaration":6473,"isOffset":false,"isSlot":false,"src":"16008:6:24","valueSize":1},{"declaration":6471,"isOffset":false,"isSlot":false,"src":"15938:7:24","valueSize":1}],"flags":["memory-safe"],"id":6483,"nodeType":"InlineAssembly","src":"14601:1438:24"}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"13704:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:24","nodeType":"FunctionDefinition","parameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"b","nameLocation":"14474:1:24","nodeType":"VariableDeclaration","scope":6485,"src":"14466:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6466,"mutability":"mutable","name":"e","nameLocation":"14485:1:24","nodeType":"VariableDeclaration","scope":6485,"src":"14477:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6468,"mutability":"mutable","name":"m","nameLocation":"14496:1:24","nodeType":"VariableDeclaration","scope":6485,"src":"14488:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:24"},"returnParameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"success","nameLocation":"14527:7:24","nodeType":"VariableDeclaration","scope":6485,"src":"14522:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6470,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"result","nameLocation":"14544:6:24","nodeType":"VariableDeclaration","scope":6485,"src":"14536:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:24"},"scope":7440,"src":"14447:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6520,"nodeType":"Block","src":"16242:179:24","statements":[{"assignments":[6498,6500],"declarations":[{"constant":false,"id":6498,"mutability":"mutable","name":"success","nameLocation":"16258:7:24","nodeType":"VariableDeclaration","scope":6520,"src":"16253:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6497,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6500,"mutability":"mutable","name":"result","nameLocation":"16280:6:24","nodeType":"VariableDeclaration","scope":6520,"src":"16267:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6499,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6506,"initialValue":{"arguments":[{"id":6502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"16300:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6503,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"16303:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6504,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"16306:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6501,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6485,6567],"referencedDeclaration":6567,"src":"16290:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:24"},{"condition":{"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:24","subExpression":{"id":6507,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"16323:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6517,"nodeType":"IfStatement","src":"16318:74:24","trueBody":{"id":6516,"nodeType":"Block","src":"16332:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":6512,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"16358:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4311,"src":"16358:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6509,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"16346:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4344_$","typeString":"type(library Panic)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"16346:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6515,"nodeType":"ExpressionStatement","src":"16346:35:24"}]}},{"expression":{"id":6518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"16408:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6496,"id":6519,"nodeType":"Return","src":"16401:13:24"}]},"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"16051:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6521,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:24","nodeType":"FunctionDefinition","parameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"b","nameLocation":"16170:1:24","nodeType":"VariableDeclaration","scope":6521,"src":"16157:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6487,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6490,"mutability":"mutable","name":"e","nameLocation":"16186:1:24","nodeType":"VariableDeclaration","scope":6521,"src":"16173:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6489,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6492,"mutability":"mutable","name":"m","nameLocation":"16202:1:24","nodeType":"VariableDeclaration","scope":6521,"src":"16189:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6491,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:24"},"returnParameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6521,"src":"16228:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6494,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:24"},"scope":7440,"src":"16141:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6566,"nodeType":"Block","src":"16675:771:24","statements":[{"condition":{"arguments":[{"id":6536,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"16700:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6535,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"16689:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6545,"nodeType":"IfStatement","src":"16685:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6539,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6534,"id":6544,"nodeType":"Return","src":"16704:28:24"}},{"assignments":[6547],"declarations":[{"constant":false,"id":6547,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:24","nodeType":"VariableDeclaration","scope":6566,"src":"16743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6546,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6550,"initialValue":{"expression":{"id":6548,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"16758:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:24","memberName":"length","nodeType":"MemberAccess","src":"16758:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:24"},{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"16848:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"16874:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:24","memberName":"length","nodeType":"MemberAccess","src":"16874:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6556,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:24","memberName":"length","nodeType":"MemberAccess","src":"16884:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6558,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"16894:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"16900:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6560,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"16903:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6561,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"16906:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"16857:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6564,"nodeType":"ExpressionStatement","src":"16848:60:24"},{"AST":{"nodeType":"YulBlock","src":"16944:496:24","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:24","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:24"},"nodeType":"YulFunctionCall","src":"16973:17:24"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:24","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:24"},"nodeType":"YulFunctionCall","src":"17102:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:24","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:24"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:24"},"nodeType":"YulFunctionCall","src":"17124:13:24"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:24"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:24"},"nodeType":"YulFunctionCall","src":"17091:62:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:24"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:24"},"nodeType":"YulFunctionCall","src":"17302:20:24"},"nodeType":"YulExpressionStatement","src":"17302:20:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:24"},"nodeType":"YulFunctionCall","src":"17411:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:24"},"nodeType":"YulFunctionCall","src":"17398:32:24"},"nodeType":"YulExpressionStatement","src":"17398:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":6547,"isOffset":false,"isSlot":false,"src":"17148:4:24","valueSize":1},{"declaration":6547,"isOffset":false,"isSlot":false,"src":"17317:4:24","valueSize":1},{"declaration":6547,"isOffset":false,"isSlot":false,"src":"17424:4:24","valueSize":1},{"declaration":6533,"isOffset":false,"isSlot":false,"src":"16977:6:24","valueSize":1},{"declaration":6533,"isOffset":false,"isSlot":false,"src":"17130:6:24","valueSize":1},{"declaration":6533,"isOffset":false,"isSlot":false,"src":"17309:6:24","valueSize":1},{"declaration":6531,"isOffset":false,"isSlot":false,"src":"17080:7:24","valueSize":1}],"flags":["memory-safe"],"id":6565,"nodeType":"InlineAssembly","src":"16919:521:24"}]},"documentation":{"id":6522,"nodeType":"StructuredDocumentation","src":"16427:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6567,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:24","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"b","nameLocation":"16561:1:24","nodeType":"VariableDeclaration","scope":6567,"src":"16548:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6523,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6526,"mutability":"mutable","name":"e","nameLocation":"16585:1:24","nodeType":"VariableDeclaration","scope":6567,"src":"16572:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6525,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"m","nameLocation":"16609:1:24","nodeType":"VariableDeclaration","scope":6567,"src":"16596:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6527,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:24"},"returnParameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"success","nameLocation":"16645:7:24","nodeType":"VariableDeclaration","scope":6567,"src":"16640:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6530,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6533,"mutability":"mutable","name":"result","nameLocation":"16667:6:24","nodeType":"VariableDeclaration","scope":6567,"src":"16654:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6532,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:24"},"scope":7440,"src":"16520:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6599,"nodeType":"Block","src":"17601:176:24","statements":[{"body":{"id":6595,"nodeType":"Block","src":"17658:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6586,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17676:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6588,"indexExpression":{"id":6587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"17686:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6594,"nodeType":"IfStatement","src":"17672:68:24","trueBody":{"id":6593,"nodeType":"Block","src":"17695:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6574,"id":6592,"nodeType":"Return","src":"17713:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"17631:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6580,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17635:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:24","memberName":"length","nodeType":"MemberAccess","src":"17635:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6596,"initializationExpression":{"assignments":[6576],"declarations":[{"constant":false,"id":6576,"mutability":"mutable","name":"i","nameLocation":"17624:1:24","nodeType":"VariableDeclaration","scope":6596,"src":"17616:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6578,"initialValue":{"hexValue":"30","id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:24"},"loopExpression":{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:24","subExpression":{"id":6583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"17655:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6585,"nodeType":"ExpressionStatement","src":"17653:3:24"},"nodeType":"ForStatement","src":"17611:139:24"},{"expression":{"hexValue":"74727565","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6574,"id":6598,"nodeType":"Return","src":"17759:11:24"}]},"documentation":{"id":6568,"nodeType":"StructuredDocumentation","src":"17452:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":6600,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:24","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:24","nodeType":"VariableDeclaration","scope":6600,"src":"17549:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6569,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:24"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6600,"src":"17595:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6572,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:24"},"scope":7440,"src":"17529:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6818,"nodeType":"Block","src":"18137:5124:24","statements":[{"id":6817,"nodeType":"UncheckedBlock","src":"18147:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"18241:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6614,"nodeType":"IfStatement","src":"18237:53:24","trueBody":{"id":6613,"nodeType":"Block","src":"18249:41:24","statements":[{"expression":{"id":6611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"18274:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6607,"id":6612,"nodeType":"Return","src":"18267:8:24"}]}},{"assignments":[6616],"declarations":[{"constant":false,"id":6616,"mutability":"mutable","name":"aa","nameLocation":"19225:2:24","nodeType":"VariableDeclaration","scope":6817,"src":"19217:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6615,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6618,"initialValue":{"id":6617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"19230:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:24"},{"assignments":[6620],"declarations":[{"constant":false,"id":6620,"mutability":"mutable","name":"xn","nameLocation":"19253:2:24","nodeType":"VariableDeclaration","scope":6817,"src":"19245:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6619,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6622,"initialValue":{"hexValue":"31","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"IfStatement","src":"19274:92:24","trueBody":{"id":6637,"nodeType":"Block","src":"19296:70:24","statements":[{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6629,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19314:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6632,"nodeType":"ExpressionStatement","src":"19314:10:24"},{"expression":{"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6633,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19342:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6636,"nodeType":"ExpressionStatement","src":"19342:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19383:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6654,"nodeType":"IfStatement","src":"19379:90:24","trueBody":{"id":6653,"nodeType":"Block","src":"19400:69:24","statements":[{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6645,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19418:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6648,"nodeType":"ExpressionStatement","src":"19418:9:24"},{"expression":{"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6649,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19445:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6652,"nodeType":"ExpressionStatement","src":"19445:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19486:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"19482:90:24","trueBody":{"id":6669,"nodeType":"Block","src":"19503:69:24","statements":[{"expression":{"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6661,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19521:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6664,"nodeType":"ExpressionStatement","src":"19521:9:24"},{"expression":{"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19548:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6668,"nodeType":"ExpressionStatement","src":"19548:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6671,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19589:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6686,"nodeType":"IfStatement","src":"19585:89:24","trueBody":{"id":6685,"nodeType":"Block","src":"19606:68:24","statements":[{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6677,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19624:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6680,"nodeType":"ExpressionStatement","src":"19624:9:24"},{"expression":{"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19651:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6684,"nodeType":"ExpressionStatement","src":"19651:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19691:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6702,"nodeType":"IfStatement","src":"19687:87:24","trueBody":{"id":6701,"nodeType":"Block","src":"19707:67:24","statements":[{"expression":{"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6693,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19725:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6696,"nodeType":"ExpressionStatement","src":"19725:8:24"},{"expression":{"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19751:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6700,"nodeType":"ExpressionStatement","src":"19751:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6703,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19791:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"19787:87:24","trueBody":{"id":6717,"nodeType":"Block","src":"19807:67:24","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6709,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19825:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6712,"nodeType":"ExpressionStatement","src":"19825:8:24"},{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6713,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19851:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6716,"nodeType":"ExpressionStatement","src":"19851:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"19891:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6730,"nodeType":"IfStatement","src":"19887:61:24","trueBody":{"id":6729,"nodeType":"Block","src":"19907:41:24","statements":[{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19925:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6728,"nodeType":"ExpressionStatement","src":"19925:8:24"}]}},{"expression":{"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6731,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"20368:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6733,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"20378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6739,"nodeType":"ExpressionStatement","src":"20368:18:24"},{"expression":{"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6740,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22273:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22279:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22284:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6743,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22288:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6750,"nodeType":"ExpressionStatement","src":"22273:23:24"},{"expression":{"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6751,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22382:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6752,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22388:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22393:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6754,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22397:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6761,"nodeType":"ExpressionStatement","src":"22382:23:24"},{"expression":{"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22493:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22499:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22504:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22508:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6772,"nodeType":"ExpressionStatement","src":"22493:23:24"},{"expression":{"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22602:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6774,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22608:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22613:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6776,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22617:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6783,"nodeType":"ExpressionStatement","src":"22602:23:24"},{"expression":{"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22712:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22718:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6787,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22727:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6794,"nodeType":"ExpressionStatement","src":"22712:23:24"},{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6795,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22822:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22828:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"22833:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6798,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"22837:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6805,"nodeType":"ExpressionStatement","src":"22822:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6806,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"23211:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"23232:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"23237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6811,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"23241:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6807,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"23216:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"23216:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6607,"id":6816,"nodeType":"Return","src":"23204:40:24"}]}]},"documentation":{"id":6601,"nodeType":"StructuredDocumentation","src":"17783:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:24","nodeType":"FunctionDefinition","parameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"a","nameLocation":"18102:1:24","nodeType":"VariableDeclaration","scope":6819,"src":"18094:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6602,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:24"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6819,"src":"18128:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:24"},"scope":7440,"src":"18080:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6852,"nodeType":"Block","src":"23434:171:24","statements":[{"id":6851,"nodeType":"UncheckedBlock","src":"23444:155:24","statements":[{"assignments":[6831],"declarations":[{"constant":false,"id":6831,"mutability":"mutable","name":"result","nameLocation":"23476:6:24","nodeType":"VariableDeclaration","scope":6851,"src":"23468:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6835,"initialValue":{"arguments":[{"id":6833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"23490:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6832,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6819,6853],"referencedDeclaration":6819,"src":"23485:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23513:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6840,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"23555:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":6839,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"23538:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5846_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23568:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"23577:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"23586:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6837,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"23522:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"23522:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6829,"id":6850,"nodeType":"Return","src":"23506:82:24"}]}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"23267:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6853,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:24","nodeType":"FunctionDefinition","parameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"a","nameLocation":"23380:1:24","nodeType":"VariableDeclaration","scope":6853,"src":"23372:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6825,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:24","nodeType":"VariableDeclaration","scope":6853,"src":"23383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":6824,"nodeType":"UserDefinedTypeName","pathNode":{"id":6823,"name":"Rounding","nameLocations":["23383:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"23383:8:24"},"referencedDeclaration":5846,"src":"23383:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:24"},"returnParameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6853,"src":"23425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6827,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:24"},"scope":7440,"src":"23358:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"23796:981:24","statements":[{"assignments":[6862],"declarations":[{"constant":false,"id":6862,"mutability":"mutable","name":"result","nameLocation":"23814:6:24","nodeType":"VariableDeclaration","scope":7048,"src":"23806:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6864,"initialValue":{"hexValue":"30","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:24"},{"assignments":[6866],"declarations":[{"constant":false,"id":6866,"mutability":"mutable","name":"exp","nameLocation":"23842:3:24","nodeType":"VariableDeclaration","scope":7048,"src":"23834:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6865,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6867,"nodeType":"VariableDeclarationStatement","src":"23834:11:24"},{"id":7045,"nodeType":"UncheckedBlock","src":"23855:893:24","statements":[{"expression":{"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6868,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"23879:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"23907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6870,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"23891:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"23891:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6883,"nodeType":"ExpressionStatement","src":"23879:51:24"},{"expression":{"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"23944:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6885,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"23954:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6887,"nodeType":"ExpressionStatement","src":"23944:13:24"},{"expression":{"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"23971:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6889,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"23981:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6891,"nodeType":"ExpressionStatement","src":"23971:13:24"},{"expression":{"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6892,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"23999:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24026:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6894,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24010:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24010:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6907,"nodeType":"ExpressionStatement","src":"23999:49:24"},{"expression":{"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24062:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6909,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24072:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6911,"nodeType":"ExpressionStatement","src":"24062:13:24"},{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24089:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6913,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24099:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6915,"nodeType":"ExpressionStatement","src":"24089:13:24"},{"expression":{"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6916,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24117:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24144:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24128:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24128:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6931,"nodeType":"ExpressionStatement","src":"24117:49:24"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24180:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6933,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24190:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6935,"nodeType":"ExpressionStatement","src":"24180:13:24"},{"expression":{"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24207:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6937,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24217:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6939,"nodeType":"ExpressionStatement","src":"24207:13:24"},{"expression":{"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6940,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24235:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24262:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6942,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24246:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24246:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6955,"nodeType":"ExpressionStatement","src":"24235:49:24"},{"expression":{"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6957,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24308:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6959,"nodeType":"ExpressionStatement","src":"24298:13:24"},{"expression":{"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24325:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6961,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24335:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6963,"nodeType":"ExpressionStatement","src":"24325:13:24"},{"expression":{"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6964,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24353:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6966,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24363:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24363:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6979,"nodeType":"ExpressionStatement","src":"24353:47:24"},{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6981,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24424:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6983,"nodeType":"ExpressionStatement","src":"24414:13:24"},{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24441:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6985,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24451:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6987,"nodeType":"ExpressionStatement","src":"24441:13:24"},{"expression":{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24469:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24479:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24479:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7003,"nodeType":"ExpressionStatement","src":"24469:47:24"},{"expression":{"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24530:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":7005,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24540:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7007,"nodeType":"ExpressionStatement","src":"24530:13:24"},{"expression":{"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24557:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7009,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24567:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7011,"nodeType":"ExpressionStatement","src":"24557:13:24"},{"expression":{"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24585:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7014,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24595:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24595:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7027,"nodeType":"ExpressionStatement","src":"24585:47:24"},{"expression":{"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24646:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":7029,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24656:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7031,"nodeType":"ExpressionStatement","src":"24646:13:24"},{"expression":{"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24673:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7033,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"24683:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7035,"nodeType":"ExpressionStatement","src":"24673:13:24"},{"expression":{"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24701:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"24727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"24711:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"24711:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7044,"nodeType":"ExpressionStatement","src":"24701:36:24"}]},{"expression":{"id":7046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"24764:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6860,"id":7047,"nodeType":"Return","src":"24757:13:24"}]},"documentation":{"id":6854,"nodeType":"StructuredDocumentation","src":"23611:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:24","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"value","nameLocation":"23757:5:24","nodeType":"VariableDeclaration","scope":7049,"src":"23749:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:24"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"23787:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:24"},"scope":7440,"src":"23735:1042:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7082,"nodeType":"Block","src":"25010:175:24","statements":[{"id":7081,"nodeType":"UncheckedBlock","src":"25020:159:24","statements":[{"assignments":[7061],"declarations":[{"constant":false,"id":7061,"mutability":"mutable","name":"result","nameLocation":"25052:6:24","nodeType":"VariableDeclaration","scope":7081,"src":"25044:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7060,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7065,"initialValue":{"arguments":[{"id":7063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"25066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7049,7083],"referencedDeclaration":7049,"src":"25061:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"25093:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7070,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"25135:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":7069,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"25118:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5846_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"25153:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"25162:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7067,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"25102:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"25102:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7059,"id":7080,"nodeType":"Return","src":"25086:82:24"}]}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"24783:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7083,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:24","nodeType":"FunctionDefinition","parameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"value","nameLocation":"24952:5:24","nodeType":"VariableDeclaration","scope":7083,"src":"24944:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:24","nodeType":"VariableDeclaration","scope":7083,"src":"24959:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":7054,"nodeType":"UserDefinedTypeName","pathNode":{"id":7053,"name":"Rounding","nameLocations":["24959:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"24959:8:24"},"referencedDeclaration":5846,"src":"24959:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:24"},"returnParameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7083,"src":"25001:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7057,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:24"},"scope":7440,"src":"24930:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7211,"nodeType":"Block","src":"25378:854:24","statements":[{"assignments":[7092],"declarations":[{"constant":false,"id":7092,"mutability":"mutable","name":"result","nameLocation":"25396:6:24","nodeType":"VariableDeclaration","scope":7211,"src":"25388:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7094,"initialValue":{"hexValue":"30","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:24"},{"id":7208,"nodeType":"UncheckedBlock","src":"25416:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25444:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7111,"nodeType":"IfStatement","src":"25440:103:24","trueBody":{"id":7110,"nodeType":"Block","src":"25463:80:24","statements":[{"expression":{"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25481:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7105,"nodeType":"ExpressionStatement","src":"25481:17:24"},{"expression":{"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25516:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7109,"nodeType":"ExpressionStatement","src":"25516:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25560:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7128,"nodeType":"IfStatement","src":"25556:103:24","trueBody":{"id":7127,"nodeType":"Block","src":"25579:80:24","statements":[{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25597:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7122,"nodeType":"ExpressionStatement","src":"25597:17:24"},{"expression":{"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25632:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7126,"nodeType":"ExpressionStatement","src":"25632:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25676:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7145,"nodeType":"IfStatement","src":"25672:103:24","trueBody":{"id":7144,"nodeType":"Block","src":"25695:80:24","statements":[{"expression":{"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25713:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7139,"nodeType":"ExpressionStatement","src":"25713:17:24"},{"expression":{"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25748:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7143,"nodeType":"ExpressionStatement","src":"25748:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25792:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7162,"nodeType":"IfStatement","src":"25788:100:24","trueBody":{"id":7161,"nodeType":"Block","src":"25810:78:24","statements":[{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25828:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7156,"nodeType":"ExpressionStatement","src":"25828:16:24"},{"expression":{"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7160,"nodeType":"ExpressionStatement","src":"25862:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7179,"nodeType":"IfStatement","src":"25901:100:24","trueBody":{"id":7178,"nodeType":"Block","src":"25923:78:24","statements":[{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"25941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7173,"nodeType":"ExpressionStatement","src":"25941:16:24"},{"expression":{"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25975:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7177,"nodeType":"ExpressionStatement","src":"25975:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26018:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7196,"nodeType":"IfStatement","src":"26014:100:24","trueBody":{"id":7195,"nodeType":"Block","src":"26036:78:24","statements":[{"expression":{"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26054:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7190,"nodeType":"ExpressionStatement","src":"26054:16:24"},{"expression":{"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"26088:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7194,"nodeType":"ExpressionStatement","src":"26088:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26131:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7207,"nodeType":"IfStatement","src":"26127:66:24","trueBody":{"id":7206,"nodeType":"Block","src":"26149:44:24","statements":[{"expression":{"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"26167:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7205,"nodeType":"ExpressionStatement","src":"26167:11:24"}]}}]},{"expression":{"id":7209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"26219:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7090,"id":7210,"nodeType":"Return","src":"26212:13:24"}]},"documentation":{"id":7084,"nodeType":"StructuredDocumentation","src":"25191:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:24","nodeType":"FunctionDefinition","parameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"value","nameLocation":"25339:5:24","nodeType":"VariableDeclaration","scope":7212,"src":"25331:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7085,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:24"},"returnParameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7212,"src":"25369:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:24"},"scope":7440,"src":"25316:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7245,"nodeType":"Block","src":"26467:177:24","statements":[{"id":7244,"nodeType":"UncheckedBlock","src":"26477:161:24","statements":[{"assignments":[7224],"declarations":[{"constant":false,"id":7224,"mutability":"mutable","name":"result","nameLocation":"26509:6:24","nodeType":"VariableDeclaration","scope":7244,"src":"26501:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7228,"initialValue":{"arguments":[{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7225,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7212,7246],"referencedDeclaration":7212,"src":"26518:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"26551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7233,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"26593:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":7232,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"26576:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5846_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"26612:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26621:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7230,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"26560:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"26560:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7222,"id":7243,"nodeType":"Return","src":"26544:83:24"}]}]},"documentation":{"id":7213,"nodeType":"StructuredDocumentation","src":"26238:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7246,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:24","nodeType":"FunctionDefinition","parameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"value","nameLocation":"26409:5:24","nodeType":"VariableDeclaration","scope":7246,"src":"26401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7218,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:24","nodeType":"VariableDeclaration","scope":7246,"src":"26416:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":7217,"nodeType":"UserDefinedTypeName","pathNode":{"id":7216,"name":"Rounding","nameLocations":["26416:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"26416:8:24"},"referencedDeclaration":5846,"src":"26416:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:24"},"returnParameters":{"id":7222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7246,"src":"26458:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:24"},"scope":7440,"src":"26386:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"26964:674:24","statements":[{"assignments":[7255],"declarations":[{"constant":false,"id":7255,"mutability":"mutable","name":"result","nameLocation":"26982:6:24","nodeType":"VariableDeclaration","scope":7382,"src":"26974:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7254,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7257,"initialValue":{"hexValue":"30","id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:24"},{"assignments":[7259],"declarations":[{"constant":false,"id":7259,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:24","nodeType":"VariableDeclaration","scope":7382,"src":"27002:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7258,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7260,"nodeType":"VariableDeclarationStatement","src":"27002:12:24"},{"id":7379,"nodeType":"UncheckedBlock","src":"27024:585:24","statements":[{"expression":{"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7261,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27048:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27071:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":7270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27055:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27055:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7274,"nodeType":"ExpressionStatement","src":"27048:46:24"},{"expression":{"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27108:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7276,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27118:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7280,"nodeType":"ExpressionStatement","src":"27108:20:24"},{"expression":{"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27142:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7282,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27152:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7286,"nodeType":"ExpressionStatement","src":"27142:19:24"},{"expression":{"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7287,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27176:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27183:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27183:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7300,"nodeType":"ExpressionStatement","src":"27176:45:24"},{"expression":{"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27235:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7302,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27245:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7306,"nodeType":"ExpressionStatement","src":"27235:19:24"},{"expression":{"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27268:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7308,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27278:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7312,"nodeType":"ExpressionStatement","src":"27268:18:24"},{"expression":{"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7313,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27301:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27324:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7314,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27308:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27308:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7326,"nodeType":"ExpressionStatement","src":"27301:45:24"},{"expression":{"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27360:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7328,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27370:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7332,"nodeType":"ExpressionStatement","src":"27360:19:24"},{"expression":{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7334,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27403:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7338,"nodeType":"ExpressionStatement","src":"27393:18:24"},{"expression":{"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7339,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27426:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":7348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27433:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27433:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7352,"nodeType":"ExpressionStatement","src":"27426:45:24"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27485:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7354,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27495:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7358,"nodeType":"ExpressionStatement","src":"27485:19:24"},{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27518:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7360,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"27528:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7364,"nodeType":"ExpressionStatement","src":"27518:18:24"},{"expression":{"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"27577:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27561:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27561:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7378,"nodeType":"ExpressionStatement","src":"27551:47:24"}]},{"expression":{"id":7380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"27625:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7253,"id":7381,"nodeType":"Return","src":"27618:13:24"}]},"documentation":{"id":7247,"nodeType":"StructuredDocumentation","src":"26650:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:24","nodeType":"FunctionDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"value","nameLocation":"26925:5:24","nodeType":"VariableDeclaration","scope":7383,"src":"26917:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:24"},"returnParameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7383,"src":"26955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7251,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:24"},"scope":7440,"src":"26901:737:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7419,"nodeType":"Block","src":"27875:184:24","statements":[{"id":7418,"nodeType":"UncheckedBlock","src":"27885:168:24","statements":[{"assignments":[7395],"declarations":[{"constant":false,"id":7395,"mutability":"mutable","name":"result","nameLocation":"27917:6:24","nodeType":"VariableDeclaration","scope":7418,"src":"27909:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7394,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7399,"initialValue":{"arguments":[{"id":7397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"27933:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7396,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7383,7420],"referencedDeclaration":7383,"src":"27926:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"27960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7404,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"28002:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":7403,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"27985:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5846_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"28021:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"28036:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7401,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"27969:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"27969:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7393,"id":7417,"nodeType":"Return","src":"27953:89:24"}]}]},"documentation":{"id":7384,"nodeType":"StructuredDocumentation","src":"27644:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7420,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:24","nodeType":"FunctionDefinition","parameters":{"id":7390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"value","nameLocation":"27817:5:24","nodeType":"VariableDeclaration","scope":7420,"src":"27809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7385,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7389,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:24","nodeType":"VariableDeclaration","scope":7420,"src":"27824:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":7388,"nodeType":"UserDefinedTypeName","pathNode":{"id":7387,"name":"Rounding","nameLocations":["27824:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"27824:8:24"},"referencedDeclaration":5846,"src":"27824:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:24"},"returnParameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7420,"src":"27866:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:24"},"scope":7440,"src":"27793:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7438,"nodeType":"Block","src":"28257:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7431,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"28280:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}],"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7429,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:24","typeDescriptions":{}}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7428,"id":7437,"nodeType":"Return","src":"28267:31:24"}]},"documentation":{"id":7421,"nodeType":"StructuredDocumentation","src":"28065:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7439,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:24","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:24","nodeType":"VariableDeclaration","scope":7439,"src":"28209:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"},"typeName":{"id":7423,"nodeType":"UserDefinedTypeName","pathNode":{"id":7422,"name":"Rounding","nameLocations":["28209:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":5846,"src":"28209:8:24"},"referencedDeclaration":5846,"src":"28209:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5846","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:24"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7439,"src":"28251:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7426,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:24"},"scope":7440,"src":"28183:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7441,"src":"281:28026:24","usedErrors":[],"usedEvents":[]}],"src":"103:28205:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9205]},"id":9206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7443,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9205,"linearizedBaseContracts":[9205],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7444,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7450,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7446,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":7450,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7445,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7448,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":7450,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":7451,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7455,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":7455,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7452,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":7456,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7462,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7458,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":7462,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7457,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7460,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":7462,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7459,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7467,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":7466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":7467,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":7494,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7477,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7488,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":7487,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7482,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7486,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":7491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7489,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7474,"id":7493,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":7468,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7495,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":7495,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7495,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7472,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":9205,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7522,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7505,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7516,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":7515,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7510,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7514,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":7519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7517,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7502,"id":7521,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":7496,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7523,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":7499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7498,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":7523,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7523,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7500,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":9205,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7550,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7533,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7544,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":7543,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7538,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7542,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":7547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7545,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7530,"id":7549,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":7524,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7551,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":7551,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7551,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7528,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":9205,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7578,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7561,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7572,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":7571,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7566,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7570,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":7575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7573,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7558,"id":7577,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":7552,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7579,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":7579,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7579,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7556,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":9205,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7606,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7589,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7600,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":7599,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7594,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7598,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7601,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7586,"id":7605,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":7580,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":7607,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7607,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7584,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":9205,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7634,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7617,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7628,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":7627,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7622,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7626,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":7631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7629,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7614,"id":7633,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":7608,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7635,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":7635,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7635,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7612,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":9205,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7662,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7645,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7644,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7656,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":7655,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7650,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7654,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":7659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7657,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7642,"id":7661,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":7636,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7663,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7638,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":7663,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7663,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7640,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":9205,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7690,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7673,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7684,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":7683,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7678,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7682,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":7687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7666,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7685,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7670,"id":7689,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":7664,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7666,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":7691,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7665,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7691,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7668,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":9205,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7718,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7701,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7700,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":7711,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7706,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7710,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":7715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7713,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7698,"id":7717,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":7692,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7719,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":7719,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7719,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7696,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":9205,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7746,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7729,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7740,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":7739,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7734,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7738,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":7743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7741,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7726,"id":7745,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":7720,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7747,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":7747,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7747,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7724,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":9205,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7774,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7757,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7756,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7768,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":7767,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7762,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7766,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":7771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7769,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7754,"id":7773,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":7748,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7775,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":7775,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7775,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7752,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":9205,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7802,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7785,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7796,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":7795,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7790,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":7799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7797,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7782,"id":7801,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":7776,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7803,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":7803,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7777,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":7782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7803,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7780,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":9205,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7830,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7813,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7824,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":7823,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7818,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7822,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":7827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7825,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7810,"id":7829,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":7804,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7831,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":7807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7806,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":7831,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7805,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":7810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7831,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7808,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":9205,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7858,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7841,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7840,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7852,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":7851,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7846,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7850,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":7855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7853,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7838,"id":7857,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":7832,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7859,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":7835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":7859,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7859,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7836,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":9205,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7886,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7869,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7868,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7880,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":7879,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7874,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7878,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":7883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7881,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7866,"id":7885,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":7860,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7887,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":7887,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":7866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7887,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7864,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":9205,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7914,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7897,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7896,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7908,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":7907,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7902,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7906,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":7911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7909,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7894,"id":7913,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":7888,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7915,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":7891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7890,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":7915,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7889,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7915,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7892,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":9205,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7942,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7925,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7924,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7936,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":7935,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7930,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7934,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":7939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7937,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7922,"id":7941,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":7916,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7943,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":7943,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":7922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7943,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7920,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":9205,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7970,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7953,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7952,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7964,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":7963,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7958,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7962,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":7967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7965,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7950,"id":7969,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":7944,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7971,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":7971,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7945,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7971,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7948,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":9205,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7998,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7981,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7980,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7992,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":7991,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7986,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7990,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":7995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7993,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7978,"id":7997,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":7972,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7999,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":7999,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7973,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7999,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7976,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":9205,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8026,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8009,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8008,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8020,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":8019,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8014,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8018,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":8023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8021,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8006,"id":8025,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":8000,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8027,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8002,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":8027,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8001,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":8006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8027,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8004,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":9205,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8054,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8037,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8036,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8048,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":8047,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8042,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8046,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":8051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8049,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8034,"id":8053,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":8028,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8055,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":8055,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8055,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8032,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":9205,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8082,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8065,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8064,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8076,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":8075,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8070,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8074,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":8079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8077,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8062,"id":8081,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":8056,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8083,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":8083,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8083,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8060,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":9205,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8110,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8093,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8092,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8104,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":8103,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8098,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8102,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":8107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8105,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8090,"id":8109,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":8084,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8111,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8086,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":8111,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":8090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8111,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8088,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":9205,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8138,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8121,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8132,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":8131,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8126,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8130,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":8135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8133,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8118,"id":8137,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":8112,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8139,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8114,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":8139,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8113,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":8118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8139,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8116,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":9205,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8166,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8149,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8148,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8160,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":8159,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8154,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8158,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":8163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8161,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8146,"id":8165,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":8140,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":8167,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8141,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8167,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8144,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":9205,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8194,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8170,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8177,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8188,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":8187,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8170,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8182,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8186,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":8191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8170,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8189,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8174,"id":8193,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":8168,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8195,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8170,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":8195,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8169,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":8174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8195,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8172,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":9205,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8222,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8205,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8204,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8216,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":8215,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8210,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8214,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":8219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8217,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8202,"id":8221,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":8196,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8223,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8198,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":8223,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8197,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":8202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8223,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8200,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":9205,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8250,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8233,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8244,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":8243,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8238,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8242,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":8247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8245,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8230,"id":8249,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":8224,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8251,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":8251,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8225,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":8230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8251,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8228,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":9205,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8278,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8261,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8272,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":8271,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8266,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8270,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":8275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8273,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8258,"id":8277,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":8252,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8279,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8254,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":8279,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8253,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8279,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8256,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":9205,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8306,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8289,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8300,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":8299,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8294,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8298,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":8303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8301,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8286,"id":8305,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":8280,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":8307,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8281,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8307,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8284,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":9205,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8334,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8317,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8328,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":8327,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8322,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8326,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":8331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8310,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8329,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8314,"id":8333,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":8308,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":8311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8310,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":8335,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8309,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":8314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8335,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8312,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":9205,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8357,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8351,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":8350,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":8347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8346,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8349,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":8354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8342,"id":8356,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":8336,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":8358,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8337,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":8342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8358,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8340,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":9205,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8383,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8367,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8372,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8382,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":8381,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8380,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":8359,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":8362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":8384,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8360,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":8365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8364,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":8384,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8363,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":9205,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8409,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8393,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8398,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8408,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":8407,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8406,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":8385,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":8388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8387,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":8410,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8386,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8390,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":8410,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8389,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":9205,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8435,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8419,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8424,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8434,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":8433,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8432,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":8411,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":8414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8413,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":8436,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8412,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":8417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8416,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":8436,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8415,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":9205,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8461,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8445,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8450,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8460,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":8459,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8458,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":8437,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8439,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":8462,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8438,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":8462,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8441,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":9205,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8487,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8471,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8476,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8486,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":8485,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8484,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":8463,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":8466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8465,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":8488,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8464,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":8469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8468,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":8488,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8467,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":9205,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8513,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8497,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8502,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8512,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":8511,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8510,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":8489,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":8492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8491,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":8514,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8490,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":8495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":8514,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8493,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":9205,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8539,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8523,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8528,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8538,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":8537,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":8515,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":8518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":8540,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8516,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":8540,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8519,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":9205,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8565,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8549,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8554,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8564,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":8563,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":8541,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":8566,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8542,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":8566,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8545,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":9205,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8591,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8575,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8580,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8590,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":8589,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8588,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":8567,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8569,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":8592,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8568,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":8573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8572,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":8592,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8571,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":9205,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8617,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8601,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8606,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8616,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":8615,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8614,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":8593,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8595,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":8618,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8594,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":8618,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8597,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":9205,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8643,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8627,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8632,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8624,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8642,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":8641,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8640,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":8619,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":8622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8621,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":8644,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8620,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":8625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8624,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":8644,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8623,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":9205,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8669,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8653,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":8656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8658,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8668,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":8667,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8666,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":8645,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":8648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8647,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":8670,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8646,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":8651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8650,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":8670,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8649,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":9205,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8695,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8673,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8679,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":8682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8684,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8673,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8694,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":8693,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8673,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8692,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":8671,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":8674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8673,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":8696,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8672,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":8677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8676,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":8696,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8675,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":9205,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8721,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8705,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8710,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8720,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":8719,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8718,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":8697,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":8700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8699,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":8722,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8698,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8702,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":8722,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8701,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":9205,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8747,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8731,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8736,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8746,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":8745,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8744,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":8723,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":8726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8725,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":8748,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8724,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":8729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8728,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":8748,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8727,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":9205,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8773,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8757,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8762,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8772,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":8771,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8770,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":8749,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":8752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8751,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":8774,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8750,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":8755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8754,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":8774,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8753,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":9205,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8799,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8783,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8788,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8798,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":8797,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8796,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":8775,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":8778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8777,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":8800,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8776,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":8781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8780,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":8800,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8779,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":9205,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8825,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8809,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8814,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8824,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":8823,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8822,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":8801,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8803,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":8826,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8802,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8806,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":8826,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8805,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":9205,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8851,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8835,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8840,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8850,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":8849,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8848,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":8827,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":8830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8829,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":8852,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8828,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":8833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8832,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":8852,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8831,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":9205,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8877,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8855,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8861,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8866,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8855,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8876,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":8875,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8855,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8874,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":8853,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":8856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8855,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":8878,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8854,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":8859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8858,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":8878,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8857,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":9205,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8903,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8887,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8892,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8884,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8902,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":8901,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8900,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":8879,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":8882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8881,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":8904,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8880,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":8885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8884,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":8904,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8883,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":9205,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8929,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8913,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8918,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8928,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":8927,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8926,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":8905,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8907,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":8930,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8906,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":8911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":8930,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8909,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":9205,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8955,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8939,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8944,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8954,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":8953,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8952,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":8931,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":8934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8933,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":8956,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8932,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":8937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8936,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":8956,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8935,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":9205,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8981,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8965,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8970,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8980,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":8979,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8978,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":8957,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":8960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8959,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":8982,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8958,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":8963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8962,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":8982,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8961,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":9205,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9007,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8991,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8996,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9006,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":9005,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9004,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":8983,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":8986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8985,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":9008,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8984,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":8989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8988,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":9008,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8987,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":9205,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9033,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9017,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9022,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9032,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":9031,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9030,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":9009,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":9012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9011,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":9034,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9010,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":9015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9014,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":9034,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9013,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":9205,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9059,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9043,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9048,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9058,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":9057,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":9035,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":9038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9037,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":9060,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9036,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":9060,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9039,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":9205,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9085,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9069,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9074,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9084,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":9083,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9082,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":9061,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":9064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9063,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":9086,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9062,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":9067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9066,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":9086,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9065,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":9205,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9111,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9092,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9095,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9100,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9092,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9110,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":9109,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9108,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":9087,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9089,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":9112,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9088,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":9093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9092,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":9112,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9091,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":9205,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9137,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9121,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":9124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9126,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9136,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":9135,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9134,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":9113,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":9116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9115,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":9138,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9114,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":9119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9118,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":9138,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9117,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":9205,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9163,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9147,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9152,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9162,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":9161,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9160,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":9139,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":9142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9141,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":9164,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9140,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":9145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9144,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":9164,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9143,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":9205,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9193,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9176,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9173,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":9180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9187,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":9186,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":9183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9182,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9185,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":9190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9188,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9171,"id":9192,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":9165,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":9168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9167,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":9194,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":9171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9194,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9169,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":9205,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9203,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:25","statements":[{"nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:25"},"nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:25"},"nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9197,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":9200,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":9202,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":9195,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9204,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":9198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9197,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":9204,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9196,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":9201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9200,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":9204,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9199,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":9205,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9206,"src":"769:34173:25","usedErrors":[7450,7455,7462,7467],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9205],"SignedMath":[9349]},"id":9350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9207,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9350,"sourceUnit":9206,"src":"135:40:26","symbolAliases":[{"foreign":{"id":9208,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9210,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9349,"linearizedBaseContracts":[9349],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":9239,"nodeType":"Block","src":"746:215:26","statements":[{"id":9238,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9215,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9224,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9231,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9213,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9229,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9205,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9205_$","typeString":"type(library SafeCast)"}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9204,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9227,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":9233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9221,"id":9237,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":9211,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":9218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9213,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":9240,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9212,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9215,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":9240,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9214,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9217,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":9240,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9216,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9240,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9219,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":9349,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9258,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9250,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9249,"id":9257,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":9259,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":9246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":9259,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9242,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9245,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":9259,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9244,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":9249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9259,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9247,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":9349,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9277,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9269,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9268,"id":9276,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":9260,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":9278,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":9265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9262,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":9278,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9261,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9264,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":9278,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9263,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":9268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9278,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9266,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":9349,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9321,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[9289],"declarations":[{"constant":false,"id":9289,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":9321,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9288,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9302,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9303,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9308,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9304,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":9312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9287,"id":9320,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":9279,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9322,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":9284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9281,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":9322,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9280,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9283,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":9322,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9282,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":9287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9322,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9285,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":9349,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9347,"nodeType":"Block","src":"1843:767:26","statements":[{"id":9346,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[9331],"declarations":[{"constant":false,"id":9331,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":9346,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9330,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9335,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9338,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9339,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9342,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9329,"id":9345,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":9323,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9348,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":9326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9325,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":9348,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9324,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":9329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9348,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":9349,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9350,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/MockSpender.sol":{"ast":{"absolutePath":"contracts/MockSpender.sol","exportedSymbols":{"IERC1155":[9404],"IERC20":[9370],"IERC721":[9387],"MockSpender":[9623]},"id":9624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9351,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9370,"linearizedBaseContracts":[9370],"name":"IERC20","nameLocation":"68:6:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"095ea7b3","id":9360,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"90:7:27","nodeType":"FunctionDefinition","parameters":{"id":9356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9353,"mutability":"mutable","name":"spender","nameLocation":"106:7:27","nodeType":"VariableDeclaration","scope":9360,"src":"98:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9352,"name":"address","nodeType":"ElementaryTypeName","src":"98:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9355,"mutability":"mutable","name":"amount","nameLocation":"123:6:27","nodeType":"VariableDeclaration","scope":9360,"src":"115:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9354,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97:33:27"},"returnParameters":{"id":9359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9360,"src":"149:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9357,"name":"bool","nodeType":"ElementaryTypeName","src":"149:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"148:6:27"},"scope":9370,"src":"81:74:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":9369,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"169:9:27","nodeType":"FunctionDefinition","parameters":{"id":9365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9362,"mutability":"mutable","name":"owner","nameLocation":"187:5:27","nodeType":"VariableDeclaration","scope":9369,"src":"179:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9361,"name":"address","nodeType":"ElementaryTypeName","src":"179:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9364,"mutability":"mutable","name":"spender","nameLocation":"202:7:27","nodeType":"VariableDeclaration","scope":9369,"src":"194:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9363,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"178:32:27"},"returnParameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9369,"src":"234:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9366,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"233:9:27"},"scope":9370,"src":"160:83:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9624,"src":"58:187:27","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9387,"linearizedBaseContracts":[9387],"name":"IERC721","nameLocation":"257:7:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a22cb465","id":9377,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"280:17:27","nodeType":"FunctionDefinition","parameters":{"id":9375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9372,"mutability":"mutable","name":"operator","nameLocation":"306:8:27","nodeType":"VariableDeclaration","scope":9377,"src":"298:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9371,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9374,"mutability":"mutable","name":"approved","nameLocation":"321:8:27","nodeType":"VariableDeclaration","scope":9377,"src":"316:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9373,"name":"bool","nodeType":"ElementaryTypeName","src":"316:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"297:33:27"},"returnParameters":{"id":9376,"nodeType":"ParameterList","parameters":[],"src":"339:0:27"},"scope":9387,"src":"271:69:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e985e9c5","id":9386,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"354:16:27","nodeType":"FunctionDefinition","parameters":{"id":9382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9379,"mutability":"mutable","name":"owner","nameLocation":"379:5:27","nodeType":"VariableDeclaration","scope":9386,"src":"371:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9378,"name":"address","nodeType":"ElementaryTypeName","src":"371:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9381,"mutability":"mutable","name":"operator","nameLocation":"394:8:27","nodeType":"VariableDeclaration","scope":9386,"src":"386:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9380,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"370:33:27"},"returnParameters":{"id":9385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9386,"src":"427:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9383,"name":"bool","nodeType":"ElementaryTypeName","src":"427:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"426:6:27"},"scope":9387,"src":"345:88:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9624,"src":"247:188:27","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9404,"linearizedBaseContracts":[9404],"name":"IERC1155","nameLocation":"447:8:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a22cb465","id":9394,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"471:17:27","nodeType":"FunctionDefinition","parameters":{"id":9392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9389,"mutability":"mutable","name":"operator","nameLocation":"497:8:27","nodeType":"VariableDeclaration","scope":9394,"src":"489:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9388,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9391,"mutability":"mutable","name":"approved","nameLocation":"512:8:27","nodeType":"VariableDeclaration","scope":9394,"src":"507:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9390,"name":"bool","nodeType":"ElementaryTypeName","src":"507:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"488:33:27"},"returnParameters":{"id":9393,"nodeType":"ParameterList","parameters":[],"src":"530:0:27"},"scope":9404,"src":"462:69:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e985e9c5","id":9403,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"545:16:27","nodeType":"FunctionDefinition","parameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9396,"mutability":"mutable","name":"owner","nameLocation":"570:5:27","nodeType":"VariableDeclaration","scope":9403,"src":"562:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9395,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9398,"mutability":"mutable","name":"operator","nameLocation":"585:8:27","nodeType":"VariableDeclaration","scope":9403,"src":"577:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9397,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"561:33:27"},"returnParameters":{"id":9402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9403,"src":"618:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9400,"name":"bool","nodeType":"ElementaryTypeName","src":"618:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"617:6:27"},"scope":9404,"src":"536:88:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9624,"src":"437:189:27","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"MockSpender","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9623,"linearizedBaseContracts":[9623],"name":"MockSpender","nameLocation":"637:11:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":9406,"mutability":"mutable","name":"owner","nameLocation":"670:5:27","nodeType":"VariableDeclaration","scope":9623,"src":"655:20:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9405,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"e285444a44723385de85da4844cbb9105030b82a9300a3ffca99054d624c5e30","id":9414,"name":"ERC20Approved","nameLocation":"688:13:27","nodeType":"EventDefinition","parameters":{"id":9413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9408,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"718:5:27","nodeType":"VariableDeclaration","scope":9414,"src":"702:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9407,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9410,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"741:5:27","nodeType":"VariableDeclaration","scope":9414,"src":"725:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9409,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9412,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"756:6:27","nodeType":"VariableDeclaration","scope":9414,"src":"748:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9411,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:62:27"},"src":"682:82:27"},{"anonymous":false,"eventSelector":"f7f0f078848f27bd6bdf2b43e3dd43f4af481848aeba9d89e16df65b861402fe","id":9422,"name":"ERC721Approved","nameLocation":"775:14:27","nodeType":"EventDefinition","parameters":{"id":9421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9416,"indexed":true,"mutability":"mutable","name":"nft","nameLocation":"806:3:27","nodeType":"VariableDeclaration","scope":9422,"src":"790:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9415,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9418,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"827:5:27","nodeType":"VariableDeclaration","scope":9422,"src":"811:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9417,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9420,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"839:8:27","nodeType":"VariableDeclaration","scope":9422,"src":"834:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9419,"name":"bool","nodeType":"ElementaryTypeName","src":"834:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"789:59:27"},"src":"769:80:27"},{"anonymous":false,"eventSelector":"4cb534b21466cad791a2caf6e52051963bc1a4d3be4e73e82dd5191b14241336","id":9430,"name":"ERC1155Approved","nameLocation":"860:15:27","nodeType":"EventDefinition","parameters":{"id":9429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9424,"indexed":true,"mutability":"mutable","name":"nft","nameLocation":"892:3:27","nodeType":"VariableDeclaration","scope":9430,"src":"876:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9423,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9426,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"913:5:27","nodeType":"VariableDeclaration","scope":9430,"src":"897:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9425,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9428,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"925:8:27","nodeType":"VariableDeclaration","scope":9430,"src":"920:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9427,"name":"bool","nodeType":"ElementaryTypeName","src":"920:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"875:59:27"},"src":"854:81:27"},{"body":{"id":9438,"nodeType":"Block","src":"955:35:27","statements":[{"expression":{"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"965:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"973:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"977:6:27","memberName":"sender","nodeType":"MemberAccess","src":"973:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"965:18:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9437,"nodeType":"ExpressionStatement","src":"965:18:27"}]},"id":9439,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9431,"nodeType":"ParameterList","parameters":[],"src":"952:2:27"},"returnParameters":{"id":9432,"nodeType":"ParameterList","parameters":[],"src":"955:0:27"},"scope":9623,"src":"941:49:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9480,"nodeType":"Block","src":"1124:192:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1142:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1159:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1151:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9450,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:27","typeDescriptions":{}}},"id":9453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1142:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9455,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"1165:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1184:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1176:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9456,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:27","typeDescriptions":{}}},"id":9459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1165:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1142:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1188:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1134:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1134:72:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9464,"nodeType":"ExpressionStatement","src":"1134:72:27"},{"expression":{"arguments":[{"id":9469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"1238:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9470,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"1247:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1223:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"1216:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$9370_$","typeString":"type(contract IERC20)"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$9370","typeString":"contract IERC20"}},"id":9468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1230:7:27","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":9360,"src":"1216:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9472,"nodeType":"ExpressionStatement","src":"1216:38:27"},{"eventCall":{"arguments":[{"id":9474,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1283:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9475,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1290:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1294:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1290:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9477,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9445,"src":"1302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9473,"name":"ERC20Approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9414,"src":"1269:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9479,"nodeType":"EmitStatement","src":"1264:45:27"}]},"functionSelector":"a8e5e4aa","id":9481,"implemented":true,"kind":"function","modifiers":[],"name":"approveERC20","nameLocation":"1054:12:27","nodeType":"FunctionDefinition","parameters":{"id":9446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"token","nameLocation":"1075:5:27","nodeType":"VariableDeclaration","scope":9481,"src":"1067:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9440,"name":"address","nodeType":"ElementaryTypeName","src":"1067:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9443,"mutability":"mutable","name":"spender","nameLocation":"1090:7:27","nodeType":"VariableDeclaration","scope":9481,"src":"1082:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9442,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9445,"mutability":"mutable","name":"amount","nameLocation":"1107:6:27","nodeType":"VariableDeclaration","scope":9481,"src":"1099:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1066:48:27"},"returnParameters":{"id":9447,"nodeType":"ParameterList","parameters":[],"src":"1124:0:27"},"scope":9623,"src":"1045:271:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9499,"nodeType":"Block","src":"1457:68:27","statements":[{"expression":{"arguments":[{"expression":{"id":9494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1498:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1502:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1498:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9485,"src":"1510:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"1481:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9490,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"1474:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$9370_$","typeString":"type(contract IERC20)"}},"id":9492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$9370","typeString":"contract IERC20"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1488:9:27","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"1474:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9489,"id":9498,"nodeType":"Return","src":"1467:51:27"}]},"functionSelector":"c4e22d52","id":9500,"implemented":true,"kind":"function","modifiers":[],"name":"checkERC20Allowance","nameLocation":"1373:19:27","nodeType":"FunctionDefinition","parameters":{"id":9486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9483,"mutability":"mutable","name":"token","nameLocation":"1401:5:27","nodeType":"VariableDeclaration","scope":9500,"src":"1393:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9482,"name":"address","nodeType":"ElementaryTypeName","src":"1393:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9485,"mutability":"mutable","name":"spender","nameLocation":"1416:7:27","nodeType":"VariableDeclaration","scope":9500,"src":"1408:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9484,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1392:32:27"},"returnParameters":{"id":9489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9500,"src":"1448:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1447:9:27"},"scope":9623,"src":"1364:161:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9541,"nodeType":"Block","src":"1649:204:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9510,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1667:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1682:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1674:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9511,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:27","typeDescriptions":{}}},"id":9514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1667:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9516,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"1688:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1708:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1700:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9517,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:27","typeDescriptions":{}}},"id":9520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1700:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1688:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1667:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1712:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1659:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1659:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9525,"nodeType":"ExpressionStatement","src":"1659:71:27"},{"expression":{"arguments":[{"id":9530,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9504,"src":"1771:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9531,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"1781:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":9527,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1748:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9526,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9387,"src":"1740:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$9387_$","typeString":"type(contract IERC721)"}},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$9387","typeString":"contract IERC721"}},"id":9529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1753:17:27","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":9377,"src":"1740:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9533,"nodeType":"ExpressionStatement","src":"1740:50:27"},{"eventCall":{"arguments":[{"id":9535,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9502,"src":"1820:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1825:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1825:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9538,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"1837:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9534,"name":"ERC721Approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"1805:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9540,"nodeType":"EmitStatement","src":"1800:46:27"}]},"functionSelector":"d88c869b","id":9542,"implemented":true,"kind":"function","modifiers":[],"name":"approveERC721","nameLocation":"1580:13:27","nodeType":"FunctionDefinition","parameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9502,"mutability":"mutable","name":"nft","nameLocation":"1602:3:27","nodeType":"VariableDeclaration","scope":9542,"src":"1594:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9501,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9504,"mutability":"mutable","name":"operator","nameLocation":"1615:8:27","nodeType":"VariableDeclaration","scope":9542,"src":"1607:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9503,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9506,"mutability":"mutable","name":"approved","nameLocation":"1630:8:27","nodeType":"VariableDeclaration","scope":9542,"src":"1625:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9505,"name":"bool","nodeType":"ElementaryTypeName","src":"1625:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1593:46:27"},"returnParameters":{"id":9508,"nodeType":"ParameterList","parameters":[],"src":"1649:0:27"},"scope":9623,"src":"1571:282:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9560,"nodeType":"Block","src":"1996:75:27","statements":[{"expression":{"arguments":[{"expression":{"id":9555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2043:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2043:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9557,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"2055:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9552,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9544,"src":"2021:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9551,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9387,"src":"2013:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$9387_$","typeString":"type(contract IERC721)"}},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2013:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$9387","typeString":"contract IERC721"}},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2026:16:27","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":9386,"src":"2013:29:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":9558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2013:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9550,"id":9559,"nodeType":"Return","src":"2006:58:27"}]},"functionSelector":"574b4c65","id":9561,"implemented":true,"kind":"function","modifiers":[],"name":"checkERC721Approval","nameLocation":"1916:19:27","nodeType":"FunctionDefinition","parameters":{"id":9547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9544,"mutability":"mutable","name":"nft","nameLocation":"1944:3:27","nodeType":"VariableDeclaration","scope":9561,"src":"1936:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9543,"name":"address","nodeType":"ElementaryTypeName","src":"1936:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9546,"mutability":"mutable","name":"operator","nameLocation":"1957:8:27","nodeType":"VariableDeclaration","scope":9561,"src":"1949:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9545,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1935:31:27"},"returnParameters":{"id":9550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9561,"src":"1990:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9548,"name":"bool","nodeType":"ElementaryTypeName","src":"1990:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1989:6:27"},"scope":9623,"src":"1907:164:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9602,"nodeType":"Block","src":"2197:206:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9571,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9563,"src":"2215:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2222:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9572,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:27","typeDescriptions":{}}},"id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2215:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9577,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"2236:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2256:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2248:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9578,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:27","typeDescriptions":{}}},"id":9581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2236:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2215:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2260:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2207:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2207:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9586,"nodeType":"ExpressionStatement","src":"2207:71:27"},{"expression":{"arguments":[{"id":9591,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"2320:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9592,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9567,"src":"2330:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":9588,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9563,"src":"2297:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9587,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"2288:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$9404_$","typeString":"type(contract IERC1155)"}},"id":9589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$9404","typeString":"contract IERC1155"}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:17:27","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":9394,"src":"2288:31:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9594,"nodeType":"ExpressionStatement","src":"2288:51:27"},{"eventCall":{"arguments":[{"id":9596,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9563,"src":"2370:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9597,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2375:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2379:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2375:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9599,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9567,"src":"2387:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9595,"name":"ERC1155Approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"2354:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":9600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2354:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9601,"nodeType":"EmitStatement","src":"2349:47:27"}]},"functionSelector":"e02b94bc","id":9603,"implemented":true,"kind":"function","modifiers":[],"name":"approveERC1155","nameLocation":"2127:14:27","nodeType":"FunctionDefinition","parameters":{"id":9568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9563,"mutability":"mutable","name":"nft","nameLocation":"2150:3:27","nodeType":"VariableDeclaration","scope":9603,"src":"2142:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9562,"name":"address","nodeType":"ElementaryTypeName","src":"2142:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9565,"mutability":"mutable","name":"operator","nameLocation":"2163:8:27","nodeType":"VariableDeclaration","scope":9603,"src":"2155:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9564,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9567,"mutability":"mutable","name":"approved","nameLocation":"2178:8:27","nodeType":"VariableDeclaration","scope":9603,"src":"2173:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9566,"name":"bool","nodeType":"ElementaryTypeName","src":"2173:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2141:46:27"},"returnParameters":{"id":9569,"nodeType":"ParameterList","parameters":[],"src":"2197:0:27"},"scope":9623,"src":"2118:285:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9621,"nodeType":"Block","src":"2548:76:27","statements":[{"expression":{"arguments":[{"expression":{"id":9616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2596:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2600:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2596:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9618,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"2608:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9613,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"2574:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9612,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"2565:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$9404_$","typeString":"type(contract IERC1155)"}},"id":9614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$9404","typeString":"contract IERC1155"}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:16:27","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":9403,"src":"2565:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":9619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9611,"id":9620,"nodeType":"Return","src":"2558:59:27"}]},"functionSelector":"63dde699","id":9622,"implemented":true,"kind":"function","modifiers":[],"name":"checkERC1155Approval","nameLocation":"2467:20:27","nodeType":"FunctionDefinition","parameters":{"id":9608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9605,"mutability":"mutable","name":"nft","nameLocation":"2496:3:27","nodeType":"VariableDeclaration","scope":9622,"src":"2488:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9604,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9607,"mutability":"mutable","name":"operator","nameLocation":"2509:8:27","nodeType":"VariableDeclaration","scope":9622,"src":"2501:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9606,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2487:31:27"},"returnParameters":{"id":9611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9622,"src":"2542:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9609,"name":"bool","nodeType":"ElementaryTypeName","src":"2542:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2541:6:27"},"scope":9623,"src":"2458:166:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9624,"src":"628:1998:27","usedErrors":[],"usedEvents":[9414,9422,9430]}],"src":"32:2596:27"},"id":27},"contracts/TestERC1155.sol":{"ast":{"absolutePath":"contracts/TestERC1155.sol","exportedSymbols":{"Arrays":[4230],"Context":[4292],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[5822],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[5834],"Ownable":[147],"TestERC1155":[9677]},"id":9678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9625,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9678,"sourceUnit":1202,"src":"58:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9678,"sourceUnit":148,"src":"118:52:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9628,"name":"ERC1155","nameLocations":["196:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"196:7:28"},"id":9629,"nodeType":"InheritanceSpecifier","src":"196:7:28"},{"baseName":{"id":9630,"name":"Ownable","nameLocations":["205:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"205:7:28"},"id":9631,"nodeType":"InheritanceSpecifier","src":"205:7:28"}],"canonicalName":"TestERC1155","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9677,"linearizedBaseContracts":[9677,147,1201,284,1382,1324,5822,5834,4292],"name":"TestERC1155","nameLocation":"181:11:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":9656,"nodeType":"Block","src":"329:152:28","statements":[{"expression":{"arguments":[{"id":9643,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"345:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"313030","id":9645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"362:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"","id":9646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"367:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9642,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"339:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"339:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9648,"nodeType":"ExpressionStatement","src":"339:31:28"},{"expression":{"arguments":[{"id":9650,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"418:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"32","id":9651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"432:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"3530","id":9652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:2:28","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},{"hexValue":"","id":9653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"439:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9649,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"412:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"412:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9655,"nodeType":"ExpressionStatement","src":"412:30:28"}]},"id":9657,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f6170692e6578616d706c652e636f6d2f6d657461646174612f7b69647d2e6a736f6e","id":9636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"261:44:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3fd2fbb8c6ce52fd98769c1aad8cf36e09c77641f7a34522b7b6c7421fa434f8","typeString":"literal_string \"https://api.example.com/metadata/{id}.json\""},"value":"https://api.example.com/metadata/{id}.json"}],"id":9637,"kind":"baseConstructorSpecifier","modifierName":{"id":9635,"name":"ERC1155","nameLocations":["253:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"253:7:28"},"nodeType":"ModifierInvocation","src":"253:53:28"},{"arguments":[{"id":9639,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"315:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9640,"kind":"baseConstructorSpecifier","modifierName":{"id":9638,"name":"Ownable","nameLocations":["307:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"307:7:28"},"nodeType":"ModifierInvocation","src":"307:21:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9633,"mutability":"mutable","name":"initialOwner","nameLocation":"239:12:28","nodeType":"VariableDeclaration","scope":9657,"src":"231:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9632,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"230:22:28"},"returnParameters":{"id":9641,"nodeType":"ParameterList","parameters":[],"src":"329:0:28"},"scope":9677,"src":"219:262:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9675,"nodeType":"Block","src":"560:42:28","statements":[{"expression":{"arguments":[{"id":9669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9659,"src":"576:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9670,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"580:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9671,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9663,"src":"584:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":9672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9668,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"570:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"570:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9674,"nodeType":"ExpressionStatement","src":"570:25:28"}]},"functionSelector":"156e29f6","id":9676,"implemented":true,"kind":"function","modifiers":[{"id":9666,"kind":"modifierInvocation","modifierName":{"id":9665,"name":"onlyOwner","nameLocations":["550:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"550:9:28"},"nodeType":"ModifierInvocation","src":"550:9:28"}],"name":"mint","nameLocation":"496:4:28","nodeType":"FunctionDefinition","parameters":{"id":9664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9659,"mutability":"mutable","name":"to","nameLocation":"509:2:28","nodeType":"VariableDeclaration","scope":9676,"src":"501:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9658,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9661,"mutability":"mutable","name":"id","nameLocation":"521:2:28","nodeType":"VariableDeclaration","scope":9676,"src":"513:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9660,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9663,"mutability":"mutable","name":"amount","nameLocation":"533:6:28","nodeType":"VariableDeclaration","scope":9676,"src":"525:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9662,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"500:40:28"},"returnParameters":{"id":9667,"nodeType":"ParameterList","parameters":[],"src":"560:0:28"},"scope":9677,"src":"487:115:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9678,"src":"172:432:28","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1221,1236,1245,1252]}],"src":"32:572:28"},"id":28},"contracts/TestNFT.sol":{"ast":{"absolutePath":"contracts/TestNFT.sol","exportedSymbols":{"Context":[4292],"ERC165":[5822],"ERC721":[3112],"ERC721Utils":[3352],"IERC165":[5834],"IERC721":[3229],"IERC721Errors":[237],"IERC721Metadata":[3275],"Strings":[5798],"TestNFT":[9770]},"id":9771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9679,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9680,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9771,"sourceUnit":3113,"src":"58:57:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9681,"name":"ERC721","nameLocations":["137:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"137:6:29"},"id":9682,"nodeType":"InheritanceSpecifier","src":"137:6:29"}],"canonicalName":"TestNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9770,"linearizedBaseContracts":[9770,3112,237,3275,3229,5822,5834,4292],"name":"TestNFT","nameLocation":"126:7:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":9707,"nodeType":"Block","src":"190:97:29","statements":[{"expression":{"arguments":[{"expression":{"id":9690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"206:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"210:6:29","memberName":"sender","nodeType":"MemberAccess","src":"206:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"218:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9689,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"200:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"200:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9694,"nodeType":"ExpressionStatement","src":"200:20:29"},{"expression":{"arguments":[{"expression":{"id":9696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"236:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"240:6:29","memberName":"sender","nodeType":"MemberAccess","src":"236:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"32","id":9698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"248:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":9695,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"230:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"230:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9700,"nodeType":"ExpressionStatement","src":"230:20:29"},{"expression":{"arguments":[{"expression":{"id":9702,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"266:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"270:6:29","memberName":"sender","nodeType":"MemberAccess","src":"266:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33","id":9704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"278:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":9701,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"260:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"260:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9706,"nodeType":"ExpressionStatement","src":"260:20:29"}]},"id":9708,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546573744e4654","id":9685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"171:9:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c95840546677a1c0ac6e1a5a61abf2de8e42a16fdc14ed09c4eec982869961","typeString":"literal_string \"TestNFT\""},"value":"TestNFT"},{"hexValue":"544e4654","id":9686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"182:6:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bf4639f4809295b3818b7ece4077b3fa27a3ec42260477c85e0da55c64ce4f5","typeString":"literal_string \"TNFT\""},"value":"TNFT"}],"id":9687,"kind":"baseConstructorSpecifier","modifierName":{"id":9684,"name":"ERC721","nameLocations":["164:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":3112,"src":"164:6:29"},"nodeType":"ModifierInvocation","src":"164:25:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9683,"nodeType":"ParameterList","parameters":[],"src":"161:2:29"},"returnParameters":{"id":9688,"nodeType":"ParameterList","parameters":[],"src":"190:0:29"},"scope":9770,"src":"150:137:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2426],"body":{"id":9725,"nodeType":"Block","src":"487:63:29","statements":[{"expression":{"arguments":[{"id":9721,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9711,"src":"527:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9722,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9713,"src":"534:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9719,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"504:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TestNFT_$9770_$","typeString":"type(contract super TestNFT)"}},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"510:16:29","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"504:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"504:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9718,"id":9724,"nodeType":"Return","src":"497:46:29"}]},"documentation":{"id":9709,"nodeType":"StructuredDocumentation","src":"293:94:29","text":" @dev Explicitly override OpenZeppelin's function to ensure ABI includes it."},"functionSelector":"e985e9c5","id":9726,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"401:16:29","nodeType":"FunctionDefinition","overrides":{"id":9715,"nodeType":"OverrideSpecifier","overrides":[],"src":"463:8:29"},"parameters":{"id":9714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9711,"mutability":"mutable","name":"owner","nameLocation":"426:5:29","nodeType":"VariableDeclaration","scope":9726,"src":"418:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9710,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9713,"mutability":"mutable","name":"operator","nameLocation":"441:8:29","nodeType":"VariableDeclaration","scope":9726,"src":"433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9712,"name":"address","nodeType":"ElementaryTypeName","src":"433:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:33:29"},"returnParameters":{"id":9718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9726,"src":"481:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9716,"name":"bool","nodeType":"ElementaryTypeName","src":"481:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"480:6:29"},"scope":9770,"src":"392:158:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9768,"nodeType":"Block","src":"717:251:29","statements":[{"body":{"id":9766,"nodeType":"Block","src":"773:189:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":9746,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"803:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9748,"indexExpression":{"id":9747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"812:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"803:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9745,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"795:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":9749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"795:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"819:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"823:6:29","memberName":"sender","nodeType":"MemberAccess","src":"819:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"795:34:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572206f6620746f6b656e","id":9753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"831:20:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6","typeString":"literal_string \"Not owner of token\""},"value":"Not owner of token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6","typeString":"literal_string \"Not owner of token\""}],"id":9744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"787:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"787:65:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9755,"nodeType":"ExpressionStatement","src":"787:65:29"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"882:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"874:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9757,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:29","typeDescriptions":{}}},"id":9760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"874:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9761,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"886:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9763,"indexExpression":{"id":9762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"895:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"886:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9756,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"866:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"866:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9765,"nodeType":"ExpressionStatement","src":"866:32:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"747:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9738,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"751:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"760:6:29","memberName":"length","nodeType":"MemberAccess","src":"751:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"747:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9767,"initializationExpression":{"assignments":[9734],"declarations":[{"constant":false,"id":9734,"mutability":"mutable","name":"i","nameLocation":"740:1:29","nodeType":"VariableDeclaration","scope":9767,"src":"732:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9733,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9736,"initialValue":{"hexValue":"30","id":9735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"744:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"732:13:29"},"loopExpression":{"expression":{"id":9742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"768:3:29","subExpression":{"id":9741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"768:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9743,"nodeType":"ExpressionStatement","src":"768:3:29"},"nodeType":"ForStatement","src":"727:235:29"}]},"documentation":{"id":9727,"nodeType":"StructuredDocumentation","src":"556:90:29","text":" @dev Allows the owner to batch revoke approvals for multiple token IDs."},"functionSelector":"c7cc557d","id":9769,"implemented":true,"kind":"function","modifiers":[],"name":"batchRevokeApprovals","nameLocation":"660:20:29","nodeType":"FunctionDefinition","parameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"mutability":"mutable","name":"tokenIds","nameLocation":"698:8:29","nodeType":"VariableDeclaration","scope":9769,"src":"681:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9728,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9729,"nodeType":"ArrayTypeName","src":"681:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"680:27:29"},"returnParameters":{"id":9732,"nodeType":"ParameterList","parameters":[],"src":"717:0:29"},"scope":9770,"src":"651:317:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9771,"src":"117:853:29","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[3128,3137,3146]}],"src":"32:940:29"},"id":29},"contracts/TestToken.sol":{"ast":{"absolutePath":"contracts/TestToken.sol","exportedSymbols":{"Context":[4292],"ERC20":[2051],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155],"TestToken":[9848]},"id":9849,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9773,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9849,"sourceUnit":2052,"src":"58:55:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9774,"name":"ERC20","nameLocations":["137:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"137:5:30"},"id":9775,"nodeType":"InheritanceSpecifier","src":"137:5:30"}],"canonicalName":"TestToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9848,"linearizedBaseContracts":[9848,2051,189,2155,2129,4292],"name":"TestToken","nameLocation":"124:9:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":9777,"mutability":"mutable","name":"owner","nameLocation":"164:5:30","nodeType":"VariableDeclaration","scope":9848,"src":"149:20:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9776,"name":"address","nodeType":"ElementaryTypeName","src":"149:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":9805,"nodeType":"Block","src":"266:114:30","statements":[{"expression":{"id":9793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9790,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9777,"src":"276:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"284:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"288:6:30","memberName":"sender","nodeType":"MemberAccess","src":"284:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"276:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9794,"nodeType":"ExpressionStatement","src":"276:18:30"},{"expression":{"arguments":[{"expression":{"id":9796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"310:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"314:6:30","memberName":"sender","nodeType":"MemberAccess","src":"310:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":9798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"322:7:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"332:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":9800,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9783,"src":"336:8:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"332:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"322:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9795,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"304:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"304:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9804,"nodeType":"ExpressionStatement","src":"304:41:30"}]},"id":9806,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9786,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"252:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9787,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"258:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9788,"kind":"baseConstructorSpecifier","modifierName":{"id":9785,"name":"ERC20","nameLocations":["246:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"246:5:30"},"nodeType":"ModifierInvocation","src":"246:19:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9779,"mutability":"mutable","name":"name","nameLocation":"202:4:30","nodeType":"VariableDeclaration","scope":9806,"src":"188:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9778,"name":"string","nodeType":"ElementaryTypeName","src":"188:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9781,"mutability":"mutable","name":"symbol","nameLocation":"222:6:30","nodeType":"VariableDeclaration","scope":9806,"src":"208:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9780,"name":"string","nodeType":"ElementaryTypeName","src":"208:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9783,"mutability":"mutable","name":"decimals","nameLocation":"236:8:30","nodeType":"VariableDeclaration","scope":9806,"src":"230:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9782,"name":"uint8","nodeType":"ElementaryTypeName","src":"230:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"187:58:30"},"returnParameters":{"id":9789,"nodeType":"ParameterList","parameters":[],"src":"266:0:30"},"scope":9848,"src":"176:204:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9826,"nodeType":"Block","src":"489:90:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"507:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"511:6:30","memberName":"sender","nodeType":"MemberAccess","src":"507:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9816,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9777,"src":"521:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"507:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":9818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"528:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":9813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"499:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"499:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9820,"nodeType":"ExpressionStatement","src":"499:46:30"},{"expression":{"arguments":[{"id":9822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"561:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9810,"src":"565:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9821,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"555:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"555:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9825,"nodeType":"ExpressionStatement","src":"555:17:30"}]},"functionSelector":"40c10f19","id":9827,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"447:4:30","nodeType":"FunctionDefinition","parameters":{"id":9811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9808,"mutability":"mutable","name":"to","nameLocation":"460:2:30","nodeType":"VariableDeclaration","scope":9827,"src":"452:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9807,"name":"address","nodeType":"ElementaryTypeName","src":"452:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9810,"mutability":"mutable","name":"amount","nameLocation":"472:6:30","nodeType":"VariableDeclaration","scope":9827,"src":"464:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9809,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"451:28:30"},"returnParameters":{"id":9812,"nodeType":"ParameterList","parameters":[],"src":"489:0:30"},"scope":9848,"src":"438:141:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1702],"body":{"id":9846,"nodeType":"Block","src":"666:63:30","statements":[{"expression":{"arguments":[{"expression":{"id":9838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"681:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"685:6:30","memberName":"sender","nodeType":"MemberAccess","src":"681:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9840,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"693:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"702:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9837,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":1942,"src":"672:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9843,"nodeType":"ExpressionStatement","src":"672:37:30"},{"expression":{"hexValue":"74727565","id":9844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"722:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9836,"id":9845,"nodeType":"Return","src":"715:11:30"}]},"functionSelector":"095ea7b3","id":9847,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"594:7:30","nodeType":"FunctionDefinition","overrides":{"id":9833,"nodeType":"OverrideSpecifier","overrides":[],"src":"642:8:30"},"parameters":{"id":9832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9829,"mutability":"mutable","name":"spender","nameLocation":"610:7:30","nodeType":"VariableDeclaration","scope":9847,"src":"602:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9828,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9831,"mutability":"mutable","name":"amount","nameLocation":"627:6:30","nodeType":"VariableDeclaration","scope":9847,"src":"619:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9830,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:33:30"},"returnParameters":{"id":9836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9847,"src":"660:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9834,"name":"bool","nodeType":"ElementaryTypeName","src":"660:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"659:6:30"},"scope":9848,"src":"585:144:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9849,"src":"115:617:30","usedErrors":[159,164,169,178,183,188],"usedEvents":[2063,2072]}],"src":"32:702:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d9410df5879a48816a2df45866469d4d5cd649c55e06dfc855fde9640d5c4ad64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SWAP5 LT 0xDF PC PUSH26 0xA48816A2DF45866469D4D5CD649C55E06DFC855FDE9640D5C4AD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020db2b4cf082e50e6a6d6d0439996a357ca3ed00a19bdfa72a1e023c7aae1a2764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDB 0x2B 0x4C CREATE DUP3 0xE5 0xE PUSH11 0x6D6D0439996A357CA3ED00 LOG1 SWAP12 0xDF 0xA7 0x2A 0x1E MUL EXTCODECOPY PUSH27 0xAE1A2764736F6C6343000814003300000000000000000000000000 ","sourceMap":"459:17881:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010a81c65bf6f36d60e6bfd6deddd15b713a1d99f89d7c68d50fd3729ae57ee5864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xA8 SHR PUSH6 0xBF6F36D60E6B REVERT PUSH14 0xEDDD15B713A1D99F89D7C68D50FD CALLDATACOPY 0x29 0xAE JUMPI 0xEE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1598:3723:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MockSpender.sol":{"IERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isApprovedForAll(address,address)":"e985e9c5","setApprovalForAll(address,bool)":"a22cb465"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockSpender.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockSpender.sol\":{\"keccak256\":\"0xd126139a5bb734fae2cd2f2b76f911084556fdaa085689d40200362cefb4932c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b3e733399d0c868afa4da8bfc515e3e1d84a8a9ce4f0962de56b97140b2d8eb\",\"dweb:/ipfs/QmRjHmVRynV26H389stexdUJ4htKQKE44aXCEQPAuc1ifn\"]}},\"version\":1}"},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockSpender.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockSpender.sol\":{\"keccak256\":\"0xd126139a5bb734fae2cd2f2b76f911084556fdaa085689d40200362cefb4932c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b3e733399d0c868afa4da8bfc515e3e1d84a8a9ce4f0962de56b97140b2d8eb\",\"dweb:/ipfs/QmRjHmVRynV26H389stexdUJ4htKQKE44aXCEQPAuc1ifn\"]}},\"version\":1}"},"IERC721":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isApprovedForAll(address,address)":"e985e9c5","setApprovalForAll(address,bool)":"a22cb465"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockSpender.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockSpender.sol\":{\"keccak256\":\"0xd126139a5bb734fae2cd2f2b76f911084556fdaa085689d40200362cefb4932c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b3e733399d0c868afa4da8bfc515e3e1d84a8a9ce4f0962de56b97140b2d8eb\",\"dweb:/ipfs/QmRjHmVRynV26H389stexdUJ4htKQKE44aXCEQPAuc1ifn\"]}},\"version\":1}"},"MockSpender":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"nft","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ERC1155Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Approved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"nft","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ERC721Approved","type":"event"},{"inputs":[{"internalType":"address","name":"nft","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"approveERC1155","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approveERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nft","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"approveERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nft","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"checkERC1155Approval","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"checkERC20Allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nft","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"checkERC721Approval","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_9439":{"entryPoint":null,"id":9439,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bb3806100606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a8e5e4aa1161005b578063a8e5e4aa14610100578063c4e22d521461011c578063d88c869b1461014c578063e02b94bc146101685761007d565b8063574b4c651461008257806363dde699146100b25780638da5cb5b146100e2575b600080fd5b61009c6004803603810190610097919061082f565b610184565b6040516100a9919061088a565b60405180910390f35b6100cc60048036038101906100c7919061082f565b61020a565b6040516100d9919061088a565b60405180910390f35b6100ea610290565b6040516100f791906108b4565b60405180910390f35b61011a60048036038101906101159190610905565b6102b4565b005b6101366004803603810190610131919061082f565b610446565b6040516101439190610967565b60405180910390f35b610166600480360381019061016191906109ae565b6104cc565b005b610182600480360381019061017d91906109ae565b61064c565b005b60008273ffffffffffffffffffffffffffffffffffffffff1663e985e9c533846040518363ffffffff1660e01b81526004016101c1929190610a01565b602060405180830381865afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610a3f565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663e985e9c533846040518363ffffffff1660e01b8152600401610247929190610a01565b602060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190610a3f565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561031e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610398929190610ae9565b6020604051808303816000875af11580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610a3f565b503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fe285444a44723385de85da4844cbb9105030b82a9300a3ffca99054d624c5e30836040516104399190610967565b60405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33846040518363ffffffff1660e01b8152600401610483929190610a01565b602060405180830381865afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610b27565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156105365750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a22cb46583836040518363ffffffff1660e01b81526004016105b0929190610b54565b600060405180830381600087803b1580156105ca57600080fd5b505af11580156105de573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff7f0f078848f27bd6bdf2b43e3dd43f4af481848aeba9d89e16df65b861402fe8360405161063f919061088a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156106b65750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b6106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a22cb46583836040518363ffffffff1660e01b8152600401610730929190610b54565b600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4cb534b21466cad791a2caf6e52051963bc1a4d3be4e73e82dd5191b14241336836040516107bf919061088a565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fc826107d1565b9050919050565b61080c816107f1565b811461081757600080fd5b50565b60008135905061082981610803565b92915050565b60008060408385031215610846576108456107cc565b5b60006108548582860161081a565b92505060206108658582860161081a565b9150509250929050565b60008115159050919050565b6108848161086f565b82525050565b600060208201905061089f600083018461087b565b92915050565b6108ae816107f1565b82525050565b60006020820190506108c960008301846108a5565b92915050565b6000819050919050565b6108e2816108cf565b81146108ed57600080fd5b50565b6000813590506108ff816108d9565b92915050565b60008060006060848603121561091e5761091d6107cc565b5b600061092c8682870161081a565b935050602061093d8682870161081a565b925050604061094e868287016108f0565b9150509250925092565b610961816108cf565b82525050565b600060208201905061097c6000830184610958565b92915050565b61098b8161086f565b811461099657600080fd5b50565b6000813590506109a881610982565b92915050565b6000806000606084860312156109c7576109c66107cc565b5b60006109d58682870161081a565b93505060206109e68682870161081a565b92505060406109f786828701610999565b9150509250925092565b6000604082019050610a1660008301856108a5565b610a2360208301846108a5565b9392505050565b600081519050610a3981610982565b92915050565b600060208284031215610a5557610a546107cc565b5b6000610a6384828501610a2a565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000610ab3600f83610a6c565b9150610abe82610a7d565b602082019050919050565b60006020820190508181036000830152610ae281610aa6565b9050919050565b6000604082019050610afe60008301856108a5565b610b0b6020830184610958565b9392505050565b600081519050610b21816108d9565b92915050565b600060208284031215610b3d57610b3c6107cc565b5b6000610b4b84828501610b12565b91505092915050565b6000604082019050610b6960008301856108a5565b610b76602083018461087b565b939250505056fea26469706673582212208de353304d2d23a6e82f197a64404d9b6c61537ab0ee4f332eea170cc4c394f764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xBB3 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8E5E4AA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC4E22D52 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xD88C869B EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE02B94BC EQ PUSH2 0x168 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x574B4C65 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x63DDE699 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x354 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE285444A44723385DE85DA4844CBB9105030B82A9300A3FFCA99054D624C5E30 DUP4 PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x536 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B0 SWAP3 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F0F078848F27BD6BDF2B43E3DD43F4AF481848AEBA9D89E16DF65B861402FE DUP4 PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EC SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB534B21466CAD791A2CAF6E52051963BC1A4D3BE4E73E82DD5191B14241336 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80C DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x829 DUP2 PUSH2 0x803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH2 0x845 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP6 DUP3 DUP7 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x865 DUP6 DUP3 DUP7 ADD PUSH2 0x81A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x86F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E2 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8FF DUP2 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92C DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x93D DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x94E DUP7 DUP3 DUP8 ADD PUSH2 0x8F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x98B DUP2 PUSH2 0x86F JUMP JUMPDEST DUP2 EQ PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A8 DUP2 PUSH2 0x982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D5 DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9E6 DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F7 DUP7 DUP3 DUP8 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA39 DUP2 PUSH2 0x982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH2 0xA54 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA63 DUP5 DUP3 DUP6 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 PUSH1 0xF DUP4 PUSH2 0xA6C JUMP JUMPDEST SWAP2 POP PUSH2 0xABE DUP3 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAFE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB21 DUP2 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3D JUMPI PUSH2 0xB3C PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB4B DUP5 DUP3 DUP6 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB69 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xE3 MSTORE8 ADDRESS 0x4D 0x2D 0x23 0xA6 0xE8 0x2F NOT PUSH27 0x64404D9B6C61537AB0EE4F332EEA170CC4C394F764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"628:1998:27:-:0;;;941:49;;;;;;;;;;973:10;965:5;;:18;;;;;;;;;;;;;;;;;;628:1998;;;;;;"},"deployedBytecode":{"functionDebugData":{"@approveERC1155_9603":{"entryPoint":1612,"id":9603,"parameterSlots":3,"returnSlots":0},"@approveERC20_9481":{"entryPoint":692,"id":9481,"parameterSlots":3,"returnSlots":0},"@approveERC721_9542":{"entryPoint":1228,"id":9542,"parameterSlots":3,"returnSlots":0},"@checkERC1155Approval_9622":{"entryPoint":522,"id":9622,"parameterSlots":2,"returnSlots":1},"@checkERC20Allowance_9500":{"entryPoint":1094,"id":9500,"parameterSlots":2,"returnSlots":1},"@checkERC721Approval_9561":{"entryPoint":388,"id":9561,"parameterSlots":2,"returnSlots":1},"@owner_9406":{"entryPoint":656,"id":9406,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":2457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":2602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2095,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_bool":{"entryPoint":2478,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2309,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2213,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2171,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack":{"entryPoint":2726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2392,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2561,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":2900,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":2793,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2407,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2668,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2033,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2159,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2001,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2255,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1996,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226":{"entryPoint":2685,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2051,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":2434,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2265,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7455:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"748:87:31","statements":[{"nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:31"},"nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:31"},"nodeType":"YulFunctionCall","src":"796:33:31"},"nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nodeType":"YulBlock","src":"924:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"970:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"972:77:31"},"nodeType":"YulFunctionCall","src":"972:79:31"},"nodeType":"YulExpressionStatement","src":"972:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"945:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"941:3:31"},"nodeType":"YulFunctionCall","src":"941:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"937:3:31"},"nodeType":"YulFunctionCall","src":"937:32:31"},"nodeType":"YulIf","src":"934:119:31"},{"nodeType":"YulBlock","src":"1063:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1078:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1092:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1107:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1142:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1153:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1138:3:31"},"nodeType":"YulFunctionCall","src":"1138:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1117:20:31"},"nodeType":"YulFunctionCall","src":"1117:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1107:6:31"}]}]},{"nodeType":"YulBlock","src":"1190:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1205:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1219:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1209:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1235:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1270:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1281:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1266:3:31"},"nodeType":"YulFunctionCall","src":"1266:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1290:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1245:20:31"},"nodeType":"YulFunctionCall","src":"1245:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1235:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"886:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"897:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"909:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"917:6:31","type":""}],"src":"841:474:31"},{"body":{"nodeType":"YulBlock","src":"1363:48:31","statements":[{"nodeType":"YulAssignment","src":"1373:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1398:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1391:6:31"},"nodeType":"YulFunctionCall","src":"1391:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1384:6:31"},"nodeType":"YulFunctionCall","src":"1384:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1373:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1345:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1355:7:31","type":""}],"src":"1321:90:31"},{"body":{"nodeType":"YulBlock","src":"1476:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1493:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1513:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1498:14:31"},"nodeType":"YulFunctionCall","src":"1498:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1486:6:31"},"nodeType":"YulFunctionCall","src":"1486:34:31"},"nodeType":"YulExpressionStatement","src":"1486:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1464:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1471:3:31","type":""}],"src":"1417:109:31"},{"body":{"nodeType":"YulBlock","src":"1624:118:31","statements":[{"nodeType":"YulAssignment","src":"1634:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1646:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1657:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:31"},"nodeType":"YulFunctionCall","src":"1642:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1634:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1708:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1721:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1732:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:31"},"nodeType":"YulFunctionCall","src":"1717:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1670:37:31"},"nodeType":"YulFunctionCall","src":"1670:65:31"},"nodeType":"YulExpressionStatement","src":"1670:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1596:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1608:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1619:4:31","type":""}],"src":"1532:210:31"},{"body":{"nodeType":"YulBlock","src":"1813:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1830:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1853:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1835:17:31"},"nodeType":"YulFunctionCall","src":"1835:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:31"},"nodeType":"YulFunctionCall","src":"1823:37:31"},"nodeType":"YulExpressionStatement","src":"1823:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1801:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1808:3:31","type":""}],"src":"1748:118:31"},{"body":{"nodeType":"YulBlock","src":"1970:124:31","statements":[{"nodeType":"YulAssignment","src":"1980:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1992:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2003:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1988:3:31"},"nodeType":"YulFunctionCall","src":"1988:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1980:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2060:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2073:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2084:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:31"},"nodeType":"YulFunctionCall","src":"2069:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2016:43:31"},"nodeType":"YulFunctionCall","src":"2016:71:31"},"nodeType":"YulExpressionStatement","src":"2016:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1942:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1954:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1965:4:31","type":""}],"src":"1872:222:31"},{"body":{"nodeType":"YulBlock","src":"2145:32:31","statements":[{"nodeType":"YulAssignment","src":"2155:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"2166:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2155:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2127:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2137:7:31","type":""}],"src":"2100:77:31"},{"body":{"nodeType":"YulBlock","src":"2226:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"2283:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2292:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2295:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2285:6:31"},"nodeType":"YulFunctionCall","src":"2285:12:31"},"nodeType":"YulExpressionStatement","src":"2285:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2274:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2256:17:31"},"nodeType":"YulFunctionCall","src":"2256:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:31"},"nodeType":"YulFunctionCall","src":"2246:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:31"},"nodeType":"YulFunctionCall","src":"2239:43:31"},"nodeType":"YulIf","src":"2236:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:31","type":""}],"src":"2183:122:31"},{"body":{"nodeType":"YulBlock","src":"2363:87:31","statements":[{"nodeType":"YulAssignment","src":"2373:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2395:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2382:12:31"},"nodeType":"YulFunctionCall","src":"2382:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2373:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2438:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2411:26:31"},"nodeType":"YulFunctionCall","src":"2411:33:31"},"nodeType":"YulExpressionStatement","src":"2411:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2341:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2349:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2357:5:31","type":""}],"src":"2311:139:31"},{"body":{"nodeType":"YulBlock","src":"2556:519:31","statements":[{"body":{"nodeType":"YulBlock","src":"2602:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2604:77:31"},"nodeType":"YulFunctionCall","src":"2604:79:31"},"nodeType":"YulExpressionStatement","src":"2604:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2577:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2573:3:31"},"nodeType":"YulFunctionCall","src":"2573:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2598:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2569:3:31"},"nodeType":"YulFunctionCall","src":"2569:32:31"},"nodeType":"YulIf","src":"2566:119:31"},{"nodeType":"YulBlock","src":"2695:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2710:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2724:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2714:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2739:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2774:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2785:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2770:3:31"},"nodeType":"YulFunctionCall","src":"2770:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2794:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2749:20:31"},"nodeType":"YulFunctionCall","src":"2749:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2739:6:31"}]}]},{"nodeType":"YulBlock","src":"2822:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2837:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2851:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2841:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2867:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2902:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2913:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2898:3:31"},"nodeType":"YulFunctionCall","src":"2898:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2922:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2877:20:31"},"nodeType":"YulFunctionCall","src":"2877:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2867:6:31"}]}]},{"nodeType":"YulBlock","src":"2950:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2965:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2979:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2969:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2995:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3030:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3041:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3026:3:31"},"nodeType":"YulFunctionCall","src":"3026:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3050:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3005:20:31"},"nodeType":"YulFunctionCall","src":"3005:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2995:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2510:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2521:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2533:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2541:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2549:6:31","type":""}],"src":"2456:619:31"},{"body":{"nodeType":"YulBlock","src":"3146:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3163:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3186:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3168:17:31"},"nodeType":"YulFunctionCall","src":"3168:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3156:6:31"},"nodeType":"YulFunctionCall","src":"3156:37:31"},"nodeType":"YulExpressionStatement","src":"3156:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3134:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3141:3:31","type":""}],"src":"3081:118:31"},{"body":{"nodeType":"YulBlock","src":"3303:124:31","statements":[{"nodeType":"YulAssignment","src":"3313:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3336:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3321:3:31"},"nodeType":"YulFunctionCall","src":"3321:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3313:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3393:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3406:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3417:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3402:3:31"},"nodeType":"YulFunctionCall","src":"3402:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3349:43:31"},"nodeType":"YulFunctionCall","src":"3349:71:31"},"nodeType":"YulExpressionStatement","src":"3349:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3275:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3287:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3298:4:31","type":""}],"src":"3205:222:31"},{"body":{"nodeType":"YulBlock","src":"3473:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"3527:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3536:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3529:6:31"},"nodeType":"YulFunctionCall","src":"3529:12:31"},"nodeType":"YulExpressionStatement","src":"3529:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3496:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3518:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3503:14:31"},"nodeType":"YulFunctionCall","src":"3503:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3493:2:31"},"nodeType":"YulFunctionCall","src":"3493:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3486:6:31"},"nodeType":"YulFunctionCall","src":"3486:40:31"},"nodeType":"YulIf","src":"3483:60:31"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3466:5:31","type":""}],"src":"3433:116:31"},{"body":{"nodeType":"YulBlock","src":"3604:84:31","statements":[{"nodeType":"YulAssignment","src":"3614:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3636:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3623:12:31"},"nodeType":"YulFunctionCall","src":"3623:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3614:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3676:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"3652:23:31"},"nodeType":"YulFunctionCall","src":"3652:30:31"},"nodeType":"YulExpressionStatement","src":"3652:30:31"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3582:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"3590:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3598:5:31","type":""}],"src":"3555:133:31"},{"body":{"nodeType":"YulBlock","src":"3791:516:31","statements":[{"body":{"nodeType":"YulBlock","src":"3837:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3839:77:31"},"nodeType":"YulFunctionCall","src":"3839:79:31"},"nodeType":"YulExpressionStatement","src":"3839:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3812:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3821:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3808:3:31"},"nodeType":"YulFunctionCall","src":"3808:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3833:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3804:3:31"},"nodeType":"YulFunctionCall","src":"3804:32:31"},"nodeType":"YulIf","src":"3801:119:31"},{"nodeType":"YulBlock","src":"3930:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3945:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3959:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3949:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3974:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4009:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4020:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4005:3:31"},"nodeType":"YulFunctionCall","src":"4005:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4029:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3984:20:31"},"nodeType":"YulFunctionCall","src":"3984:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3974:6:31"}]}]},{"nodeType":"YulBlock","src":"4057:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4072:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4086:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4076:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4102:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4148:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:31"},"nodeType":"YulFunctionCall","src":"4133:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4157:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4112:20:31"},"nodeType":"YulFunctionCall","src":"4112:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4102:6:31"}]}]},{"nodeType":"YulBlock","src":"4185:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4200:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4214:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4204:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4230:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4273:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:31"},"nodeType":"YulFunctionCall","src":"4258:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4282:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4240:17:31"},"nodeType":"YulFunctionCall","src":"4240:50:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4230:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3745:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3756:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3768:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3776:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3784:6:31","type":""}],"src":"3694:613:31"},{"body":{"nodeType":"YulBlock","src":"4439:206:31","statements":[{"nodeType":"YulAssignment","src":"4449:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4461:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4472:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:31"},"nodeType":"YulFunctionCall","src":"4457:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4449:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4529:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4542:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4553:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4538:3:31"},"nodeType":"YulFunctionCall","src":"4538:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4485:43:31"},"nodeType":"YulFunctionCall","src":"4485:71:31"},"nodeType":"YulExpressionStatement","src":"4485:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4610:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4623:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4634:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4619:3:31"},"nodeType":"YulFunctionCall","src":"4619:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4566:43:31"},"nodeType":"YulFunctionCall","src":"4566:72:31"},"nodeType":"YulExpressionStatement","src":"4566:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4403:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4415:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4423:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4434:4:31","type":""}],"src":"4313:332:31"},{"body":{"nodeType":"YulBlock","src":"4711:77:31","statements":[{"nodeType":"YulAssignment","src":"4721:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4736:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4730:5:31"},"nodeType":"YulFunctionCall","src":"4730:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4721:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4776:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"4752:23:31"},"nodeType":"YulFunctionCall","src":"4752:30:31"},"nodeType":"YulExpressionStatement","src":"4752:30:31"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4689:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4697:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4705:5:31","type":""}],"src":"4651:137:31"},{"body":{"nodeType":"YulBlock","src":"4868:271:31","statements":[{"body":{"nodeType":"YulBlock","src":"4914:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4916:77:31"},"nodeType":"YulFunctionCall","src":"4916:79:31"},"nodeType":"YulExpressionStatement","src":"4916:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4889:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4898:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4885:3:31"},"nodeType":"YulFunctionCall","src":"4885:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4910:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4881:3:31"},"nodeType":"YulFunctionCall","src":"4881:32:31"},"nodeType":"YulIf","src":"4878:119:31"},{"nodeType":"YulBlock","src":"5007:125:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5022:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5036:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5026:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5051:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5094:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5105:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5090:3:31"},"nodeType":"YulFunctionCall","src":"5090:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5114:7:31"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"5061:28:31"},"nodeType":"YulFunctionCall","src":"5061:61:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5051:6:31"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4838:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4849:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4861:6:31","type":""}],"src":"4794:345:31"},{"body":{"nodeType":"YulBlock","src":"5241:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5258:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"5263:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5251:6:31"},"nodeType":"YulFunctionCall","src":"5251:19:31"},"nodeType":"YulExpressionStatement","src":"5251:19:31"},{"nodeType":"YulAssignment","src":"5279:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5298:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"5303:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5294:3:31"},"nodeType":"YulFunctionCall","src":"5294:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5279:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5213:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"5218:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5229:11:31","type":""}],"src":"5145:169:31"},{"body":{"nodeType":"YulBlock","src":"5426:59:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5448:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5456:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5444:3:31"},"nodeType":"YulFunctionCall","src":"5444:14:31"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"5460:17:31","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5437:6:31"},"nodeType":"YulFunctionCall","src":"5437:41:31"},"nodeType":"YulExpressionStatement","src":"5437:41:31"}]},"name":"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5418:6:31","type":""}],"src":"5320:165:31"},{"body":{"nodeType":"YulBlock","src":"5637:220:31","statements":[{"nodeType":"YulAssignment","src":"5647:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5713:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:31","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5654:58:31"},"nodeType":"YulFunctionCall","src":"5654:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5647:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5819:3:31"}],"functionName":{"name":"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","nodeType":"YulIdentifier","src":"5730:88:31"},"nodeType":"YulFunctionCall","src":"5730:93:31"},"nodeType":"YulExpressionStatement","src":"5730:93:31"},{"nodeType":"YulAssignment","src":"5832:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5843:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"5848:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5839:3:31"},"nodeType":"YulFunctionCall","src":"5839:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5832:3:31"}]}]},"name":"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5625:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5633:3:31","type":""}],"src":"5491:366:31"},{"body":{"nodeType":"YulBlock","src":"6034:248:31","statements":[{"nodeType":"YulAssignment","src":"6044:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6056:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6067:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6052:3:31"},"nodeType":"YulFunctionCall","src":"6052:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6044:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6091:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6102:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6087:3:31"},"nodeType":"YulFunctionCall","src":"6087:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6110:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6116:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6106:3:31"},"nodeType":"YulFunctionCall","src":"6106:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6080:6:31"},"nodeType":"YulFunctionCall","src":"6080:47:31"},"nodeType":"YulExpressionStatement","src":"6080:47:31"},{"nodeType":"YulAssignment","src":"6136:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6270:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6144:124:31"},"nodeType":"YulFunctionCall","src":"6144:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6136:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6014:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6029:4:31","type":""}],"src":"5863:419:31"},{"body":{"nodeType":"YulBlock","src":"6414:206:31","statements":[{"nodeType":"YulAssignment","src":"6424:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6436:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6447:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6432:3:31"},"nodeType":"YulFunctionCall","src":"6432:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6424:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6504:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6517:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6528:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6513:3:31"},"nodeType":"YulFunctionCall","src":"6513:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6460:43:31"},"nodeType":"YulFunctionCall","src":"6460:71:31"},"nodeType":"YulExpressionStatement","src":"6460:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6585:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:31"},"nodeType":"YulFunctionCall","src":"6594:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6541:43:31"},"nodeType":"YulFunctionCall","src":"6541:72:31"},"nodeType":"YulExpressionStatement","src":"6541:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6378:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6390:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6398:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6409:4:31","type":""}],"src":"6288:332:31"},{"body":{"nodeType":"YulBlock","src":"6689:80:31","statements":[{"nodeType":"YulAssignment","src":"6699:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6714:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6708:5:31"},"nodeType":"YulFunctionCall","src":"6708:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6699:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6757:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6730:26:31"},"nodeType":"YulFunctionCall","src":"6730:33:31"},"nodeType":"YulExpressionStatement","src":"6730:33:31"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6667:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6675:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6683:5:31","type":""}],"src":"6626:143:31"},{"body":{"nodeType":"YulBlock","src":"6852:274:31","statements":[{"body":{"nodeType":"YulBlock","src":"6898:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6900:77:31"},"nodeType":"YulFunctionCall","src":"6900:79:31"},"nodeType":"YulExpressionStatement","src":"6900:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6873:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6882:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6869:3:31"},"nodeType":"YulFunctionCall","src":"6869:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"6894:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6865:3:31"},"nodeType":"YulFunctionCall","src":"6865:32:31"},"nodeType":"YulIf","src":"6862:119:31"},{"nodeType":"YulBlock","src":"6991:128:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7006:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"7020:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7010:6:31","type":""}]},{"nodeType":"YulAssignment","src":"7035:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7081:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"7092:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7077:3:31"},"nodeType":"YulFunctionCall","src":"7077:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7101:7:31"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7045:31:31"},"nodeType":"YulFunctionCall","src":"7045:64:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7035:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6822:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6833:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6845:6:31","type":""}],"src":"6775:351:31"},{"body":{"nodeType":"YulBlock","src":"7252:200:31","statements":[{"nodeType":"YulAssignment","src":"7262:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7285:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:31"},"nodeType":"YulFunctionCall","src":"7270:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7262:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7342:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7355:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7366:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:31"},"nodeType":"YulFunctionCall","src":"7351:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7298:43:31"},"nodeType":"YulFunctionCall","src":"7298:71:31"},"nodeType":"YulExpressionStatement","src":"7298:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7417:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7430:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7441:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:31"},"nodeType":"YulFunctionCall","src":"7426:18:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"7379:37:31"},"nodeType":"YulFunctionCall","src":"7379:66:31"},"nodeType":"YulExpressionStatement","src":"7379:66:31"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7216:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7228:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7236:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7247:4:31","type":""}],"src":"7132:320:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a8e5e4aa1161005b578063a8e5e4aa14610100578063c4e22d521461011c578063d88c869b1461014c578063e02b94bc146101685761007d565b8063574b4c651461008257806363dde699146100b25780638da5cb5b146100e2575b600080fd5b61009c6004803603810190610097919061082f565b610184565b6040516100a9919061088a565b60405180910390f35b6100cc60048036038101906100c7919061082f565b61020a565b6040516100d9919061088a565b60405180910390f35b6100ea610290565b6040516100f791906108b4565b60405180910390f35b61011a60048036038101906101159190610905565b6102b4565b005b6101366004803603810190610131919061082f565b610446565b6040516101439190610967565b60405180910390f35b610166600480360381019061016191906109ae565b6104cc565b005b610182600480360381019061017d91906109ae565b61064c565b005b60008273ffffffffffffffffffffffffffffffffffffffff1663e985e9c533846040518363ffffffff1660e01b81526004016101c1929190610a01565b602060405180830381865afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610a3f565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663e985e9c533846040518363ffffffff1660e01b8152600401610247929190610a01565b602060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190610a3f565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561031e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610398929190610ae9565b6020604051808303816000875af11580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610a3f565b503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fe285444a44723385de85da4844cbb9105030b82a9300a3ffca99054d624c5e30836040516104399190610967565b60405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33846040518363ffffffff1660e01b8152600401610483929190610a01565b602060405180830381865afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610b27565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156105365750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a22cb46583836040518363ffffffff1660e01b81526004016105b0929190610b54565b600060405180830381600087803b1580156105ca57600080fd5b505af11580156105de573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff7f0f078848f27bd6bdf2b43e3dd43f4af481848aeba9d89e16df65b861402fe8360405161063f919061088a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156106b65750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b6106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90610ac9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a22cb46583836040518363ffffffff1660e01b8152600401610730929190610b54565b600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4cb534b21466cad791a2caf6e52051963bc1a4d3be4e73e82dd5191b14241336836040516107bf919061088a565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fc826107d1565b9050919050565b61080c816107f1565b811461081757600080fd5b50565b60008135905061082981610803565b92915050565b60008060408385031215610846576108456107cc565b5b60006108548582860161081a565b92505060206108658582860161081a565b9150509250929050565b60008115159050919050565b6108848161086f565b82525050565b600060208201905061089f600083018461087b565b92915050565b6108ae816107f1565b82525050565b60006020820190506108c960008301846108a5565b92915050565b6000819050919050565b6108e2816108cf565b81146108ed57600080fd5b50565b6000813590506108ff816108d9565b92915050565b60008060006060848603121561091e5761091d6107cc565b5b600061092c8682870161081a565b935050602061093d8682870161081a565b925050604061094e868287016108f0565b9150509250925092565b610961816108cf565b82525050565b600060208201905061097c6000830184610958565b92915050565b61098b8161086f565b811461099657600080fd5b50565b6000813590506109a881610982565b92915050565b6000806000606084860312156109c7576109c66107cc565b5b60006109d58682870161081a565b93505060206109e68682870161081a565b92505060406109f786828701610999565b9150509250925092565b6000604082019050610a1660008301856108a5565b610a2360208301846108a5565b9392505050565b600081519050610a3981610982565b92915050565b600060208284031215610a5557610a546107cc565b5b6000610a6384828501610a2a565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000610ab3600f83610a6c565b9150610abe82610a7d565b602082019050919050565b60006020820190508181036000830152610ae281610aa6565b9050919050565b6000604082019050610afe60008301856108a5565b610b0b6020830184610958565b9392505050565b600081519050610b21816108d9565b92915050565b600060208284031215610b3d57610b3c6107cc565b5b6000610b4b84828501610b12565b91505092915050565b6000604082019050610b6960008301856108a5565b610b76602083018461087b565b939250505056fea26469706673582212208de353304d2d23a6e82f197a64404d9b6c61537ab0ee4f332eea170cc4c394f764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8E5E4AA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8E5E4AA EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC4E22D52 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xD88C869B EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE02B94BC EQ PUSH2 0x168 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x574B4C65 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x63DDE699 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x905 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x247 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x354 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0xA3F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE285444A44723385DE85DA4844CBB9105030B82A9300A3FFCA99054D624C5E30 DUP4 PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP3 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x536 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B0 SWAP3 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F0F078848F27BD6BDF2B43E3DD43F4AF481848AEBA9D89E16DF65B861402FE DUP4 PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EC SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA22CB465 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4CB534B21466CAD791A2CAF6E52051963BC1A4D3BE4E73E82DD5191B14241336 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80C DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x829 DUP2 PUSH2 0x803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH2 0x845 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP6 DUP3 DUP7 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x865 DUP6 DUP3 DUP7 ADD PUSH2 0x81A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x86F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E2 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8FF DUP2 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92C DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x93D DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x94E DUP7 DUP3 DUP8 ADD PUSH2 0x8F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x97C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x98B DUP2 PUSH2 0x86F JUMP JUMPDEST DUP2 EQ PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A8 DUP2 PUSH2 0x982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D5 DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9E6 DUP7 DUP3 DUP8 ADD PUSH2 0x81A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F7 DUP7 DUP3 DUP8 ADD PUSH2 0x999 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xA23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA39 DUP2 PUSH2 0x982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH2 0xA54 PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA63 DUP5 DUP3 DUP6 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 PUSH1 0xF DUP4 PUSH2 0xA6C JUMP JUMPDEST SWAP2 POP PUSH2 0xABE DUP3 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAFE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x958 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB21 DUP2 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3D JUMPI PUSH2 0xB3C PUSH2 0x7CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB4B DUP5 DUP3 DUP6 ADD PUSH2 0xB12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB69 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0xB76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xE3 MSTORE8 ADDRESS 0x4D 0x2D 0x23 0xA6 0xE8 0x2F NOT PUSH27 0x64404D9B6C61537AB0EE4F332EEA170CC4C394F764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"628:1998:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2458:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1045:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1364:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1571:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2118:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1907:164;1990:4;2021:3;2013:29;;;2043:10;2055:8;2013:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:58;;1907:164;;;;:::o;2458:166::-;2542:4;2574:3;2565:30;;;2596:10;2608:8;2565:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2558:59;;2458:166;;;;:::o;655:20::-;;;;;;;;;;;;:::o;1045:271::-;1159:1;1142:19;;:5;:19;;;;:44;;;;;1184:1;1165:21;;:7;:21;;;;1142:44;1134:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1223:5;1216:21;;;1238:7;1247:6;1216:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1290:10;1269:40;;1283:5;1269:40;;;1302:6;1269:40;;;;;;:::i;:::-;;;;;;;;1045:271;;;:::o;1364:161::-;1448:7;1481:5;1474:23;;;1498:10;1510:7;1474:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1467:51;;1364:161;;;;:::o;1571:282::-;1682:1;1667:17;;:3;:17;;;;:43;;;;;1708:1;1688:22;;:8;:22;;;;1667:43;1659:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1748:3;1740:30;;;1771:8;1781;1740:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1825:10;1805:41;;1820:3;1805:41;;;1837:8;1805:41;;;;;;:::i;:::-;;;;;;;;1571:282;;;:::o;2118:285::-;2230:1;2215:17;;:3;:17;;;;:43;;;;;2256:1;2236:22;;:8;:22;;;;2215:43;2207:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2297:3;2288:31;;;2320:8;2330;2288:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2375:10;2354:42;;2370:3;2354:42;;;2387:8;2354:42;;;;;;:::i;:::-;;;;;;;;2118:285;;;:::o;88:117:31:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:90::-;1355:7;1398:5;1391:13;1384:21;1373:32;;1321:90;;;:::o;1417:109::-;1498:21;1513:5;1498:21;:::i;:::-;1493:3;1486:34;1417:109;;:::o;1532:210::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:65;1732:1;1721:9;1717:17;1708:6;1670:65;:::i;:::-;1532:210;;;;:::o;1748:118::-;1835:24;1853:5;1835:24;:::i;:::-;1830:3;1823:37;1748:118;;:::o;1872:222::-;1965:4;2003:2;1992:9;1988:18;1980:26;;2016:71;2084:1;2073:9;2069:17;2060:6;2016:71;:::i;:::-;1872:222;;;;:::o;2100:77::-;2137:7;2166:5;2155:16;;2100:77;;;:::o;2183:122::-;2256:24;2274:5;2256:24;:::i;:::-;2249:5;2246:35;2236:63;;2295:1;2292;2285:12;2236:63;2183:122;:::o;2311:139::-;2357:5;2395:6;2382:20;2373:29;;2411:33;2438:5;2411:33;:::i;:::-;2311:139;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:118::-;3168:24;3186:5;3168:24;:::i;:::-;3163:3;3156:37;3081:118;;:::o;3205:222::-;3298:4;3336:2;3325:9;3321:18;3313:26;;3349:71;3417:1;3406:9;3402:17;3393:6;3349:71;:::i;:::-;3205:222;;;;:::o;3433:116::-;3503:21;3518:5;3503:21;:::i;:::-;3496:5;3493:32;3483:60;;3539:1;3536;3529:12;3483:60;3433:116;:::o;3555:133::-;3598:5;3636:6;3623:20;3614:29;;3652:30;3676:5;3652:30;:::i;:::-;3555:133;;;;:::o;3694:613::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:50;4282:7;4273:6;4262:9;4258:22;4240:50;:::i;:::-;4230:60;;4185:115;3694:613;;;;;:::o;4313:332::-;4434:4;4472:2;4461:9;4457:18;4449:26;;4485:71;4553:1;4542:9;4538:17;4529:6;4485:71;:::i;:::-;4566:72;4634:2;4623:9;4619:18;4610:6;4566:72;:::i;:::-;4313:332;;;;;:::o;4651:137::-;4705:5;4736:6;4730:13;4721:22;;4752:30;4776:5;4752:30;:::i;:::-;4651:137;;;;:::o;4794:345::-;4861:6;4910:2;4898:9;4889:7;4885:23;4881:32;4878:119;;;4916:79;;:::i;:::-;4878:119;5036:1;5061:61;5114:7;5105:6;5094:9;5090:22;5061:61;:::i;:::-;5051:71;;5007:125;4794:345;;;;:::o;5145:169::-;5229:11;5263:6;5258:3;5251:19;5303:4;5298:3;5294:14;5279:29;;5145:169;;;;:::o;5320:165::-;5460:17;5456:1;5448:6;5444:14;5437:41;5320:165;:::o;5491:366::-;5633:3;5654:67;5718:2;5713:3;5654:67;:::i;:::-;5647:74;;5730:93;5819:3;5730:93;:::i;:::-;5848:2;5843:3;5839:12;5832:19;;5491:366;;;:::o;5863:419::-;6029:4;6067:2;6056:9;6052:18;6044:26;;6116:9;6110:4;6106:20;6102:1;6091:9;6087:17;6080:47;6144:131;6270:4;6144:131;:::i;:::-;6136:139;;5863:419;;;:::o;6288:332::-;6409:4;6447:2;6436:9;6432:18;6424:26;;6460:71;6528:1;6517:9;6513:17;6504:6;6460:71;:::i;:::-;6541:72;6609:2;6598:9;6594:18;6585:6;6541:72;:::i;:::-;6288:332;;;;;:::o;6626:143::-;6683:5;6714:6;6708:13;6699:22;;6730:33;6757:5;6730:33;:::i;:::-;6626:143;;;;:::o;6775:351::-;6845:6;6894:2;6882:9;6873:7;6869:23;6865:32;6862:119;;;6900:79;;:::i;:::-;6862:119;7020:1;7045:64;7101:7;7092:6;7081:9;7077:22;7045:64;:::i;:::-;7035:74;;6991:128;6775:351;;;;:::o;7132:320::-;7247:4;7285:2;7274:9;7270:18;7262:26;;7298:71;7366:1;7355:9;7351:17;7342:6;7298:71;:::i;:::-;7379:66;7441:2;7430:9;7426:18;7417:6;7379:66;:::i;:::-;7132:320;;;;;:::o"},"methodIdentifiers":{"approveERC1155(address,address,bool)":"e02b94bc","approveERC20(address,address,uint256)":"a8e5e4aa","approveERC721(address,address,bool)":"d88c869b","checkERC1155Approval(address,address)":"63dde699","checkERC20Allowance(address,address)":"c4e22d52","checkERC721Approval(address,address)":"574b4c65","owner()":"8da5cb5b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ERC1155Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ERC721Approved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approveERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approveERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"checkERC1155Approval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"checkERC20Allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"checkERC721Approval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockSpender.sol\":\"MockSpender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockSpender.sol\":{\"keccak256\":\"0xd126139a5bb734fae2cd2f2b76f911084556fdaa085689d40200362cefb4932c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b3e733399d0c868afa4da8bfc515e3e1d84a8a9ce4f0962de56b97140b2d8eb\",\"dweb:/ipfs/QmRjHmVRynV26H389stexdUJ4htKQKE44aXCEQPAuc1ifn\"]}},\"version\":1}"}},"contracts/TestERC1155.sol":{"TestERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_345":{"entryPoint":null,"id":345,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9657":{"entryPoint":null,"id":9657,"parameterSlots":1,"returnSlots":0},"@_asSingletonArrays_1200":{"entryPoint":707,"id":1200,"parameterSlots":2,"returnSlots":2},"@_mint_1014":{"entryPoint":535,"id":1014,"parameterSlots":4,"returnSlots":0},"@_msgSender_4274":{"entryPoint":1950,"id":4274,"parameterSlots":0,"returnSlots":1},"@_setURI_962":{"entryPoint":316,"id":962,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":337,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_830":{"entryPoint":755,"id":830,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":972,"id":750,"parameterSlots":4,"returnSlots":0},"@checkOnERC1155BatchReceived_1535":{"entryPoint":2429,"id":1535,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1461":{"entryPoint":1978,"id":1461,"parameterSlots":6,"returnSlots":0},"@unsafeMemoryAccess_4196":{"entryPoint":1958,"id":4196,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":4858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":4330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3036,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4931,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4688,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4009,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4475,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3964,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4297,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3240,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4269,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3082,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4356,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4280,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4545,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4133,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3561,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4788,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2885,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3376,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3522,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":3396,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3716,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4562,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3261,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3187,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3686,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":3386,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4192,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3654,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4086,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3140,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3093,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3436,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2880,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3277,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3641,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3290,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3446,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2937,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4832,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3489,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14311:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"759:80:31","statements":[{"nodeType":"YulAssignment","src":"769:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:31"},"nodeType":"YulFunctionCall","src":"778:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:31"},"nodeType":"YulFunctionCall","src":"800:33:31"},"nodeType":"YulExpressionStatement","src":"800:33:31"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:31","type":""}],"src":"696:143:31"},{"body":{"nodeType":"YulBlock","src":"922:274:31","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:31"},"nodeType":"YulFunctionCall","src":"970:79:31"},"nodeType":"YulExpressionStatement","src":"970:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:31"},"nodeType":"YulFunctionCall","src":"939:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:31"},"nodeType":"YulFunctionCall","src":"935:32:31"},"nodeType":"YulIf","src":"932:119:31"},{"nodeType":"YulBlock","src":"1061:128:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:31"},"nodeType":"YulFunctionCall","src":"1147:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:31"},"nodeType":"YulFunctionCall","src":"1115:64:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:31"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:31","type":""}],"src":"845:351:31"},{"body":{"nodeType":"YulBlock","src":"1267:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:31"},"nodeType":"YulFunctionCall","src":"1289:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:31"},"nodeType":"YulFunctionCall","src":"1277:37:31"},"nodeType":"YulExpressionStatement","src":"1277:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:31","type":""}],"src":"1202:118:31"},{"body":{"nodeType":"YulBlock","src":"1424:124:31","statements":[{"nodeType":"YulAssignment","src":"1434:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:31"},"nodeType":"YulFunctionCall","src":"1442:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:31"},"nodeType":"YulFunctionCall","src":"1523:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:31"},"nodeType":"YulFunctionCall","src":"1470:71:31"},"nodeType":"YulExpressionStatement","src":"1470:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:31","type":""}],"src":"1326:222:31"},{"body":{"nodeType":"YulBlock","src":"1613:40:31","statements":[{"nodeType":"YulAssignment","src":"1624:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1640:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1634:5:31"},"nodeType":"YulFunctionCall","src":"1634:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1624:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1596:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1606:6:31","type":""}],"src":"1554:99:31"},{"body":{"nodeType":"YulBlock","src":"1687:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1704:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1707:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1697:6:31"},"nodeType":"YulFunctionCall","src":"1697:88:31"},"nodeType":"YulExpressionStatement","src":"1697:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1804:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1794:6:31"},"nodeType":"YulFunctionCall","src":"1794:15:31"},"nodeType":"YulExpressionStatement","src":"1794:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1825:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1818:6:31"},"nodeType":"YulFunctionCall","src":"1818:15:31"},"nodeType":"YulExpressionStatement","src":"1818:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1659:180:31"},{"body":{"nodeType":"YulBlock","src":"1873:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1890:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1893:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:31"},"nodeType":"YulFunctionCall","src":"1883:88:31"},"nodeType":"YulExpressionStatement","src":"1883:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1987:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1990:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:31"},"nodeType":"YulFunctionCall","src":"1980:15:31"},"nodeType":"YulExpressionStatement","src":"1980:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2011:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2014:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2004:6:31"},"nodeType":"YulFunctionCall","src":"2004:15:31"},"nodeType":"YulExpressionStatement","src":"2004:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1845:180:31"},{"body":{"nodeType":"YulBlock","src":"2082:269:31","statements":[{"nodeType":"YulAssignment","src":"2092:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2106:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2112:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2102:3:31"},"nodeType":"YulFunctionCall","src":"2102:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2092:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"2123:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2153:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2149:3:31"},"nodeType":"YulFunctionCall","src":"2149:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2127:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2200:51:31","statements":[{"nodeType":"YulAssignment","src":"2214:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2228:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2224:3:31"},"nodeType":"YulFunctionCall","src":"2224:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2214:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2180:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2173:6:31"},"nodeType":"YulFunctionCall","src":"2173:26:31"},"nodeType":"YulIf","src":"2170:81:31"},{"body":{"nodeType":"YulBlock","src":"2303:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2317:16:31"},"nodeType":"YulFunctionCall","src":"2317:18:31"},"nodeType":"YulExpressionStatement","src":"2317:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2267:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2290:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2287:2:31"},"nodeType":"YulFunctionCall","src":"2287:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2264:2:31"},"nodeType":"YulFunctionCall","src":"2264:38:31"},"nodeType":"YulIf","src":"2261:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2066:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2075:6:31","type":""}],"src":"2031:320:31"},{"body":{"nodeType":"YulBlock","src":"2411:87:31","statements":[{"nodeType":"YulAssignment","src":"2421:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2429:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2421:4:31"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:31","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2452:3:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2442:6:31"},"nodeType":"YulFunctionCall","src":"2442:14:31"},"nodeType":"YulExpressionStatement","src":"2442:14:31"},{"nodeType":"YulAssignment","src":"2465:26:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2483:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2486:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2473:9:31"},"nodeType":"YulFunctionCall","src":"2473:18:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2465:4:31"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2398:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2406:4:31","type":""}],"src":"2357:141:31"},{"body":{"nodeType":"YulBlock","src":"2548:49:31","statements":[{"nodeType":"YulAssignment","src":"2558:33:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2576:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:31"},"nodeType":"YulFunctionCall","src":"2572:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"2588:2:31","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2568:3:31"},"nodeType":"YulFunctionCall","src":"2568:23:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2558:6:31"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2531:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2541:6:31","type":""}],"src":"2504:93:31"},{"body":{"nodeType":"YulBlock","src":"2656:54:31","statements":[{"nodeType":"YulAssignment","src":"2666:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2691:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"2697:5:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2687:3:31"},"nodeType":"YulFunctionCall","src":"2687:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2666:8:31"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2631:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"2637:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2647:8:31","type":""}],"src":"2603:107:31"},{"body":{"nodeType":"YulBlock","src":"2792:317:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2802:35:31","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2823:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"2835:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2819:3:31"},"nodeType":"YulFunctionCall","src":"2819:18:31"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2806:9:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2846:109:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2877:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2888:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2858:18:31"},"nodeType":"YulFunctionCall","src":"2858:97:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2850:4:31","type":""}]},{"nodeType":"YulAssignment","src":"2964:51:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2995:9:31"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3006:8:31"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2976:18:31"},"nodeType":"YulFunctionCall","src":"2976:39:31"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2964:8:31"}]},{"nodeType":"YulAssignment","src":"3024:30:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3037:5:31"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3048:4:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3044:3:31"},"nodeType":"YulFunctionCall","src":"3044:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3033:3:31"},"nodeType":"YulFunctionCall","src":"3033:21:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3024:5:31"}]},{"nodeType":"YulAssignment","src":"3063:40:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:31"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3087:8:31"},{"name":"mask","nodeType":"YulIdentifier","src":"3097:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3083:3:31"},"nodeType":"YulFunctionCall","src":"3083:19:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3073:2:31"},"nodeType":"YulFunctionCall","src":"3073:30:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3063:6:31"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2753:5:31","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2760:10:31","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2772:8:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2785:6:31","type":""}],"src":"2716:393:31"},{"body":{"nodeType":"YulBlock","src":"3160:32:31","statements":[{"nodeType":"YulAssignment","src":"3170:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3181:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3170:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3142:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3152:7:31","type":""}],"src":"3115:77:31"},{"body":{"nodeType":"YulBlock","src":"3230:28:31","statements":[{"nodeType":"YulAssignment","src":"3240:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3247:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3240:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3216:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3226:3:31","type":""}],"src":"3198:60:31"},{"body":{"nodeType":"YulBlock","src":"3324:82:31","statements":[{"nodeType":"YulAssignment","src":"3334:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3392:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3374:17:31"},"nodeType":"YulFunctionCall","src":"3374:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3365:8:31"},"nodeType":"YulFunctionCall","src":"3365:34:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3347:17:31"},"nodeType":"YulFunctionCall","src":"3347:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3334:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3304:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3314:9:31","type":""}],"src":"3264:142:31"},{"body":{"nodeType":"YulBlock","src":"3459:28:31","statements":[{"nodeType":"YulAssignment","src":"3469:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3476:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3469:3:31"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3445:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3455:3:31","type":""}],"src":"3412:75:31"},{"body":{"nodeType":"YulBlock","src":"3569:193:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3579:63:31","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3634:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3603:30:31"},"nodeType":"YulFunctionCall","src":"3603:39:31"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3583:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3658:4:31"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3698:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3692:5:31"},"nodeType":"YulFunctionCall","src":"3692:11:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3705:6:31"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3737:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3713:23:31"},"nodeType":"YulFunctionCall","src":"3713:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3664:27:31"},"nodeType":"YulFunctionCall","src":"3664:91:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3651:6:31"},"nodeType":"YulFunctionCall","src":"3651:105:31"},"nodeType":"YulExpressionStatement","src":"3651:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3546:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3552:6:31","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3560:7:31","type":""}],"src":"3493:269:31"},{"body":{"nodeType":"YulBlock","src":"3817:24:31","statements":[{"nodeType":"YulAssignment","src":"3827:8:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3834:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3827:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3813:3:31","type":""}],"src":"3768:73:31"},{"body":{"nodeType":"YulBlock","src":"3900:136:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3910:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3924:30:31"},"nodeType":"YulFunctionCall","src":"3924:32:31"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3914:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4009:4:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4015:6:31"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4023:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3965:43:31"},"nodeType":"YulFunctionCall","src":"3965:65:31"},"nodeType":"YulExpressionStatement","src":"3965:65:31"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3886:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3892:6:31","type":""}],"src":"3847:189:31"},{"body":{"nodeType":"YulBlock","src":"4092:136:31","statements":[{"body":{"nodeType":"YulBlock","src":"4159:63:31","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4203:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4210:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4173:29:31"},"nodeType":"YulFunctionCall","src":"4173:39:31"},"nodeType":"YulExpressionStatement","src":"4173:39:31"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4112:5:31"},{"name":"end","nodeType":"YulIdentifier","src":"4119:3:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4109:2:31"},"nodeType":"YulFunctionCall","src":"4109:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4124:26:31","statements":[{"nodeType":"YulAssignment","src":"4126:22:31","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4139:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4135:3:31"},"nodeType":"YulFunctionCall","src":"4135:13:31"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4126:5:31"}]}]},"pre":{"nodeType":"YulBlock","src":"4106:2:31","statements":[]},"src":"4102:120:31"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4080:5:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4087:3:31","type":""}],"src":"4042:186:31"},{"body":{"nodeType":"YulBlock","src":"4313:464:31","statements":[{"body":{"nodeType":"YulBlock","src":"4339:431:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4353:54:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4401:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4369:31:31"},"nodeType":"YulFunctionCall","src":"4369:38:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4357:8:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4420:63:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4443:8:31"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4471:10:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4453:17:31"},"nodeType":"YulFunctionCall","src":"4453:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:31"},"nodeType":"YulFunctionCall","src":"4439:44:31"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4424:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4640:27:31","statements":[{"nodeType":"YulAssignment","src":"4642:23:31","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4657:8:31"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4642:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4624:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"4636:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4621:2:31"},"nodeType":"YulFunctionCall","src":"4621:18:31"},"nodeType":"YulIf","src":"4618:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4709:11:31"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4726:8:31"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4754:3:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4736:17:31"},"nodeType":"YulFunctionCall","src":"4736:22:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:31"},"nodeType":"YulFunctionCall","src":"4722:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4680:28:31"},"nodeType":"YulFunctionCall","src":"4680:80:31"},"nodeType":"YulExpressionStatement","src":"4680:80:31"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4330:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"4335:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4327:2:31"},"nodeType":"YulFunctionCall","src":"4327:11:31"},"nodeType":"YulIf","src":"4324:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4289:5:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"4296:3:31","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4301:10:31","type":""}],"src":"4234:543:31"},{"body":{"nodeType":"YulBlock","src":"4846:54:31","statements":[{"nodeType":"YulAssignment","src":"4856:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4881:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"4887:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4877:3:31"},"nodeType":"YulFunctionCall","src":"4877:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4856:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4821:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"4827:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4837:8:31","type":""}],"src":"4783:117:31"},{"body":{"nodeType":"YulBlock","src":"4957:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4967:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5016:1:31","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5019:5:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5012:3:31"},"nodeType":"YulFunctionCall","src":"5012:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5031:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5027:3:31"},"nodeType":"YulFunctionCall","src":"5027:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4983:28:31"},"nodeType":"YulFunctionCall","src":"4983:51:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4979:3:31"},"nodeType":"YulFunctionCall","src":"4979:56:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4971:4:31","type":""}]},{"nodeType":"YulAssignment","src":"5044:25:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5058:4:31"},{"name":"mask","nodeType":"YulIdentifier","src":"5064:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5054:3:31"},"nodeType":"YulFunctionCall","src":"5054:15:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5044:6:31"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4934:4:31","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4940:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4950:6:31","type":""}],"src":"4906:169:31"},{"body":{"nodeType":"YulBlock","src":"5161:214:31","statements":[{"nodeType":"YulAssignment","src":"5294:37:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5321:4:31"},{"name":"len","nodeType":"YulIdentifier","src":"5327:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5302:18:31"},"nodeType":"YulFunctionCall","src":"5302:29:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5294:4:31"}]},{"nodeType":"YulAssignment","src":"5340:29:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5351:4:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5361:1:31","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5364:3:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5357:3:31"},"nodeType":"YulFunctionCall","src":"5357:11:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5348:2:31"},"nodeType":"YulFunctionCall","src":"5348:21:31"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5340:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5142:4:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"5148:3:31","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5156:4:31","type":""}],"src":"5080:295:31"},{"body":{"nodeType":"YulBlock","src":"5472:1303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5483:51:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5530:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5497:32:31"},"nodeType":"YulFunctionCall","src":"5497:37:31"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5487:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5619:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5621:16:31"},"nodeType":"YulFunctionCall","src":"5621:18:31"},"nodeType":"YulExpressionStatement","src":"5621:18:31"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5591:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5599:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5588:2:31"},"nodeType":"YulFunctionCall","src":"5588:30:31"},"nodeType":"YulIf","src":"5585:56:31"},{"nodeType":"YulVariableDeclaration","src":"5651:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5697:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5691:5:31"},"nodeType":"YulFunctionCall","src":"5691:11:31"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5665:25:31"},"nodeType":"YulFunctionCall","src":"5665:38:31"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5655:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5796:4:31"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5802:6:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"5810:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5750:45:31"},"nodeType":"YulFunctionCall","src":"5750:67:31"},"nodeType":"YulExpressionStatement","src":"5750:67:31"},{"nodeType":"YulVariableDeclaration","src":"5827:18:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5831:9:31","type":""}]},{"nodeType":"YulAssignment","src":"5855:17:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5868:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5855:9:31"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5919:611:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5933:37:31","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5952:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5964:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5960:3:31"},"nodeType":"YulFunctionCall","src":"5960:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5948:3:31"},"nodeType":"YulFunctionCall","src":"5948:22:31"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5937:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5984:51:31","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6030:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5998:31:31"},"nodeType":"YulFunctionCall","src":"5998:37:31"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5988:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6048:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6057:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6052:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6116:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6141:6:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6159:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6164:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:31"},"nodeType":"YulFunctionCall","src":"6155:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6149:5:31"},"nodeType":"YulFunctionCall","src":"6149:26:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6134:6:31"},"nodeType":"YulFunctionCall","src":"6134:42:31"},"nodeType":"YulExpressionStatement","src":"6134:42:31"},{"nodeType":"YulAssignment","src":"6193:24:31","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6207:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6215:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:31"},"nodeType":"YulFunctionCall","src":"6203:14:31"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6193:6:31"}]},{"nodeType":"YulAssignment","src":"6234:31:31","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6251:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6247:3:31"},"nodeType":"YulFunctionCall","src":"6247:18:31"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6234:9:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6082:1:31"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6085:7:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6079:2:31"},"nodeType":"YulFunctionCall","src":"6079:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6094:21:31","statements":[{"nodeType":"YulAssignment","src":"6096:17:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6105:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"6108:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:31"},"nodeType":"YulFunctionCall","src":"6101:12:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6096:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6075:3:31","statements":[]},"src":"6071:208:31"},{"body":{"nodeType":"YulBlock","src":"6315:156:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6333:43:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6360:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6365:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6356:3:31"},"nodeType":"YulFunctionCall","src":"6356:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6350:5:31"},"nodeType":"YulFunctionCall","src":"6350:26:31"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6337:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6400:6:31"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6427:9:31"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6442:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6450:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6438:3:31"},"nodeType":"YulFunctionCall","src":"6438:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6408:18:31"},"nodeType":"YulFunctionCall","src":"6408:48:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6393:6:31"},"nodeType":"YulFunctionCall","src":"6393:64:31"},"nodeType":"YulExpressionStatement","src":"6393:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6298:7:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6307:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6295:2:31"},"nodeType":"YulFunctionCall","src":"6295:19:31"},"nodeType":"YulIf","src":"6292:179:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6491:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6505:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6513:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6501:3:31"},"nodeType":"YulFunctionCall","src":"6501:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"6517:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:31"},"nodeType":"YulFunctionCall","src":"6497:22:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6484:6:31"},"nodeType":"YulFunctionCall","src":"6484:36:31"},"nodeType":"YulExpressionStatement","src":"6484:36:31"}]},"nodeType":"YulCase","src":"5912:618:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5917:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6547:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6561:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6574:1:31","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6565:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6598:67:31","statements":[{"nodeType":"YulAssignment","src":"6616:35:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6635:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6640:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6631:3:31"},"nodeType":"YulFunctionCall","src":"6631:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6625:5:31"},"nodeType":"YulFunctionCall","src":"6625:26:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6616:5:31"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6591:6:31"},"nodeType":"YulIf","src":"6588:77:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6685:4:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6744:5:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"6751:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6691:52:31"},"nodeType":"YulFunctionCall","src":"6691:67:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6678:6:31"},"nodeType":"YulFunctionCall","src":"6678:81:31"},"nodeType":"YulExpressionStatement","src":"6678:81:31"}]},"nodeType":"YulCase","src":"6539:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5892:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5900:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5889:2:31"},"nodeType":"YulFunctionCall","src":"5889:14:31"},"nodeType":"YulSwitch","src":"5882:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5461:4:31","type":""},{"name":"src","nodeType":"YulTypedName","src":"5467:3:31","type":""}],"src":"5380:1395:31"},{"body":{"nodeType":"YulBlock","src":"6846:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6863:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6886:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6868:17:31"},"nodeType":"YulFunctionCall","src":"6868:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6856:6:31"},"nodeType":"YulFunctionCall","src":"6856:37:31"},"nodeType":"YulExpressionStatement","src":"6856:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6834:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6841:3:31","type":""}],"src":"6781:118:31"},{"body":{"nodeType":"YulBlock","src":"7031:206:31","statements":[{"nodeType":"YulAssignment","src":"7041:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7053:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7064:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7049:3:31"},"nodeType":"YulFunctionCall","src":"7049:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7041:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7121:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7134:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7145:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7130:3:31"},"nodeType":"YulFunctionCall","src":"7130:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7077:43:31"},"nodeType":"YulFunctionCall","src":"7077:71:31"},"nodeType":"YulExpressionStatement","src":"7077:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7202:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7215:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7226:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7211:3:31"},"nodeType":"YulFunctionCall","src":"7211:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7158:43:31"},"nodeType":"YulFunctionCall","src":"7158:72:31"},"nodeType":"YulExpressionStatement","src":"7158:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6995:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7007:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7015:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7026:4:31","type":""}],"src":"6905:332:31"},{"body":{"nodeType":"YulBlock","src":"7425:371:31","statements":[{"nodeType":"YulAssignment","src":"7435:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7447:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7458:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7443:3:31"},"nodeType":"YulFunctionCall","src":"7443:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7435:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7516:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7529:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7540:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7525:3:31"},"nodeType":"YulFunctionCall","src":"7525:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7472:43:31"},"nodeType":"YulFunctionCall","src":"7472:71:31"},"nodeType":"YulExpressionStatement","src":"7472:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7597:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7610:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7621:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7606:3:31"},"nodeType":"YulFunctionCall","src":"7606:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7553:43:31"},"nodeType":"YulFunctionCall","src":"7553:72:31"},"nodeType":"YulExpressionStatement","src":"7553:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7679:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7692:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7703:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7688:3:31"},"nodeType":"YulFunctionCall","src":"7688:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7635:43:31"},"nodeType":"YulFunctionCall","src":"7635:72:31"},"nodeType":"YulExpressionStatement","src":"7635:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7761:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7774:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7785:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:31"},"nodeType":"YulFunctionCall","src":"7770:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7717:43:31"},"nodeType":"YulFunctionCall","src":"7717:72:31"},"nodeType":"YulExpressionStatement","src":"7717:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7373:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7385:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7393:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7401:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7409:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7420:4:31","type":""}],"src":"7243:553:31"},{"body":{"nodeType":"YulBlock","src":"7830:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7847:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7850:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7840:6:31"},"nodeType":"YulFunctionCall","src":"7840:88:31"},"nodeType":"YulExpressionStatement","src":"7840:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7944:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7947:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:31"},"nodeType":"YulFunctionCall","src":"7937:15:31"},"nodeType":"YulExpressionStatement","src":"7937:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7968:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7971:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7961:6:31"},"nodeType":"YulFunctionCall","src":"7961:15:31"},"nodeType":"YulExpressionStatement","src":"7961:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7802:180:31"},{"body":{"nodeType":"YulBlock","src":"8032:147:31","statements":[{"nodeType":"YulAssignment","src":"8042:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8065:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8047:17:31"},"nodeType":"YulFunctionCall","src":"8047:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8042:1:31"}]},{"nodeType":"YulAssignment","src":"8076:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8099:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8081:17:31"},"nodeType":"YulFunctionCall","src":"8081:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8076:1:31"}]},{"nodeType":"YulAssignment","src":"8110:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8121:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"8124:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8117:3:31"},"nodeType":"YulFunctionCall","src":"8117:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8110:3:31"}]},{"body":{"nodeType":"YulBlock","src":"8150:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8152:16:31"},"nodeType":"YulFunctionCall","src":"8152:18:31"},"nodeType":"YulExpressionStatement","src":"8152:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8142:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"8145:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8139:2:31"},"nodeType":"YulFunctionCall","src":"8139:10:31"},"nodeType":"YulIf","src":"8136:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8019:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"8022:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8028:3:31","type":""}],"src":"7988:191:31"},{"body":{"nodeType":"YulBlock","src":"8228:190:31","statements":[{"nodeType":"YulAssignment","src":"8238:33:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8265:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8247:17:31"},"nodeType":"YulFunctionCall","src":"8247:24:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8238:5:31"}]},{"body":{"nodeType":"YulBlock","src":"8361:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8363:16:31"},"nodeType":"YulFunctionCall","src":"8363:18:31"},"nodeType":"YulExpressionStatement","src":"8363:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8286:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8293:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8283:2:31"},"nodeType":"YulFunctionCall","src":"8283:77:31"},"nodeType":"YulIf","src":"8280:103:31"},{"nodeType":"YulAssignment","src":"8392:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8403:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8410:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8399:3:31"},"nodeType":"YulFunctionCall","src":"8399:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8392:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8214:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8224:3:31","type":""}],"src":"8185:233:31"},{"body":{"nodeType":"YulBlock","src":"8498:40:31","statements":[{"nodeType":"YulAssignment","src":"8509:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8525:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8519:5:31"},"nodeType":"YulFunctionCall","src":"8519:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8509:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8481:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8491:6:31","type":""}],"src":"8424:114:31"},{"body":{"nodeType":"YulBlock","src":"8655:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8672:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8677:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8665:6:31"},"nodeType":"YulFunctionCall","src":"8665:19:31"},"nodeType":"YulExpressionStatement","src":"8665:19:31"},{"nodeType":"YulAssignment","src":"8693:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8712:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8717:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8708:3:31"},"nodeType":"YulFunctionCall","src":"8708:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8693:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8627:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8632:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8643:11:31","type":""}],"src":"8544:184:31"},{"body":{"nodeType":"YulBlock","src":"8806:60:31","statements":[{"nodeType":"YulAssignment","src":"8816:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8824:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8816:4:31"}]},{"nodeType":"YulAssignment","src":"8837:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8849:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8854:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8845:3:31"},"nodeType":"YulFunctionCall","src":"8845:14:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8837:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8793:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8801:4:31","type":""}],"src":"8734:132:31"},{"body":{"nodeType":"YulBlock","src":"8927:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8944:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8967:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8949:17:31"},"nodeType":"YulFunctionCall","src":"8949:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8937:6:31"},"nodeType":"YulFunctionCall","src":"8937:37:31"},"nodeType":"YulExpressionStatement","src":"8937:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8915:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8922:3:31","type":""}],"src":"8872:108:31"},{"body":{"nodeType":"YulBlock","src":"9066:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9110:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"9118:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9076:33:31"},"nodeType":"YulFunctionCall","src":"9076:46:31"},"nodeType":"YulExpressionStatement","src":"9076:46:31"},{"nodeType":"YulAssignment","src":"9131:28:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9149:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"9154:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9145:3:31"},"nodeType":"YulFunctionCall","src":"9145:14:31"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9131:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9039:6:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9047:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9055:10:31","type":""}],"src":"8986:179:31"},{"body":{"nodeType":"YulBlock","src":"9246:38:31","statements":[{"nodeType":"YulAssignment","src":"9256:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9268:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"9273:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9264:3:31"},"nodeType":"YulFunctionCall","src":"9264:14:31"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9256:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9233:3:31","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9241:4:31","type":""}],"src":"9171:113:31"},{"body":{"nodeType":"YulBlock","src":"9444:608:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9454:68:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9516:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9468:47:31"},"nodeType":"YulFunctionCall","src":"9468:54:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9458:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9531:93:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9612:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"9617:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9538:73:31"},"nodeType":"YulFunctionCall","src":"9538:86:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9531:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"9633:71:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9698:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9648:49:31"},"nodeType":"YulFunctionCall","src":"9648:56:31"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9637:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9713:21:31","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9727:7:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9717:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9803:224:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9817:34:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9844:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9838:5:31"},"nodeType":"YulFunctionCall","src":"9838:13:31"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9821:13:31","type":""}]},{"nodeType":"YulAssignment","src":"9864:70:31","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9915:13:31"},{"name":"pos","nodeType":"YulIdentifier","src":"9930:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9871:43:31"},"nodeType":"YulFunctionCall","src":"9871:63:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9864:3:31"}]},{"nodeType":"YulAssignment","src":"9947:70:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10010:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9957:52:31"},"nodeType":"YulFunctionCall","src":"9957:60:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9947:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9765:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"9768:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9762:2:31"},"nodeType":"YulFunctionCall","src":"9762:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9776:18:31","statements":[{"nodeType":"YulAssignment","src":"9778:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9787:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"9790:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9783:3:31"},"nodeType":"YulFunctionCall","src":"9783:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9778:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"9747:14:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9758:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9753:1:31","type":""}]}]},"src":"9743:284:31"},{"nodeType":"YulAssignment","src":"10036:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"10043:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10036:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9423:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9430:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9439:3:31","type":""}],"src":"9320:732:31"},{"body":{"nodeType":"YulBlock","src":"10284:408:31","statements":[{"nodeType":"YulAssignment","src":"10294:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10317:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10302:3:31"},"nodeType":"YulFunctionCall","src":"10302:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10294:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10341:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10352:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10337:3:31"},"nodeType":"YulFunctionCall","src":"10337:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10360:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"10366:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10356:3:31"},"nodeType":"YulFunctionCall","src":"10356:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10330:6:31"},"nodeType":"YulFunctionCall","src":"10330:47:31"},"nodeType":"YulExpressionStatement","src":"10330:47:31"},{"nodeType":"YulAssignment","src":"10386:116:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10488:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"10497:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10394:93:31"},"nodeType":"YulFunctionCall","src":"10394:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10386:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10523:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10534:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10519:3:31"},"nodeType":"YulFunctionCall","src":"10519:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10543:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"10549:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10539:3:31"},"nodeType":"YulFunctionCall","src":"10539:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10512:6:31"},"nodeType":"YulFunctionCall","src":"10512:48:31"},"nodeType":"YulExpressionStatement","src":"10512:48:31"},{"nodeType":"YulAssignment","src":"10569:116:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10671:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"10680:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10577:93:31"},"nodeType":"YulFunctionCall","src":"10577:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10569:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10248:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10260:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10268:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10279:4:31","type":""}],"src":"10058:634:31"},{"body":{"nodeType":"YulBlock","src":"10756:40:31","statements":[{"nodeType":"YulAssignment","src":"10767:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10783:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10777:5:31"},"nodeType":"YulFunctionCall","src":"10777:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10767:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10739:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10749:6:31","type":""}],"src":"10698:98:31"},{"body":{"nodeType":"YulBlock","src":"10897:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10914:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"10919:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10907:6:31"},"nodeType":"YulFunctionCall","src":"10907:19:31"},"nodeType":"YulExpressionStatement","src":"10907:19:31"},{"nodeType":"YulAssignment","src":"10935:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10954:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"10959:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10950:3:31"},"nodeType":"YulFunctionCall","src":"10950:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10935:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10869:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"10874:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10885:11:31","type":""}],"src":"10802:168:31"},{"body":{"nodeType":"YulBlock","src":"11038:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11048:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"11057:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11052:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11117:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11142:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"11147:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11138:3:31"},"nodeType":"YulFunctionCall","src":"11138:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11161:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"11166:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11157:3:31"},"nodeType":"YulFunctionCall","src":"11157:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11151:5:31"},"nodeType":"YulFunctionCall","src":"11151:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11131:6:31"},"nodeType":"YulFunctionCall","src":"11131:39:31"},"nodeType":"YulExpressionStatement","src":"11131:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11078:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"11081:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11075:2:31"},"nodeType":"YulFunctionCall","src":"11075:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11089:19:31","statements":[{"nodeType":"YulAssignment","src":"11091:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11100:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"11103:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11096:3:31"},"nodeType":"YulFunctionCall","src":"11096:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11091:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"11071:3:31","statements":[]},"src":"11067:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11200:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11205:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11196:3:31"},"nodeType":"YulFunctionCall","src":"11196:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"11214:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11189:6:31"},"nodeType":"YulFunctionCall","src":"11189:27:31"},"nodeType":"YulExpressionStatement","src":"11189:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11020:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11025:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"11030:6:31","type":""}],"src":"10976:246:31"},{"body":{"nodeType":"YulBlock","src":"11276:54:31","statements":[{"nodeType":"YulAssignment","src":"11286:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11304:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11311:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11300:3:31"},"nodeType":"YulFunctionCall","src":"11300:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11320:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11316:3:31"},"nodeType":"YulFunctionCall","src":"11316:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11296:3:31"},"nodeType":"YulFunctionCall","src":"11296:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11286:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11259:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11269:6:31","type":""}],"src":"11228:102:31"},{"body":{"nodeType":"YulBlock","src":"11426:283:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11436:52:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11482:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11450:31:31"},"nodeType":"YulFunctionCall","src":"11450:38:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11440:6:31","type":""}]},{"nodeType":"YulAssignment","src":"11497:77:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11562:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11567:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11504:57:31"},"nodeType":"YulFunctionCall","src":"11504:70:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11497:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11622:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11629:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11618:3:31"},"nodeType":"YulFunctionCall","src":"11618:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"11636:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11641:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11583:34:31"},"nodeType":"YulFunctionCall","src":"11583:65:31"},"nodeType":"YulExpressionStatement","src":"11583:65:31"},{"nodeType":"YulAssignment","src":"11657:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11668:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11695:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11673:21:31"},"nodeType":"YulFunctionCall","src":"11673:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:31"},"nodeType":"YulFunctionCall","src":"11664:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11657:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11407:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11414:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11422:3:31","type":""}],"src":"11336:373:31"},{"body":{"nodeType":"YulBlock","src":"11943:523:31","statements":[{"nodeType":"YulAssignment","src":"11953:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11965:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11976:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11961:3:31"},"nodeType":"YulFunctionCall","src":"11961:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11953:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12034:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12047:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12058:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12043:3:31"},"nodeType":"YulFunctionCall","src":"12043:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11990:43:31"},"nodeType":"YulFunctionCall","src":"11990:71:31"},"nodeType":"YulExpressionStatement","src":"11990:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12115:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12128:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12139:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12124:3:31"},"nodeType":"YulFunctionCall","src":"12124:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12071:43:31"},"nodeType":"YulFunctionCall","src":"12071:72:31"},"nodeType":"YulExpressionStatement","src":"12071:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12197:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12210:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12221:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:31"},"nodeType":"YulFunctionCall","src":"12206:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12153:43:31"},"nodeType":"YulFunctionCall","src":"12153:72:31"},"nodeType":"YulExpressionStatement","src":"12153:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12279:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12292:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12303:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12288:3:31"},"nodeType":"YulFunctionCall","src":"12288:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12235:43:31"},"nodeType":"YulFunctionCall","src":"12235:72:31"},"nodeType":"YulExpressionStatement","src":"12235:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12328:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12339:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12324:3:31"},"nodeType":"YulFunctionCall","src":"12324:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12349:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12355:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12345:3:31"},"nodeType":"YulFunctionCall","src":"12345:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12317:6:31"},"nodeType":"YulFunctionCall","src":"12317:49:31"},"nodeType":"YulExpressionStatement","src":"12317:49:31"},{"nodeType":"YulAssignment","src":"12375:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12445:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"12454:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12383:61:31"},"nodeType":"YulFunctionCall","src":"12383:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12375:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11883:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11895:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11903:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11911:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11919:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11927:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11938:4:31","type":""}],"src":"11715:751:31"},{"body":{"nodeType":"YulBlock","src":"12516:105:31","statements":[{"nodeType":"YulAssignment","src":"12526:89:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12541:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"12548:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12537:3:31"},"nodeType":"YulFunctionCall","src":"12537:78:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12526:7:31"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12498:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12508:7:31","type":""}],"src":"12472:149:31"},{"body":{"nodeType":"YulBlock","src":"12669:78:31","statements":[{"body":{"nodeType":"YulBlock","src":"12725:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12734:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12737:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12727:6:31"},"nodeType":"YulFunctionCall","src":"12727:12:31"},"nodeType":"YulExpressionStatement","src":"12727:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12692:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12716:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"12699:16:31"},"nodeType":"YulFunctionCall","src":"12699:23:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12689:2:31"},"nodeType":"YulFunctionCall","src":"12689:34:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12682:6:31"},"nodeType":"YulFunctionCall","src":"12682:42:31"},"nodeType":"YulIf","src":"12679:62:31"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12662:5:31","type":""}],"src":"12627:120:31"},{"body":{"nodeType":"YulBlock","src":"12815:79:31","statements":[{"nodeType":"YulAssignment","src":"12825:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12840:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12834:5:31"},"nodeType":"YulFunctionCall","src":"12834:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12825:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12882:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"12856:25:31"},"nodeType":"YulFunctionCall","src":"12856:32:31"},"nodeType":"YulExpressionStatement","src":"12856:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12793:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"12801:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12809:5:31","type":""}],"src":"12753:141:31"},{"body":{"nodeType":"YulBlock","src":"12976:273:31","statements":[{"body":{"nodeType":"YulBlock","src":"13022:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13024:77:31"},"nodeType":"YulFunctionCall","src":"13024:79:31"},"nodeType":"YulExpressionStatement","src":"13024:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12997:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12993:3:31"},"nodeType":"YulFunctionCall","src":"12993:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"13018:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12989:3:31"},"nodeType":"YulFunctionCall","src":"12989:32:31"},"nodeType":"YulIf","src":"12986:119:31"},{"nodeType":"YulBlock","src":"13115:127:31","statements":[{"nodeType":"YulVariableDeclaration","src":"13130:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"13144:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13134:6:31","type":""}]},{"nodeType":"YulAssignment","src":"13159:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13204:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"13215:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13200:3:31"},"nodeType":"YulFunctionCall","src":"13200:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13224:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"13169:30:31"},"nodeType":"YulFunctionCall","src":"13169:63:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13159:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12946:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12957:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12969:6:31","type":""}],"src":"12900:349:31"},{"body":{"nodeType":"YulBlock","src":"13583:725:31","statements":[{"nodeType":"YulAssignment","src":"13593:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13605:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13616:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13601:3:31"},"nodeType":"YulFunctionCall","src":"13601:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13593:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13674:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13687:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13698:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13683:3:31"},"nodeType":"YulFunctionCall","src":"13683:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13630:43:31"},"nodeType":"YulFunctionCall","src":"13630:71:31"},"nodeType":"YulExpressionStatement","src":"13630:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13755:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13768:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13779:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13764:3:31"},"nodeType":"YulFunctionCall","src":"13764:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13711:43:31"},"nodeType":"YulFunctionCall","src":"13711:72:31"},"nodeType":"YulExpressionStatement","src":"13711:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13804:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13815:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13800:3:31"},"nodeType":"YulFunctionCall","src":"13800:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13824:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"13830:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13820:3:31"},"nodeType":"YulFunctionCall","src":"13820:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13793:6:31"},"nodeType":"YulFunctionCall","src":"13793:48:31"},"nodeType":"YulExpressionStatement","src":"13793:48:31"},{"nodeType":"YulAssignment","src":"13850:116:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13952:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"13961:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13858:93:31"},"nodeType":"YulFunctionCall","src":"13858:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13850:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13987:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13998:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13983:3:31"},"nodeType":"YulFunctionCall","src":"13983:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14007:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14003:3:31"},"nodeType":"YulFunctionCall","src":"14003:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13976:6:31"},"nodeType":"YulFunctionCall","src":"13976:48:31"},"nodeType":"YulExpressionStatement","src":"13976:48:31"},{"nodeType":"YulAssignment","src":"14033:116:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14135:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"14144:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14041:93:31"},"nodeType":"YulFunctionCall","src":"14041:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14033:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14170:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14181:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14166:3:31"},"nodeType":"YulFunctionCall","src":"14166:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14191:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14197:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14187:3:31"},"nodeType":"YulFunctionCall","src":"14187:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14159:6:31"},"nodeType":"YulFunctionCall","src":"14159:49:31"},"nodeType":"YulExpressionStatement","src":"14159:49:31"},{"nodeType":"YulAssignment","src":"14217:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14287:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"14296:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14225:61:31"},"nodeType":"YulFunctionCall","src":"14225:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14217:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13523:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13535:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13543:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13551:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13559:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13567:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13578:4:31","type":""}],"src":"13255:1053:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200371238038062003712833981810160405281019062000037919062000baa565b806040518060600160405280602a8152602001620036e8602a913962000063816200013c60201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000d0919062000bed565b60405180910390fd5b620000ea816200015160201b60201c565b50620001108160016064604051806020016040528060008152506200021760201b60201c565b620001358160026032604051806020016040528060008152506200021760201b60201c565b50620013b5565b80600290816200014d919062000e84565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036200028c5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000283919062000bed565b60405180910390fd5b600080620002a18585620002c360201b60201c565b91509150620002bb600087848487620002f360201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6200030785858585620003cc60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620003c55760006200034e6200079e60201b60201c565b90506001845103620003ac57600062000372600086620007a660201b90919060201c565b905060006200038c600086620007a660201b90919060201c565b9050620003a4838989858589620007ba60201b60201c565b5050620003c3565b620003c28187878787876200097d60201b60201c565b5b505b5050505050565b80518251146200041957815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016200041092919062000f7c565b60405180910390fd5b60006200042b6200079e60201b60201c565b905060005b83518110156200064f576000620004518286620007a660201b90919060201c565b905060006200046a8386620007a660201b90919060201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146200059b57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200054357888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016200053a949392919062000fa9565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161462000639578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000631919062001025565b925050819055505b505080620006479062001060565b905062000430565b5060018351036200071657600062000672600085620007a660201b90919060201c565b905060006200068c600085620007a660201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516200070692919062000f7c565b60405180910390a4505062000797565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516200078e9291906200117b565b60405180910390a45b5050505050565b600033905090565b600060208202602084010151905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000975578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016200081e95949392919062001250565b6020604051808303816000875af19250505080156200085d57506040513d601f19601f820116820180604052508101906200085a919062001311565b60015b620008e7573d806000811462000890576040519150601f19603f3d011682016040523d82523d6000602084013e62000895565b606091505b506000815103620008df57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401620008d6919062000bed565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146200097357846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016200096a919062000bed565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111562000b38578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401620009e195949392919062001343565b6020604051808303816000875af192505050801562000a2057506040513d601f19601f8201168201806040525081019062000a1d919062001311565b60015b62000aaa573d806000811462000a53576040519150601f19603f3d011682016040523d82523d6000602084013e62000a58565b606091505b50600081510362000aa257846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000a99919062000bed565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161462000b3657846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040162000b2d919062000bed565b60405180910390fd5b505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000b728262000b45565b9050919050565b62000b848162000b65565b811462000b9057600080fd5b50565b60008151905062000ba48162000b79565b92915050565b60006020828403121562000bc35762000bc262000b40565b5b600062000bd38482850162000b93565b91505092915050565b62000be78162000b65565b82525050565b600060208201905062000c04600083018462000bdc565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000c8c57607f821691505b60208210810362000ca25762000ca162000c44565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000d0c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000ccd565b62000d18868362000ccd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000d6562000d5f62000d598462000d30565b62000d3a565b62000d30565b9050919050565b6000819050919050565b62000d818362000d44565b62000d9962000d908262000d6c565b84845462000cda565b825550505050565b600090565b62000db062000da1565b62000dbd81848462000d76565b505050565b5b8181101562000de55762000dd960008262000da6565b60018101905062000dc3565b5050565b601f82111562000e345762000dfe8162000ca8565b62000e098462000cbd565b8101602085101562000e19578190505b62000e3162000e288562000cbd565b83018262000dc2565b50505b505050565b600082821c905092915050565b600062000e596000198460080262000e39565b1980831691505092915050565b600062000e74838362000e46565b9150826002028217905092915050565b62000e8f8262000c0a565b67ffffffffffffffff81111562000eab5762000eaa62000c15565b5b62000eb7825462000c73565b62000ec482828562000de9565b600060209050601f83116001811462000efc576000841562000ee7578287015190505b62000ef3858262000e66565b86555062000f63565b601f19841662000f0c8662000ca8565b60005b8281101562000f365784890151825560018201915060208501945060208101905062000f0f565b8683101562000f56578489015162000f52601f89168262000e46565b8355505b6001600288020188555050505b505050505050565b62000f768162000d30565b82525050565b600060408201905062000f93600083018562000f6b565b62000fa2602083018462000f6b565b9392505050565b600060808201905062000fc0600083018762000bdc565b62000fcf602083018662000f6b565b62000fde604083018562000f6b565b62000fed606083018462000f6b565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620010328262000d30565b91506200103f8362000d30565b92508282019050808211156200105a576200105962000ff6565b5b92915050565b60006200106d8262000d30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620010a257620010a162000ff6565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620010e48162000d30565b82525050565b6000620010f88383620010d9565b60208301905092915050565b6000602082019050919050565b60006200111e82620010ad565b6200112a8185620010b8565b93506200113783620010c9565b8060005b838110156200116e578151620011528882620010ea565b97506200115f8362001104565b9250506001810190506200113b565b5085935050505092915050565b6000604082019050818103600083015262001197818562001111565b90508181036020830152620011ad818462001111565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620011f2578082015181840152602081019050620011d5565b60008484015250505050565b6000601f19601f8301169050919050565b60006200121c82620011b6565b620012288185620011c1565b93506200123a818560208601620011d2565b6200124581620011fe565b840191505092915050565b600060a08201905062001267600083018862000bdc565b62001276602083018762000bdc565b62001285604083018662000f6b565b62001294606083018562000f6b565b8181036080830152620012a881846200120f565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620012eb81620012b4565b8114620012f757600080fd5b50565b6000815190506200130b81620012e0565b92915050565b6000602082840312156200132a576200132962000b40565b5b60006200133a84828501620012fa565b91505092915050565b600060a0820190506200135a600083018862000bdc565b62001369602083018762000bdc565b81810360408301526200137d818662001111565b9050818103606083015262001393818562001111565b90508181036080830152620013a981846200120f565b90509695505050505050565b61232380620013c56000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101b05780638da5cb5b146101ba578063a22cb465146101d8578063e985e9c5146101f4578063f242432a14610224578063f2fde38b14610240576100b3565b8062fdd58e146100b857806301ffc9a7146100e85780630e89341c14610118578063156e29f6146101485780632eb2c2d6146101645780634e1273f414610180575b600080fd5b6100d260048036038101906100cd91906116b4565b61025c565b6040516100df9190611703565b60405180910390f35b61010260048036038101906100fd9190611776565b6102b6565b60405161010f91906117be565b60405180910390f35b610132600480360381019061012d91906117d9565b610398565b60405161013f9190611896565b60405180910390f35b610162600480360381019061015d91906118b8565b61042c565b005b61017e60048036038101906101799190611b08565b610454565b005b61019a60048036038101906101959190611c9a565b6104fc565b6040516101a79190611dd0565b60405180910390f35b6101b861060b565b005b6101c261061f565b6040516101cf9190611e01565b60405180910390f35b6101f260048036038101906101ed9190611e48565b610649565b005b61020e60048036038101906102099190611e88565b61065f565b60405161021b91906117be565b60405180910390f35b61023e60048036038101906102399190611ec8565b6106f3565b005b61025a60048036038101906102559190611f5f565b61079b565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038157507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610391575061039082610821565b5b9050919050565b6060600280546103a790611fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611fbb565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b50505050509050919050565b61043461088b565b61044f83838360405180602001604052806000815250610912565b505050565b600061045e6109ab565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104a357506104a1868261065f565b155b156104e75780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016104de929190611fec565b60405180910390fd5b6104f486868686866109b3565b505050505050565b6060815183511461054857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161053f929190612015565b60405180910390fd5b6000835167ffffffffffffffff81111561056557610564611910565b5b6040519080825280602002602001820160405280156105935781602001602082028036833780820191505090505b50905060005b8451811015610600576105d06105b88287610aab90919063ffffffff16565b6105cb8387610abf90919063ffffffff16565b61025c565b8282815181106105e3576105e261203e565b5b602002602001018181525050806105f99061209c565b9050610599565b508091505092915050565b61061361088b565b61061d6000610ad3565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61065b6106546109ab565b8383610b99565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006106fd6109ab565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107425750610740868261065f565b155b156107865780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161077d929190611fec565b60405180910390fd5b6107938686868686610d09565b505050505050565b6107a361088b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108155760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161080c9190611e01565b60405180910390fd5b61081e81610ad3565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108936109ab565b73ffffffffffffffffffffffffffffffffffffffff166108b161061f565b73ffffffffffffffffffffffffffffffffffffffff1614610910576108d46109ab565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109079190611e01565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109845760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161097b9190611e01565b60405180910390fd5b6000806109918585610e14565b915091506109a3600087848487610e44565b505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a255760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a1c9190611e01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a975760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a8e9190611e01565b60405180910390fd5b610aa48585858585610e44565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0b5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c029190611e01565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cfc91906117be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d7b5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d729190611e01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ded5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610de49190611e01565b60405180910390fd5b600080610dfa8585610e14565b91509150610e0b8787848487610e44565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610e5085858585610ef6565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610eef576000610e8e6109ab565b90506001845103610ede576000610eaf600086610abf90919063ffffffff16565b90506000610ec7600086610abf90919063ffffffff16565b9050610ed78389898585896112a4565b5050610eed565b610eec818787878787611458565b5b505b5050505050565b8051825114610f4057815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610f37929190612015565b60405180910390fd5b6000610f4a6109ab565b905060005b835181101561115f576000610f6d8286610abf90919063ffffffff16565b90506000610f848386610abf90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146110b157600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561105957888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161105094939291906120e4565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461114c578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111449190612129565b925050819055505b5050806111589061209c565b9050610f4f565b50600183510361121e57600061117f600085610abf90919063ffffffff16565b90506000611197600085610abf90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161120f929190612015565b60405180910390a4505061129d565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161129492919061215d565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611450578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016113059594939291906121e9565b6020604051808303816000875af192505050801561134157506040513d601f19601f8201168201806040525081019061133e9190612258565b60015b6113c5573d8060008114611371576040519150601f19603f3d011682016040523d82523d6000602084013e611376565b606091505b5060008151036113bd57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113b49190611e01565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461144e57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114459190611e01565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611604578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016114b9959493929190612285565b6020604051808303816000875af19250505080156114f557506040513d601f19601f820116820180604052508101906114f29190612258565b60015b611579573d8060008114611525576040519150601f19603f3d011682016040523d82523d6000602084013e61152a565b606091505b50600081510361157157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115689190611e01565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461160257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115f99190611e01565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061164b82611620565b9050919050565b61165b81611640565b811461166657600080fd5b50565b60008135905061167881611652565b92915050565b6000819050919050565b6116918161167e565b811461169c57600080fd5b50565b6000813590506116ae81611688565b92915050565b600080604083850312156116cb576116ca611616565b5b60006116d985828601611669565b92505060206116ea8582860161169f565b9150509250929050565b6116fd8161167e565b82525050565b600060208201905061171860008301846116f4565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117538161171e565b811461175e57600080fd5b50565b6000813590506117708161174a565b92915050565b60006020828403121561178c5761178b611616565b5b600061179a84828501611761565b91505092915050565b60008115159050919050565b6117b8816117a3565b82525050565b60006020820190506117d360008301846117af565b92915050565b6000602082840312156117ef576117ee611616565b5b60006117fd8482850161169f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611840578082015181840152602081019050611825565b60008484015250505050565b6000601f19601f8301169050919050565b600061186882611806565b6118728185611811565b9350611882818560208601611822565b61188b8161184c565b840191505092915050565b600060208201905081810360008301526118b0818461185d565b905092915050565b6000806000606084860312156118d1576118d0611616565b5b60006118df86828701611669565b93505060206118f08682870161169f565b92505060406119018682870161169f565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119488261184c565b810181811067ffffffffffffffff8211171561196757611966611910565b5b80604052505050565b600061197a61160c565b9050611986828261193f565b919050565b600067ffffffffffffffff8211156119a6576119a5611910565b5b602082029050602081019050919050565b600080fd5b60006119cf6119ca8461198b565b611970565b905080838252602082019050602084028301858111156119f2576119f16119b7565b5b835b81811015611a1b5780611a07888261169f565b8452602084019350506020810190506119f4565b5050509392505050565b600082601f830112611a3a57611a3961190b565b5b8135611a4a8482602086016119bc565b91505092915050565b600080fd5b600067ffffffffffffffff821115611a7357611a72611910565b5b611a7c8261184c565b9050602081019050919050565b82818337600083830152505050565b6000611aab611aa684611a58565b611970565b905082815260208101848484011115611ac757611ac6611a53565b5b611ad2848285611a89565b509392505050565b600082601f830112611aef57611aee61190b565b5b8135611aff848260208601611a98565b91505092915050565b600080600080600060a08688031215611b2457611b23611616565b5b6000611b3288828901611669565b9550506020611b4388828901611669565b945050604086013567ffffffffffffffff811115611b6457611b6361161b565b5b611b7088828901611a25565b935050606086013567ffffffffffffffff811115611b9157611b9061161b565b5b611b9d88828901611a25565b925050608086013567ffffffffffffffff811115611bbe57611bbd61161b565b5b611bca88828901611ada565b9150509295509295909350565b600067ffffffffffffffff821115611bf257611bf1611910565b5b602082029050602081019050919050565b6000611c16611c1184611bd7565b611970565b90508083825260208201905060208402830185811115611c3957611c386119b7565b5b835b81811015611c625780611c4e8882611669565b845260208401935050602081019050611c3b565b5050509392505050565b600082601f830112611c8157611c8061190b565b5b8135611c91848260208601611c03565b91505092915050565b60008060408385031215611cb157611cb0611616565b5b600083013567ffffffffffffffff811115611ccf57611cce61161b565b5b611cdb85828601611c6c565b925050602083013567ffffffffffffffff811115611cfc57611cfb61161b565b5b611d0885828601611a25565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611d478161167e565b82525050565b6000611d598383611d3e565b60208301905092915050565b6000602082019050919050565b6000611d7d82611d12565b611d878185611d1d565b9350611d9283611d2e565b8060005b83811015611dc3578151611daa8882611d4d565b9750611db583611d65565b925050600181019050611d96565b5085935050505092915050565b60006020820190508181036000830152611dea8184611d72565b905092915050565b611dfb81611640565b82525050565b6000602082019050611e166000830184611df2565b92915050565b611e25816117a3565b8114611e3057600080fd5b50565b600081359050611e4281611e1c565b92915050565b60008060408385031215611e5f57611e5e611616565b5b6000611e6d85828601611669565b9250506020611e7e85828601611e33565b9150509250929050565b60008060408385031215611e9f57611e9e611616565b5b6000611ead85828601611669565b9250506020611ebe85828601611669565b9150509250929050565b600080600080600060a08688031215611ee457611ee3611616565b5b6000611ef288828901611669565b9550506020611f0388828901611669565b9450506040611f148882890161169f565b9350506060611f258882890161169f565b925050608086013567ffffffffffffffff811115611f4657611f4561161b565b5b611f5288828901611ada565b9150509295509295909350565b600060208284031215611f7557611f74611616565b5b6000611f8384828501611669565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fd357607f821691505b602082108103611fe657611fe5611f8c565b5b50919050565b60006040820190506120016000830185611df2565b61200e6020830184611df2565b9392505050565b600060408201905061202a60008301856116f4565b61203760208301846116f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120a78261167e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d9576120d861206d565b5b600182019050919050565b60006080820190506120f96000830187611df2565b61210660208301866116f4565b61211360408301856116f4565b61212060608301846116f4565b95945050505050565b60006121348261167e565b915061213f8361167e565b92508282019050808211156121575761215661206d565b5b92915050565b600060408201905081810360008301526121778185611d72565b9050818103602083015261218b8184611d72565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006121bb82612194565b6121c5818561219f565b93506121d5818560208601611822565b6121de8161184c565b840191505092915050565b600060a0820190506121fe6000830188611df2565b61220b6020830187611df2565b61221860408301866116f4565b61222560608301856116f4565b818103608083015261223781846121b0565b90509695505050505050565b6000815190506122528161174a565b92915050565b60006020828403121561226e5761226d611616565b5b600061227c84828501612243565b91505092915050565b600060a08201905061229a6000830188611df2565b6122a76020830187611df2565b81810360408301526122b98186611d72565b905081810360608301526122cd8185611d72565b905081810360808301526122e181846121b0565b9050969550505050505056fea264697066735822122068162fab163b223c3268159cf4dcb8095da6b2ef8c0bcffaa00b6ca73966ad9364736f6c6343000814003368747470733a2f2f6170692e6578616d706c652e636f6d2f6d657461646174612f7b69647d2e6a736f6e","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3712 CODESIZE SUB DUP1 PUSH3 0x3712 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xBAA JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x36E8 PUSH1 0x2A SWAP2 CODECOPY PUSH3 0x63 DUP2 PUSH3 0x13C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD0 SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEA DUP2 PUSH3 0x151 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x110 DUP2 PUSH1 0x1 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x217 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x135 DUP2 PUSH1 0x2 PUSH1 0x32 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x217 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x13B5 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x14D SWAP2 SWAP1 PUSH3 0xE84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x28C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x283 SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x2A1 DUP6 DUP6 PUSH3 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH3 0x2BB PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH3 0x2F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x307 DUP6 DUP6 DUP6 DUP6 PUSH3 0x3CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x3C5 JUMPI PUSH1 0x0 PUSH3 0x34E PUSH3 0x79E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH3 0x3AC JUMPI PUSH1 0x0 PUSH3 0x372 PUSH1 0x0 DUP7 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x38C PUSH1 0x0 DUP7 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3A4 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH3 0x7BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x3C3 JUMP JUMPDEST PUSH3 0x3C2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x97D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x419 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x410 SWAP3 SWAP2 SWAP1 PUSH3 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x42B PUSH3 0x79E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x64F JUMPI PUSH1 0x0 PUSH3 0x451 DUP3 DUP7 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x46A DUP4 DUP7 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x59B JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x543 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x53A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x639 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x631 SWAP2 SWAP1 PUSH3 0x1025 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH3 0x647 SWAP1 PUSH3 0x1060 JUMP JUMPDEST SWAP1 POP PUSH3 0x430 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH3 0x716 JUMPI PUSH1 0x0 PUSH3 0x672 PUSH1 0x0 DUP6 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x68C PUSH1 0x0 DUP6 PUSH3 0x7A6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x706 SWAP3 SWAP2 SWAP1 PUSH3 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH3 0x797 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x78E SWAP3 SWAP2 SWAP1 PUSH3 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0x975 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x81E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1250 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x85D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x85A SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x8E7 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x890 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x895 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0x8DF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8D6 SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0x973 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96A SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH3 0xB38 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9E1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1343 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0xA20 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA1D SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0xAAA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0xA53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0xA58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH3 0xAA2 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA99 SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH3 0xB36 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB2D SWAP2 SWAP1 PUSH3 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB72 DUP3 PUSH3 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB84 DUP2 PUSH3 0xB65 JUMP JUMPDEST DUP2 EQ PUSH3 0xB90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xBA4 DUP2 PUSH3 0xB79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xBC3 JUMPI PUSH3 0xBC2 PUSH3 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xBD3 DUP5 DUP3 DUP6 ADD PUSH3 0xB93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBE7 DUP2 PUSH3 0xB65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC04 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xBDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xC8C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xCA2 JUMPI PUSH3 0xCA1 PUSH3 0xC44 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xD0C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xCCD JUMP JUMPDEST PUSH3 0xD18 DUP7 DUP4 PUSH3 0xCCD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD65 PUSH3 0xD5F PUSH3 0xD59 DUP5 PUSH3 0xD30 JUMP JUMPDEST PUSH3 0xD3A JUMP JUMPDEST PUSH3 0xD30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD81 DUP4 PUSH3 0xD44 JUMP JUMPDEST PUSH3 0xD99 PUSH3 0xD90 DUP3 PUSH3 0xD6C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xCDA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xDB0 PUSH3 0xDA1 JUMP JUMPDEST PUSH3 0xDBD DUP2 DUP5 DUP5 PUSH3 0xD76 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xDE5 JUMPI PUSH3 0xDD9 PUSH1 0x0 DUP3 PUSH3 0xDA6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xDC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xE34 JUMPI PUSH3 0xDFE DUP2 PUSH3 0xCA8 JUMP JUMPDEST PUSH3 0xE09 DUP5 PUSH3 0xCBD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xE19 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xE31 PUSH3 0xE28 DUP6 PUSH3 0xCBD JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xDC2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE59 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xE39 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE74 DUP4 DUP4 PUSH3 0xE46 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xE8F DUP3 PUSH3 0xC0A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xEAB JUMPI PUSH3 0xEAA PUSH3 0xC15 JUMP JUMPDEST JUMPDEST PUSH3 0xEB7 DUP3 SLOAD PUSH3 0xC73 JUMP JUMPDEST PUSH3 0xEC4 DUP3 DUP3 DUP6 PUSH3 0xDE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xEFC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xEE7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xEF3 DUP6 DUP3 PUSH3 0xE66 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xF63 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xF0C DUP7 PUSH3 0xCA8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xF36 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xF0F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xF56 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xF52 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xE46 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF76 DUP2 PUSH3 0xD30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xF93 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xF6B JUMP JUMPDEST PUSH3 0xFA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xF6B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xFC0 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xBDC JUMP JUMPDEST PUSH3 0xFCF PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0xF6B JUMP JUMPDEST PUSH3 0xFDE PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xF6B JUMP JUMPDEST PUSH3 0xFED PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0xF6B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1032 DUP3 PUSH3 0xD30 JUMP JUMPDEST SWAP2 POP PUSH3 0x103F DUP4 PUSH3 0xD30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x105A JUMPI PUSH3 0x1059 PUSH3 0xFF6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x106D DUP3 PUSH3 0xD30 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x10A2 JUMPI PUSH3 0x10A1 PUSH3 0xFF6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10E4 DUP2 PUSH3 0xD30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10F8 DUP4 DUP4 PUSH3 0x10D9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x111E DUP3 PUSH3 0x10AD JUMP JUMPDEST PUSH3 0x112A DUP2 DUP6 PUSH3 0x10B8 JUMP JUMPDEST SWAP4 POP PUSH3 0x1137 DUP4 PUSH3 0x10C9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x116E JUMPI DUP2 MLOAD PUSH3 0x1152 DUP9 DUP3 PUSH3 0x10EA JUMP JUMPDEST SWAP8 POP PUSH3 0x115F DUP4 PUSH3 0x1104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x113B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1197 DUP2 DUP6 PUSH3 0x1111 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x11AD DUP2 DUP5 PUSH3 0x1111 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x11F2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x11D5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x121C DUP3 PUSH3 0x11B6 JUMP JUMPDEST PUSH3 0x1228 DUP2 DUP6 PUSH3 0x11C1 JUMP JUMPDEST SWAP4 POP PUSH3 0x123A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x11D2 JUMP JUMPDEST PUSH3 0x1245 DUP2 PUSH3 0x11FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1267 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xBDC JUMP JUMPDEST PUSH3 0x1276 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xBDC JUMP JUMPDEST PUSH3 0x1285 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xF6B JUMP JUMPDEST PUSH3 0x1294 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xF6B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x12A8 DUP2 DUP5 PUSH3 0x120F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x12EB DUP2 PUSH3 0x12B4 JUMP JUMPDEST DUP2 EQ PUSH3 0x12F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x130B DUP2 PUSH3 0x12E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x132A JUMPI PUSH3 0x1329 PUSH3 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x133A DUP5 DUP3 DUP6 ADD PUSH3 0x12FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x135A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xBDC JUMP JUMPDEST PUSH3 0x1369 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xBDC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x137D DUP2 DUP7 PUSH3 0x1111 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x1393 DUP2 DUP6 PUSH3 0x1111 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x13A9 DUP2 DUP5 PUSH3 0x120F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2323 DUP1 PUSH3 0x13C5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x240 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x381 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x391 JUMPI POP PUSH2 0x390 DUP3 PUSH2 0x821 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x420 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x403 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x44F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI POP PUSH2 0x4A1 DUP7 DUP3 PUSH2 0x65F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4E7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x9B3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x548 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x593 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH2 0x5D0 PUSH2 0x5B8 DUP3 DUP8 PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP8 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E2 PUSH2 0x203E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5F9 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP PUSH2 0x599 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x613 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x61D PUSH1 0x0 PUSH2 0xAD3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x654 PUSH2 0x9AB JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x742 JUMPI POP PUSH2 0x740 DUP7 DUP3 PUSH2 0x65F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x786 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x793 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD09 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x815 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81E DUP2 PUSH2 0xAD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 PUSH2 0x9AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B1 PUSH2 0x61F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x910 JUMPI PUSH2 0x8D4 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x984 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x991 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x9A3 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA97 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDFA DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE0B DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEEF JUMPI PUSH1 0x0 PUSH2 0xE8E PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xEDE JUMPI PUSH1 0x0 PUSH2 0xEAF PUSH1 0x0 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC7 PUSH1 0x0 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xED7 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x12A4 JUMP JUMPDEST POP POP PUSH2 0xEED JUMP JUMPDEST PUSH2 0xEEC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1458 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF40 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4A PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 PUSH2 0xF6D DUP3 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF84 DUP4 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1059 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x114C JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1158 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP PUSH2 0xF4F JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x121E JUMPI PUSH1 0x0 PUSH2 0x117F PUSH1 0x0 DUP6 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1197 PUSH1 0x0 DUP6 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x129D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1450 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1341 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13BD JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x144E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1604 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14F5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F2 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1579 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1571 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1602 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164B DUP3 PUSH2 0x1620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165B DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP2 EQ PUSH2 0x1666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1678 DUP2 PUSH2 0x1652 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1691 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x169C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AE DUP2 PUSH2 0x1688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16EA DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FD DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1718 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1753 DUP2 PUSH2 0x171E JUMP JUMPDEST DUP2 EQ PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1770 DUP2 PUSH2 0x174A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179A DUP5 DUP3 DUP6 ADD PUSH2 0x1761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1840 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x1872 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1882 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x184C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B0 DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F0 DUP7 DUP3 DUP8 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1901 DUP7 DUP3 DUP8 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1948 DUP3 PUSH2 0x184C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197A PUSH2 0x160C JUMP JUMPDEST SWAP1 POP PUSH2 0x1986 DUP3 DUP3 PUSH2 0x193F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CF PUSH2 0x19CA DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP1 PUSH2 0x1A07 DUP9 DUP3 PUSH2 0x169F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7C DUP3 PUSH2 0x184C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAB PUSH2 0x1AA6 DUP5 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD2 DUP5 DUP3 DUP6 PUSH2 0x1A89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B32 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B43 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1B70 DUP9 DUP3 DUP10 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1B9D DUP9 DUP3 DUP10 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1BCA DUP9 DUP3 DUP10 ADD PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C16 PUSH2 0x1C11 DUP5 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C62 JUMPI DUP1 PUSH2 0x1C4E DUP9 DUP3 PUSH2 0x1669 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB1 JUMPI PUSH2 0x1CB0 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1CDB DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1D08 DUP6 DUP3 DUP7 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D47 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 DUP4 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7D DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D1D JUMP JUMPDEST SWAP4 POP PUSH2 0x1D92 DUP4 PUSH2 0x1D2E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC3 JUMPI DUP2 MLOAD PUSH2 0x1DAA DUP9 DUP3 PUSH2 0x1D4D JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB5 DUP4 PUSH2 0x1D65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D96 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEA DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFB DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E25 DUP2 PUSH2 0x17A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E42 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5F JUMPI PUSH2 0x1E5E PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6D DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EAD DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EBE DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F03 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F14 DUP9 DUP3 DUP10 ADD PUSH2 0x169F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F25 DUP9 DUP3 DUP10 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1F52 DUP9 DUP3 DUP10 ADD PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F83 DUP5 DUP3 DUP6 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FE6 JUMPI PUSH2 0x1FE5 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2001 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x200E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x202A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2037 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20D9 JUMPI PUSH2 0x20D8 PUSH2 0x206D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x2106 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2113 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2120 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2134 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x213F DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2157 JUMPI PUSH2 0x2156 PUSH2 0x206D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2177 DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x218B DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BB DUP3 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x21C5 DUP2 DUP6 PUSH2 0x219F JUMP JUMPDEST SWAP4 POP PUSH2 0x21D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x21DE DUP2 PUSH2 0x184C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21FE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x220B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x2218 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2225 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2237 DUP2 DUP5 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2252 DUP2 PUSH2 0x174A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227C DUP5 DUP3 DUP6 ADD PUSH2 0x2243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x229A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22B9 DUP2 DUP7 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22CD DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22E1 DUP2 DUP5 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x162FAB163B223C3268 ISZERO SWAP13 DELEGATECALL 0xDC 0xB8 MULMOD 0x5D 0xA6 0xB2 0xEF DUP13 SIGNEXTEND 0xCF STATICCALL LOG0 SIGNEXTEND PUSH13 0xA73966AD9364736F6C63430008 EQ STOP CALLER PUSH9 0x747470733A2F2F6170 PUSH10 0x2E6578616D706C652E63 PUSH16 0x6D2F6D657461646174612F7B69647D2E PUSH11 0x736F6E0000000000000000 ","sourceMap":"172:432:28:-:0;;;219:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;315:12;1249:62:2;;;;;;;;;;;;;;;;;1291:13;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;339:31:28::2;345:12;359:1;362:3;339:31;;;;;;;;;;;::::0;:5:::2;;;:31;;:::i;:::-;412:30;418:12;432:1;435:2;412:30;;;;;;;;;;;::::0;:5:::2;;;:30;;:::i;:::-;219:262:::0;172:432;;10290:86:2;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10754:346:2:-;10864:1;10850:16;;:2;:16;;;10846:88;;10920:1;10889:34;;;;;;;;;;;:::i;:::-;;;;;;;;10846:88;10944:20;10966:23;10993:29;11012:2;11016:5;10993:18;;;:29;;:::i;:::-;10943:79;;;;11032:61;11067:1;11071:2;11075:3;11080:6;11088:4;11032:26;;;:61;;:::i;:::-;10836:264;;10754:346;;;;:::o;13707:822::-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;;;:30;;:::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;;;:12;;:::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;;;:72;;:::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;;;:79;;:::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;;;:12;;:::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;16926:197:15:-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;998:959:6:-;1214:1;1197:2;:14;;;:18;1193:758;;;1252:2;1235:38;;;1274:8;1284:4;1290:2;1294:5;1301:4;1235:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:1;1605:6;:13;:18;1601:326;;1748:2;1710:41;;;;;;;;;;;:::i;:::-;;;;;;;;1601:326;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1367:43;;;1355:55;;;:8;:55;;;;1351:189;;1518:2;1480:41;;;;;;;;;;;:::i;:::-;;;;;;;;1351:189;1307:247;1193:758;998:959;;;;;;:::o;2505:1026::-;2746:1;2729:2;:14;;;:18;2725:800;;;2784:2;2767:43;;;2811:8;2821:4;2827:3;2832:6;2840:4;2767:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3179:6;:13;:18;3175:326;;3322:2;3284:41;;;;;;;;;;;:::i;:::-;;;;;;;;3175:326;3453:6;3447:13;3438:6;3434:2;3430:15;3423:38;2763:752;2936:48;;;2924:60;;;:8;:60;;;;2920:194;;3092:2;3054:41;;;;;;;;;;;:::i;:::-;;;;;;;;2920:194;2846:282;2725:800;2505:1026;;;;;;:::o;88:117:31:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;6781:118::-;6868:24;6886:5;6868:24;:::i;:::-;6863:3;6856:37;6781:118;;:::o;6905:332::-;7026:4;7064:2;7053:9;7049:18;7041:26;;7077:71;7145:1;7134:9;7130:17;7121:6;7077:71;:::i;:::-;7158:72;7226:2;7215:9;7211:18;7202:6;7158:72;:::i;:::-;6905:332;;;;;:::o;7243:553::-;7420:4;7458:3;7447:9;7443:19;7435:27;;7472:71;7540:1;7529:9;7525:17;7516:6;7472:71;:::i;:::-;7553:72;7621:2;7610:9;7606:18;7597:6;7553:72;:::i;:::-;7635;7703:2;7692:9;7688:18;7679:6;7635:72;:::i;:::-;7717;7785:2;7774:9;7770:18;7761:6;7717:72;:::i;:::-;7243:553;;;;;;;:::o;7802:180::-;7850:77;7847:1;7840:88;7947:4;7944:1;7937:15;7971:4;7968:1;7961:15;7988:191;8028:3;8047:20;8065:1;8047:20;:::i;:::-;8042:25;;8081:20;8099:1;8081:20;:::i;:::-;8076:25;;8124:1;8121;8117:9;8110:16;;8145:3;8142:1;8139:10;8136:36;;;8152:18;;:::i;:::-;8136:36;7988:191;;;;:::o;8185:233::-;8224:3;8247:24;8265:5;8247:24;:::i;:::-;8238:33;;8293:66;8286:5;8283:77;8280:103;;8363:18;;:::i;:::-;8280:103;8410:1;8403:5;8399:13;8392:20;;8185:233;;;:::o;8424:114::-;8491:6;8525:5;8519:12;8509:22;;8424:114;;;:::o;8544:184::-;8643:11;8677:6;8672:3;8665:19;8717:4;8712:3;8708:14;8693:29;;8544:184;;;;:::o;8734:132::-;8801:4;8824:3;8816:11;;8854:4;8849:3;8845:14;8837:22;;8734:132;;;:::o;8872:108::-;8949:24;8967:5;8949:24;:::i;:::-;8944:3;8937:37;8872:108;;:::o;8986:179::-;9055:10;9076:46;9118:3;9110:6;9076:46;:::i;:::-;9154:4;9149:3;9145:14;9131:28;;8986:179;;;;:::o;9171:113::-;9241:4;9273;9268:3;9264:14;9256:22;;9171:113;;;:::o;9320:732::-;9439:3;9468:54;9516:5;9468:54;:::i;:::-;9538:86;9617:6;9612:3;9538:86;:::i;:::-;9531:93;;9648:56;9698:5;9648:56;:::i;:::-;9727:7;9758:1;9743:284;9768:6;9765:1;9762:13;9743:284;;;9844:6;9838:13;9871:63;9930:3;9915:13;9871:63;:::i;:::-;9864:70;;9957:60;10010:6;9957:60;:::i;:::-;9947:70;;9803:224;9790:1;9787;9783:9;9778:14;;9743:284;;;9747:14;10043:3;10036:10;;9444:608;;;9320:732;;;;:::o;10058:634::-;10279:4;10317:2;10306:9;10302:18;10294:26;;10366:9;10360:4;10356:20;10352:1;10341:9;10337:17;10330:47;10394:108;10497:4;10488:6;10394:108;:::i;:::-;10386:116;;10549:9;10543:4;10539:20;10534:2;10523:9;10519:18;10512:48;10577:108;10680:4;10671:6;10577:108;:::i;:::-;10569:116;;10058:634;;;;;:::o;10698:98::-;10749:6;10783:5;10777:12;10767:22;;10698:98;;;:::o;10802:168::-;10885:11;10919:6;10914:3;10907:19;10959:4;10954:3;10950:14;10935:29;;10802:168;;;;:::o;10976:246::-;11057:1;11067:113;11081:6;11078:1;11075:13;11067:113;;;11166:1;11161:3;11157:11;11151:18;11147:1;11142:3;11138:11;11131:39;11103:2;11100:1;11096:10;11091:15;;11067:113;;;11214:1;11205:6;11200:3;11196:16;11189:27;11038:184;10976:246;;;:::o;11228:102::-;11269:6;11320:2;11316:7;11311:2;11304:5;11300:14;11296:28;11286:38;;11228:102;;;:::o;11336:373::-;11422:3;11450:38;11482:5;11450:38;:::i;:::-;11504:70;11567:6;11562:3;11504:70;:::i;:::-;11497:77;;11583:65;11641:6;11636:3;11629:4;11622:5;11618:16;11583:65;:::i;:::-;11673:29;11695:6;11673:29;:::i;:::-;11668:3;11664:39;11657:46;;11426:283;11336:373;;;;:::o;11715:751::-;11938:4;11976:3;11965:9;11961:19;11953:27;;11990:71;12058:1;12047:9;12043:17;12034:6;11990:71;:::i;:::-;12071:72;12139:2;12128:9;12124:18;12115:6;12071:72;:::i;:::-;12153;12221:2;12210:9;12206:18;12197:6;12153:72;:::i;:::-;12235;12303:2;12292:9;12288:18;12279:6;12235:72;:::i;:::-;12355:9;12349:4;12345:20;12339:3;12328:9;12324:19;12317:49;12383:76;12454:4;12445:6;12383:76;:::i;:::-;12375:84;;11715:751;;;;;;;;:::o;12472:149::-;12508:7;12548:66;12541:5;12537:78;12526:89;;12472:149;;;:::o;12627:120::-;12699:23;12716:5;12699:23;:::i;:::-;12692:5;12689:34;12679:62;;12737:1;12734;12727:12;12679:62;12627:120;:::o;12753:141::-;12809:5;12840:6;12834:13;12825:22;;12856:32;12882:5;12856:32;:::i;:::-;12753:141;;;;:::o;12900:349::-;12969:6;13018:2;13006:9;12997:7;12993:23;12989:32;12986:119;;;13024:79;;:::i;:::-;12986:119;13144:1;13169:63;13224:7;13215:6;13204:9;13200:22;13169:63;:::i;:::-;13159:73;;13115:127;12900:349;;;;:::o;13255:1053::-;13578:4;13616:3;13605:9;13601:19;13593:27;;13630:71;13698:1;13687:9;13683:17;13674:6;13630:71;:::i;:::-;13711:72;13779:2;13768:9;13764:18;13755:6;13711:72;:::i;:::-;13830:9;13824:4;13820:20;13815:2;13804:9;13800:18;13793:48;13858:108;13961:4;13952:6;13858:108;:::i;:::-;13850:116;;14013:9;14007:4;14003:20;13998:2;13987:9;13983:18;13976:48;14041:108;14144:4;14135:6;14041:108;:::i;:::-;14033:116;;14197:9;14191:4;14187:20;14181:3;14170:9;14166:19;14159:49;14225:76;14296:4;14287:6;14225:76;:::i;:::-;14217:84;;13255:1053;;;;;;;;:::o;172:432:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1200":{"entryPoint":3604,"id":1200,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":2187,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_1014":{"entryPoint":2322,"id":1014,"parameterSlots":4,"returnSlots":0},"@_msgSender_4274":{"entryPoint":2475,"id":4274,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_951":{"entryPoint":2483,"id":951,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_896":{"entryPoint":3337,"id":896,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1184":{"entryPoint":2969,"id":1184,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2771,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_830":{"entryPoint":3652,"id":830,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":3830,"id":750,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_474":{"entryPoint":1276,"id":474,"parameterSlots":2,"returnSlots":1},"@balanceOf_404":{"entryPoint":604,"id":404,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1535":{"entryPoint":5208,"id":1535,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1461":{"entryPoint":4772,"id":1461,"parameterSlots":6,"returnSlots":0},"@isApprovedForAll_507":{"entryPoint":1631,"id":507,"parameterSlots":2,"returnSlots":1},"@mint_9676":{"entryPoint":1068,"id":9676,"parameterSlots":3,"returnSlots":0},"@owner_67":{"entryPoint":1567,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1547,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_597":{"entryPoint":1108,"id":597,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_551":{"entryPoint":1779,"id":551,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_490":{"entryPoint":1609,"id":490,"parameterSlots":2,"returnSlots":0},"@supportsInterface_376":{"entryPoint":694,"id":376,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5821":{"entryPoint":2081,"id":5821,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1947,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_4170":{"entryPoint":2731,"id":4170,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_4196":{"entryPoint":2751,"id":4196,"parameterSlots":2,"returnSlots":1},"@uri_387":{"entryPoint":920,"id":387,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7171,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6588,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6808,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8031,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7816,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6920,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":7880,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7752,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":6328,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7322,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7501,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6063,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7486,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8172,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8837,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8681,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8420,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8541,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8213,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":6512,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5644,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":7127,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6539,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6744,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7470,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7442,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8596,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6150,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7525,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7453,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8607,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6161,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8489,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5696,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6051,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5918,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5664,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5758,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6793,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6178,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8123,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6463,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8348,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8301,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8076,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8254,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6416,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6411,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6583,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6739,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5659,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6220,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5714,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7708,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5962,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5768,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24221:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"379:81:31","statements":[{"nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:31"},"nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nodeType":"YulBlock","src":"511:51:31","statements":[{"nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:31"},"nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:31"},"nodeType":"YulFunctionCall","src":"670:12:31"},"nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:31"},"nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:31"},"nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:31"},"nodeType":"YulFunctionCall","src":"624:43:31"},"nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nodeType":"YulBlock","src":"748:87:31","statements":[{"nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:31"},"nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:31"},"nodeType":"YulFunctionCall","src":"796:33:31"},"nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nodeType":"YulBlock","src":"886:32:31","statements":[{"nodeType":"YulAssignment","src":"896:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:31","type":""}],"src":"841:77:31"},{"body":{"nodeType":"YulBlock","src":"967:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:31"},"nodeType":"YulFunctionCall","src":"1026:12:31"},"nodeType":"YulExpressionStatement","src":"1026:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:31"},"nodeType":"YulFunctionCall","src":"997:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:31"},"nodeType":"YulFunctionCall","src":"987:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:31"},"nodeType":"YulFunctionCall","src":"980:43:31"},"nodeType":"YulIf","src":"977:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:31","type":""}],"src":"924:122:31"},{"body":{"nodeType":"YulBlock","src":"1104:87:31","statements":[{"nodeType":"YulAssignment","src":"1114:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:31"},"nodeType":"YulFunctionCall","src":"1123:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:31"},"nodeType":"YulFunctionCall","src":"1152:33:31"},"nodeType":"YulExpressionStatement","src":"1152:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:31","type":""}],"src":"1052:139:31"},{"body":{"nodeType":"YulBlock","src":"1280:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:31"},"nodeType":"YulFunctionCall","src":"1328:79:31"},"nodeType":"YulExpressionStatement","src":"1328:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:31"},"nodeType":"YulFunctionCall","src":"1297:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:31"},"nodeType":"YulFunctionCall","src":"1293:32:31"},"nodeType":"YulIf","src":"1290:119:31"},{"nodeType":"YulBlock","src":"1419:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:31"},"nodeType":"YulFunctionCall","src":"1494:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:31"},"nodeType":"YulFunctionCall","src":"1473:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:31"}]}]},{"nodeType":"YulBlock","src":"1546:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:31"},"nodeType":"YulFunctionCall","src":"1622:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:31"},"nodeType":"YulFunctionCall","src":"1601:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:31","type":""}],"src":"1197:474:31"},{"body":{"nodeType":"YulBlock","src":"1742:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:31"},"nodeType":"YulFunctionCall","src":"1764:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:31"},"nodeType":"YulFunctionCall","src":"1752:37:31"},"nodeType":"YulExpressionStatement","src":"1752:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:31","type":""}],"src":"1677:118:31"},{"body":{"nodeType":"YulBlock","src":"1899:124:31","statements":[{"nodeType":"YulAssignment","src":"1909:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:31"},"nodeType":"YulFunctionCall","src":"1917:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:31"},"nodeType":"YulFunctionCall","src":"1998:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:31"},"nodeType":"YulFunctionCall","src":"1945:71:31"},"nodeType":"YulExpressionStatement","src":"1945:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:31","type":""}],"src":"1801:222:31"},{"body":{"nodeType":"YulBlock","src":"2073:105:31","statements":[{"nodeType":"YulAssignment","src":"2083:89:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:31"},"nodeType":"YulFunctionCall","src":"2094:78:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:31"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:31","type":""}],"src":"2029:149:31"},{"body":{"nodeType":"YulBlock","src":"2226:78:31","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:31"},"nodeType":"YulFunctionCall","src":"2284:12:31"},"nodeType":"YulExpressionStatement","src":"2284:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:31"},"nodeType":"YulFunctionCall","src":"2256:23:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:31"},"nodeType":"YulFunctionCall","src":"2246:34:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:31"},"nodeType":"YulFunctionCall","src":"2239:42:31"},"nodeType":"YulIf","src":"2236:62:31"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:31","type":""}],"src":"2184:120:31"},{"body":{"nodeType":"YulBlock","src":"2361:86:31","statements":[{"nodeType":"YulAssignment","src":"2371:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:31"},"nodeType":"YulFunctionCall","src":"2380:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:31"},"nodeType":"YulFunctionCall","src":"2409:32:31"},"nodeType":"YulExpressionStatement","src":"2409:32:31"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:31","type":""}],"src":"2310:137:31"},{"body":{"nodeType":"YulBlock","src":"2518:262:31","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:31"},"nodeType":"YulFunctionCall","src":"2566:79:31"},"nodeType":"YulExpressionStatement","src":"2566:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:31"},"nodeType":"YulFunctionCall","src":"2535:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:31"},"nodeType":"YulFunctionCall","src":"2531:32:31"},"nodeType":"YulIf","src":"2528:119:31"},{"nodeType":"YulBlock","src":"2657:116:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:31"},"nodeType":"YulFunctionCall","src":"2731:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:31"},"nodeType":"YulFunctionCall","src":"2711:52:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:31","type":""}],"src":"2453:327:31"},{"body":{"nodeType":"YulBlock","src":"2828:48:31","statements":[{"nodeType":"YulAssignment","src":"2838:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:31"},"nodeType":"YulFunctionCall","src":"2856:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:31"},"nodeType":"YulFunctionCall","src":"2849:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:31","type":""}],"src":"2786:90:31"},{"body":{"nodeType":"YulBlock","src":"2941:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:31"},"nodeType":"YulFunctionCall","src":"2963:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:31"},"nodeType":"YulFunctionCall","src":"2951:34:31"},"nodeType":"YulExpressionStatement","src":"2951:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:31","type":""}],"src":"2882:109:31"},{"body":{"nodeType":"YulBlock","src":"3089:118:31","statements":[{"nodeType":"YulAssignment","src":"3099:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:31"},"nodeType":"YulFunctionCall","src":"3107:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:31"},"nodeType":"YulFunctionCall","src":"3182:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:31"},"nodeType":"YulFunctionCall","src":"3135:65:31"},"nodeType":"YulExpressionStatement","src":"3135:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:31","type":""}],"src":"2997:210:31"},{"body":{"nodeType":"YulBlock","src":"3279:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"3325:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3327:77:31"},"nodeType":"YulFunctionCall","src":"3327:79:31"},"nodeType":"YulExpressionStatement","src":"3327:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3300:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:31"},"nodeType":"YulFunctionCall","src":"3296:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3292:3:31"},"nodeType":"YulFunctionCall","src":"3292:32:31"},"nodeType":"YulIf","src":"3289:119:31"},{"nodeType":"YulBlock","src":"3418:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3447:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:31"},"nodeType":"YulFunctionCall","src":"3493:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3472:20:31"},"nodeType":"YulFunctionCall","src":"3472:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3249:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3260:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3272:6:31","type":""}],"src":"3213:329:31"},{"body":{"nodeType":"YulBlock","src":"3607:40:31","statements":[{"nodeType":"YulAssignment","src":"3618:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:31"},"nodeType":"YulFunctionCall","src":"3628:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:31","type":""}],"src":"3548:99:31"},{"body":{"nodeType":"YulBlock","src":"3749:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:31"},"nodeType":"YulFunctionCall","src":"3759:19:31"},"nodeType":"YulExpressionStatement","src":"3759:19:31"},{"nodeType":"YulAssignment","src":"3787:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:31"},"nodeType":"YulFunctionCall","src":"3802:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:31","type":""}],"src":"3653:169:31"},{"body":{"nodeType":"YulBlock","src":"3890:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:31"},"nodeType":"YulFunctionCall","src":"3990:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:31"},"nodeType":"YulFunctionCall","src":"4009:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:31"},"nodeType":"YulFunctionCall","src":"4003:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:31"},"nodeType":"YulFunctionCall","src":"3983:39:31"},"nodeType":"YulExpressionStatement","src":"3983:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:31"},"nodeType":"YulFunctionCall","src":"3927:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:31","statements":[{"nodeType":"YulAssignment","src":"3943:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:31"},"nodeType":"YulFunctionCall","src":"3948:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:31","statements":[]},"src":"3919:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:31"},"nodeType":"YulFunctionCall","src":"4048:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:31"},"nodeType":"YulFunctionCall","src":"4041:27:31"},"nodeType":"YulExpressionStatement","src":"4041:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:31","type":""}],"src":"3828:246:31"},{"body":{"nodeType":"YulBlock","src":"4128:54:31","statements":[{"nodeType":"YulAssignment","src":"4138:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:31"},"nodeType":"YulFunctionCall","src":"4152:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:31"},"nodeType":"YulFunctionCall","src":"4168:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:31"},"nodeType":"YulFunctionCall","src":"4148:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:31","type":""}],"src":"4080:102:31"},{"body":{"nodeType":"YulBlock","src":"4280:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:31"},"nodeType":"YulFunctionCall","src":"4304:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:31"},"nodeType":"YulFunctionCall","src":"4359:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:31"},"nodeType":"YulFunctionCall","src":"4474:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:31"},"nodeType":"YulFunctionCall","src":"4439:65:31"},"nodeType":"YulExpressionStatement","src":"4439:65:31"},{"nodeType":"YulAssignment","src":"4513:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:31"},"nodeType":"YulFunctionCall","src":"4529:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:31"},"nodeType":"YulFunctionCall","src":"4520:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:31","type":""}],"src":"4188:377:31"},{"body":{"nodeType":"YulBlock","src":"4689:195:31","statements":[{"nodeType":"YulAssignment","src":"4699:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:31"},"nodeType":"YulFunctionCall","src":"4707:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:31"},"nodeType":"YulFunctionCall","src":"4742:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:31"},"nodeType":"YulFunctionCall","src":"4761:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:31"},"nodeType":"YulFunctionCall","src":"4735:47:31"},"nodeType":"YulExpressionStatement","src":"4735:47:31"},{"nodeType":"YulAssignment","src":"4791:86:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:31"},"nodeType":"YulFunctionCall","src":"4799:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:31","type":""}],"src":"4571:313:31"},{"body":{"nodeType":"YulBlock","src":"4990:519:31","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:31"},"nodeType":"YulFunctionCall","src":"5038:79:31"},"nodeType":"YulExpressionStatement","src":"5038:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:31"},"nodeType":"YulFunctionCall","src":"5007:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:31"},"nodeType":"YulFunctionCall","src":"5003:32:31"},"nodeType":"YulIf","src":"5000:119:31"},{"nodeType":"YulBlock","src":"5129:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:31"},"nodeType":"YulFunctionCall","src":"5204:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:31"},"nodeType":"YulFunctionCall","src":"5183:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:31"}]}]},{"nodeType":"YulBlock","src":"5256:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:31"},"nodeType":"YulFunctionCall","src":"5332:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5311:20:31"},"nodeType":"YulFunctionCall","src":"5311:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:31"}]}]},{"nodeType":"YulBlock","src":"5384:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:31"},"nodeType":"YulFunctionCall","src":"5460:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:31"},"nodeType":"YulFunctionCall","src":"5439:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:31","type":""}],"src":"4890:619:31"},{"body":{"nodeType":"YulBlock","src":"5604:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5621:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5624:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5614:6:31"},"nodeType":"YulFunctionCall","src":"5614:12:31"},"nodeType":"YulExpressionStatement","src":"5614:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5515:117:31"},{"body":{"nodeType":"YulBlock","src":"5666:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5683:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5686:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5676:6:31"},"nodeType":"YulFunctionCall","src":"5676:88:31"},"nodeType":"YulExpressionStatement","src":"5676:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5780:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5773:6:31"},"nodeType":"YulFunctionCall","src":"5773:15:31"},"nodeType":"YulExpressionStatement","src":"5773:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5804:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5807:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5797:6:31"},"nodeType":"YulFunctionCall","src":"5797:15:31"},"nodeType":"YulExpressionStatement","src":"5797:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5638:180:31"},{"body":{"nodeType":"YulBlock","src":"5867:238:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5877:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5899:6:31"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5929:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5907:21:31"},"nodeType":"YulFunctionCall","src":"5907:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:31"},"nodeType":"YulFunctionCall","src":"5895:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5881:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6046:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6048:16:31"},"nodeType":"YulFunctionCall","src":"6048:18:31"},"nodeType":"YulExpressionStatement","src":"6048:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5989:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"6001:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5986:2:31"},"nodeType":"YulFunctionCall","src":"5986:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6025:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6037:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6022:2:31"},"nodeType":"YulFunctionCall","src":"6022:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5983:2:31"},"nodeType":"YulFunctionCall","src":"5983:62:31"},"nodeType":"YulIf","src":"5980:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6084:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6088:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6077:6:31"},"nodeType":"YulFunctionCall","src":"6077:22:31"},"nodeType":"YulExpressionStatement","src":"6077:22:31"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5853:6:31","type":""},{"name":"size","nodeType":"YulTypedName","src":"5861:4:31","type":""}],"src":"5824:281:31"},{"body":{"nodeType":"YulBlock","src":"6152:88:31","statements":[{"nodeType":"YulAssignment","src":"6162:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6172:18:31"},"nodeType":"YulFunctionCall","src":"6172:20:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6162:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6221:6:31"},{"name":"size","nodeType":"YulIdentifier","src":"6229:4:31"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6201:19:31"},"nodeType":"YulFunctionCall","src":"6201:33:31"},"nodeType":"YulExpressionStatement","src":"6201:33:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6136:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6145:6:31","type":""}],"src":"6111:129:31"},{"body":{"nodeType":"YulBlock","src":"6328:229:31","statements":[{"body":{"nodeType":"YulBlock","src":"6433:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6435:16:31"},"nodeType":"YulFunctionCall","src":"6435:18:31"},"nodeType":"YulExpressionStatement","src":"6435:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6405:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6413:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6402:2:31"},"nodeType":"YulFunctionCall","src":"6402:30:31"},"nodeType":"YulIf","src":"6399:56:31"},{"nodeType":"YulAssignment","src":"6465:25:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6477:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6485:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6473:3:31"},"nodeType":"YulFunctionCall","src":"6473:17:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6465:4:31"}]},{"nodeType":"YulAssignment","src":"6527:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6539:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"6545:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6535:3:31"},"nodeType":"YulFunctionCall","src":"6535:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6527:4:31"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6312:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6323:4:31","type":""}],"src":"6246:311:31"},{"body":{"nodeType":"YulBlock","src":"6652:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6669:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6672:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6662:6:31"},"nodeType":"YulFunctionCall","src":"6662:12:31"},"nodeType":"YulExpressionStatement","src":"6662:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6563:117:31"},{"body":{"nodeType":"YulBlock","src":"6805:608:31","statements":[{"nodeType":"YulAssignment","src":"6815:90:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6897:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6840:56:31"},"nodeType":"YulFunctionCall","src":"6840:64:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6824:15:31"},"nodeType":"YulFunctionCall","src":"6824:81:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6815:5:31"}]},{"nodeType":"YulVariableDeclaration","src":"6914:16:31","value":{"name":"array","nodeType":"YulIdentifier","src":"6925:5:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6918:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6947:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"6954:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6940:6:31"},"nodeType":"YulFunctionCall","src":"6940:21:31"},"nodeType":"YulExpressionStatement","src":"6940:21:31"},{"nodeType":"YulAssignment","src":"6970:23:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6981:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6988:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6977:3:31"},"nodeType":"YulFunctionCall","src":"6977:16:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6970:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"7003:44:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7021:6:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7033:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7041:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7029:3:31"},"nodeType":"YulFunctionCall","src":"7029:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7017:3:31"},"nodeType":"YulFunctionCall","src":"7017:30:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7007:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7075:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7089:77:31"},"nodeType":"YulFunctionCall","src":"7089:79:31"},"nodeType":"YulExpressionStatement","src":"7089:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7062:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"7070:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7059:2:31"},"nodeType":"YulFunctionCall","src":"7059:15:31"},"nodeType":"YulIf","src":"7056:122:31"},{"body":{"nodeType":"YulBlock","src":"7263:144:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7278:21:31","value":{"name":"src","nodeType":"YulIdentifier","src":"7296:3:31"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7282:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7320:3:31"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7346:10:31"},{"name":"end","nodeType":"YulIdentifier","src":"7358:3:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7325:20:31"},"nodeType":"YulFunctionCall","src":"7325:37:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7313:6:31"},"nodeType":"YulFunctionCall","src":"7313:50:31"},"nodeType":"YulExpressionStatement","src":"7313:50:31"},{"nodeType":"YulAssignment","src":"7376:21:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7387:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7392:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7383:3:31"},"nodeType":"YulFunctionCall","src":"7383:14:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7376:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7216:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7221:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7213:2:31"},"nodeType":"YulFunctionCall","src":"7213:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7229:25:31","statements":[{"nodeType":"YulAssignment","src":"7231:21:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7242:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7247:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7238:3:31"},"nodeType":"YulFunctionCall","src":"7238:14:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7231:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"7191:21:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7193:17:31","value":{"name":"offset","nodeType":"YulIdentifier","src":"7204:6:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7197:3:31","type":""}]}]},"src":"7187:220:31"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6775:6:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"6783:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6791:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6799:5:31","type":""}],"src":"6703:710:31"},{"body":{"nodeType":"YulBlock","src":"7513:293:31","statements":[{"body":{"nodeType":"YulBlock","src":"7562:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7564:77:31"},"nodeType":"YulFunctionCall","src":"7564:79:31"},"nodeType":"YulExpressionStatement","src":"7564:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7541:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7549:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7537:3:31"},"nodeType":"YulFunctionCall","src":"7537:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"7556:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7533:3:31"},"nodeType":"YulFunctionCall","src":"7533:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7526:6:31"},"nodeType":"YulFunctionCall","src":"7526:35:31"},"nodeType":"YulIf","src":"7523:122:31"},{"nodeType":"YulVariableDeclaration","src":"7654:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7681:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7668:12:31"},"nodeType":"YulFunctionCall","src":"7668:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7658:6:31","type":""}]},{"nodeType":"YulAssignment","src":"7697:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7773:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7781:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7769:3:31"},"nodeType":"YulFunctionCall","src":"7769:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"7788:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"7796:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7706:62:31"},"nodeType":"YulFunctionCall","src":"7706:94:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7697:5:31"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7491:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"7499:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7507:5:31","type":""}],"src":"7436:370:31"},{"body":{"nodeType":"YulBlock","src":"7901:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7918:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7921:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7911:6:31"},"nodeType":"YulFunctionCall","src":"7911:12:31"},"nodeType":"YulExpressionStatement","src":"7911:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7812:117:31"},{"body":{"nodeType":"YulBlock","src":"8001:241:31","statements":[{"body":{"nodeType":"YulBlock","src":"8106:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8108:16:31"},"nodeType":"YulFunctionCall","src":"8108:18:31"},"nodeType":"YulExpressionStatement","src":"8108:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8078:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8086:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8075:2:31"},"nodeType":"YulFunctionCall","src":"8075:30:31"},"nodeType":"YulIf","src":"8072:56:31"},{"nodeType":"YulAssignment","src":"8138:37:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8168:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8146:21:31"},"nodeType":"YulFunctionCall","src":"8146:29:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8138:4:31"}]},{"nodeType":"YulAssignment","src":"8212:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8224:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"8230:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8220:3:31"},"nodeType":"YulFunctionCall","src":"8220:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8212:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7985:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7996:4:31","type":""}],"src":"7935:307:31"},{"body":{"nodeType":"YulBlock","src":"8312:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8335:3:31"},{"name":"src","nodeType":"YulIdentifier","src":"8340:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8345:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8322:12:31"},"nodeType":"YulFunctionCall","src":"8322:30:31"},"nodeType":"YulExpressionStatement","src":"8322:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8372:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8377:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8368:3:31"},"nodeType":"YulFunctionCall","src":"8368:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"8386:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8361:6:31"},"nodeType":"YulFunctionCall","src":"8361:27:31"},"nodeType":"YulExpressionStatement","src":"8361:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8294:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8299:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8304:6:31","type":""}],"src":"8248:146:31"},{"body":{"nodeType":"YulBlock","src":"8483:340:31","statements":[{"nodeType":"YulAssignment","src":"8493:74:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8559:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8518:40:31"},"nodeType":"YulFunctionCall","src":"8518:48:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8502:15:31"},"nodeType":"YulFunctionCall","src":"8502:65:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8493:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8583:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"8590:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8576:6:31"},"nodeType":"YulFunctionCall","src":"8576:21:31"},"nodeType":"YulExpressionStatement","src":"8576:21:31"},{"nodeType":"YulVariableDeclaration","src":"8606:27:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8621:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8628:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8617:3:31"},"nodeType":"YulFunctionCall","src":"8617:16:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8610:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8671:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8673:77:31"},"nodeType":"YulFunctionCall","src":"8673:79:31"},"nodeType":"YulExpressionStatement","src":"8673:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8652:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8657:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8648:3:31"},"nodeType":"YulFunctionCall","src":"8648:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"8666:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8645:2:31"},"nodeType":"YulFunctionCall","src":"8645:25:31"},"nodeType":"YulIf","src":"8642:112:31"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8800:3:31"},{"name":"dst","nodeType":"YulIdentifier","src":"8805:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8810:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8763:36:31"},"nodeType":"YulFunctionCall","src":"8763:54:31"},"nodeType":"YulExpressionStatement","src":"8763:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8456:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8461:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"8469:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8477:5:31","type":""}],"src":"8400:423:31"},{"body":{"nodeType":"YulBlock","src":"8903:277:31","statements":[{"body":{"nodeType":"YulBlock","src":"8952:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8954:77:31"},"nodeType":"YulFunctionCall","src":"8954:79:31"},"nodeType":"YulExpressionStatement","src":"8954:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8931:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8939:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8927:3:31"},"nodeType":"YulFunctionCall","src":"8927:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"8946:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8923:3:31"},"nodeType":"YulFunctionCall","src":"8923:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8916:6:31"},"nodeType":"YulFunctionCall","src":"8916:35:31"},"nodeType":"YulIf","src":"8913:122:31"},{"nodeType":"YulVariableDeclaration","src":"9044:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9071:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9058:12:31"},"nodeType":"YulFunctionCall","src":"9058:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9048:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9087:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9147:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9155:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9143:3:31"},"nodeType":"YulFunctionCall","src":"9143:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"9162:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"9170:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9096:46:31"},"nodeType":"YulFunctionCall","src":"9096:78:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9087:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8881:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"8889:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8897:5:31","type":""}],"src":"8842:338:31"},{"body":{"nodeType":"YulBlock","src":"9379:1316:31","statements":[{"body":{"nodeType":"YulBlock","src":"9426:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9428:77:31"},"nodeType":"YulFunctionCall","src":"9428:79:31"},"nodeType":"YulExpressionStatement","src":"9428:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9400:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9396:3:31"},"nodeType":"YulFunctionCall","src":"9396:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"9421:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9392:3:31"},"nodeType":"YulFunctionCall","src":"9392:33:31"},"nodeType":"YulIf","src":"9389:120:31"},{"nodeType":"YulBlock","src":"9519:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9534:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9548:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9538:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9563:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9598:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9609:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9594:3:31"},"nodeType":"YulFunctionCall","src":"9594:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9618:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9573:20:31"},"nodeType":"YulFunctionCall","src":"9573:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9563:6:31"}]}]},{"nodeType":"YulBlock","src":"9646:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9661:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9675:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9665:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9691:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9726:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9737:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9722:3:31"},"nodeType":"YulFunctionCall","src":"9722:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9746:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9701:20:31"},"nodeType":"YulFunctionCall","src":"9701:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9691:6:31"}]}]},{"nodeType":"YulBlock","src":"9774:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9789:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9820:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9831:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9816:3:31"},"nodeType":"YulFunctionCall","src":"9816:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9803:12:31"},"nodeType":"YulFunctionCall","src":"9803:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9793:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9882:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9884:77:31"},"nodeType":"YulFunctionCall","src":"9884:79:31"},"nodeType":"YulExpressionStatement","src":"9884:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9854:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9862:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9851:2:31"},"nodeType":"YulFunctionCall","src":"9851:30:31"},"nodeType":"YulIf","src":"9848:117:31"},{"nodeType":"YulAssignment","src":"9979:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10039:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"10050:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10035:3:31"},"nodeType":"YulFunctionCall","src":"10035:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10059:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9989:45:31"},"nodeType":"YulFunctionCall","src":"9989:78:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9979:6:31"}]}]},{"nodeType":"YulBlock","src":"10087:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10102:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10133:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10144:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10129:3:31"},"nodeType":"YulFunctionCall","src":"10129:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10116:12:31"},"nodeType":"YulFunctionCall","src":"10116:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10106:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"10195:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10197:77:31"},"nodeType":"YulFunctionCall","src":"10197:79:31"},"nodeType":"YulExpressionStatement","src":"10197:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10167:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10175:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10164:2:31"},"nodeType":"YulFunctionCall","src":"10164:30:31"},"nodeType":"YulIf","src":"10161:117:31"},{"nodeType":"YulAssignment","src":"10292:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10352:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"10363:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10348:3:31"},"nodeType":"YulFunctionCall","src":"10348:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10372:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10302:45:31"},"nodeType":"YulFunctionCall","src":"10302:78:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10292:6:31"}]}]},{"nodeType":"YulBlock","src":"10400:288:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10415:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10446:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10457:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:31"},"nodeType":"YulFunctionCall","src":"10442:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10429:12:31"},"nodeType":"YulFunctionCall","src":"10429:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10419:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"10509:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10511:77:31"},"nodeType":"YulFunctionCall","src":"10511:79:31"},"nodeType":"YulExpressionStatement","src":"10511:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10481:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10489:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10478:2:31"},"nodeType":"YulFunctionCall","src":"10478:30:31"},"nodeType":"YulIf","src":"10475:117:31"},{"nodeType":"YulAssignment","src":"10606:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10650:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"10661:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10646:3:31"},"nodeType":"YulFunctionCall","src":"10646:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10670:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10616:29:31"},"nodeType":"YulFunctionCall","src":"10616:62:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10606:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9317:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9328:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9340:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9348:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9356:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9364:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9372:6:31","type":""}],"src":"9186:1509:31"},{"body":{"nodeType":"YulBlock","src":"10783:229:31","statements":[{"body":{"nodeType":"YulBlock","src":"10888:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10890:16:31"},"nodeType":"YulFunctionCall","src":"10890:18:31"},"nodeType":"YulExpressionStatement","src":"10890:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10860:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10868:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10857:2:31"},"nodeType":"YulFunctionCall","src":"10857:30:31"},"nodeType":"YulIf","src":"10854:56:31"},{"nodeType":"YulAssignment","src":"10920:25:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10932:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10940:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10928:3:31"},"nodeType":"YulFunctionCall","src":"10928:17:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10920:4:31"}]},{"nodeType":"YulAssignment","src":"10982:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10994:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"11000:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10990:3:31"},"nodeType":"YulFunctionCall","src":"10990:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10982:4:31"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10767:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10778:4:31","type":""}],"src":"10701:311:31"},{"body":{"nodeType":"YulBlock","src":"11137:608:31","statements":[{"nodeType":"YulAssignment","src":"11147:90:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11229:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11172:56:31"},"nodeType":"YulFunctionCall","src":"11172:64:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11156:15:31"},"nodeType":"YulFunctionCall","src":"11156:81:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11147:5:31"}]},{"nodeType":"YulVariableDeclaration","src":"11246:16:31","value":{"name":"array","nodeType":"YulIdentifier","src":"11257:5:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11250:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11279:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"11286:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11272:6:31"},"nodeType":"YulFunctionCall","src":"11272:21:31"},"nodeType":"YulExpressionStatement","src":"11272:21:31"},{"nodeType":"YulAssignment","src":"11302:23:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11313:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11320:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11309:3:31"},"nodeType":"YulFunctionCall","src":"11309:16:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11302:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"11335:44:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11353:6:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11365:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11373:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11361:3:31"},"nodeType":"YulFunctionCall","src":"11361:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11349:3:31"},"nodeType":"YulFunctionCall","src":"11349:30:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"11339:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11407:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"11421:77:31"},"nodeType":"YulFunctionCall","src":"11421:79:31"},"nodeType":"YulExpressionStatement","src":"11421:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"11394:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"11402:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11391:2:31"},"nodeType":"YulFunctionCall","src":"11391:15:31"},"nodeType":"YulIf","src":"11388:122:31"},{"body":{"nodeType":"YulBlock","src":"11595:144:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11610:21:31","value":{"name":"src","nodeType":"YulIdentifier","src":"11628:3:31"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11614:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11652:3:31"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11678:10:31"},{"name":"end","nodeType":"YulIdentifier","src":"11690:3:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11657:20:31"},"nodeType":"YulFunctionCall","src":"11657:37:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11645:6:31"},"nodeType":"YulFunctionCall","src":"11645:50:31"},"nodeType":"YulExpressionStatement","src":"11645:50:31"},{"nodeType":"YulAssignment","src":"11708:21:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11719:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"11724:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:31"},"nodeType":"YulFunctionCall","src":"11715:14:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11708:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11548:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11553:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11545:2:31"},"nodeType":"YulFunctionCall","src":"11545:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11561:25:31","statements":[{"nodeType":"YulAssignment","src":"11563:21:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11574:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"11579:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11570:3:31"},"nodeType":"YulFunctionCall","src":"11570:14:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11563:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"11523:21:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11525:17:31","value":{"name":"offset","nodeType":"YulIdentifier","src":"11536:6:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11529:3:31","type":""}]}]},"src":"11519:220:31"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11107:6:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"11115:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11123:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11131:5:31","type":""}],"src":"11035:710:31"},{"body":{"nodeType":"YulBlock","src":"11845:293:31","statements":[{"body":{"nodeType":"YulBlock","src":"11894:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11896:77:31"},"nodeType":"YulFunctionCall","src":"11896:79:31"},"nodeType":"YulExpressionStatement","src":"11896:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11873:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11881:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11869:3:31"},"nodeType":"YulFunctionCall","src":"11869:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"11888:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11865:3:31"},"nodeType":"YulFunctionCall","src":"11865:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11858:6:31"},"nodeType":"YulFunctionCall","src":"11858:35:31"},"nodeType":"YulIf","src":"11855:122:31"},{"nodeType":"YulVariableDeclaration","src":"11986:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12013:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12000:12:31"},"nodeType":"YulFunctionCall","src":"12000:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11990:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12029:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12105:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12113:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12101:3:31"},"nodeType":"YulFunctionCall","src":"12101:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"12120:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"12128:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12038:62:31"},"nodeType":"YulFunctionCall","src":"12038:94:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12029:5:31"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11823:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11831:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11839:5:31","type":""}],"src":"11768:370:31"},{"body":{"nodeType":"YulBlock","src":"12277:761:31","statements":[{"body":{"nodeType":"YulBlock","src":"12323:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12325:77:31"},"nodeType":"YulFunctionCall","src":"12325:79:31"},"nodeType":"YulExpressionStatement","src":"12325:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12298:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12307:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12294:3:31"},"nodeType":"YulFunctionCall","src":"12294:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12319:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12290:3:31"},"nodeType":"YulFunctionCall","src":"12290:32:31"},"nodeType":"YulIf","src":"12287:119:31"},{"nodeType":"YulBlock","src":"12416:302:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12431:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12462:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12473:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12458:3:31"},"nodeType":"YulFunctionCall","src":"12458:17:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12445:12:31"},"nodeType":"YulFunctionCall","src":"12445:31:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12435:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"12523:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12525:77:31"},"nodeType":"YulFunctionCall","src":"12525:79:31"},"nodeType":"YulExpressionStatement","src":"12525:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12495:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12503:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12492:2:31"},"nodeType":"YulFunctionCall","src":"12492:30:31"},"nodeType":"YulIf","src":"12489:117:31"},{"nodeType":"YulAssignment","src":"12620:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12680:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12691:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12676:3:31"},"nodeType":"YulFunctionCall","src":"12676:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12700:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12630:45:31"},"nodeType":"YulFunctionCall","src":"12630:78:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12620:6:31"}]}]},{"nodeType":"YulBlock","src":"12728:303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12743:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12774:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12785:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12770:3:31"},"nodeType":"YulFunctionCall","src":"12770:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12757:12:31"},"nodeType":"YulFunctionCall","src":"12757:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12747:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"12836:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12838:77:31"},"nodeType":"YulFunctionCall","src":"12838:79:31"},"nodeType":"YulExpressionStatement","src":"12838:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12808:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12816:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12805:2:31"},"nodeType":"YulFunctionCall","src":"12805:30:31"},"nodeType":"YulIf","src":"12802:117:31"},{"nodeType":"YulAssignment","src":"12933:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12993:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"13004:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12989:3:31"},"nodeType":"YulFunctionCall","src":"12989:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13013:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12943:45:31"},"nodeType":"YulFunctionCall","src":"12943:78:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12933:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12239:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12250:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12262:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12270:6:31","type":""}],"src":"12144:894:31"},{"body":{"nodeType":"YulBlock","src":"13118:40:31","statements":[{"nodeType":"YulAssignment","src":"13129:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13145:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13139:5:31"},"nodeType":"YulFunctionCall","src":"13139:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13129:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13101:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13111:6:31","type":""}],"src":"13044:114:31"},{"body":{"nodeType":"YulBlock","src":"13275:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13292:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"13297:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:31"},"nodeType":"YulFunctionCall","src":"13285:19:31"},"nodeType":"YulExpressionStatement","src":"13285:19:31"},{"nodeType":"YulAssignment","src":"13313:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13332:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13337:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13328:3:31"},"nodeType":"YulFunctionCall","src":"13328:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13313:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13247:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"13252:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13263:11:31","type":""}],"src":"13164:184:31"},{"body":{"nodeType":"YulBlock","src":"13426:60:31","statements":[{"nodeType":"YulAssignment","src":"13436:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13444:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13436:4:31"}]},{"nodeType":"YulAssignment","src":"13457:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13469:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13474:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13465:3:31"},"nodeType":"YulFunctionCall","src":"13465:14:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13457:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13413:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13421:4:31","type":""}],"src":"13354:132:31"},{"body":{"nodeType":"YulBlock","src":"13547:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13564:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13587:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13569:17:31"},"nodeType":"YulFunctionCall","src":"13569:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13557:6:31"},"nodeType":"YulFunctionCall","src":"13557:37:31"},"nodeType":"YulExpressionStatement","src":"13557:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13535:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13542:3:31","type":""}],"src":"13492:108:31"},{"body":{"nodeType":"YulBlock","src":"13686:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13730:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"13738:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13696:33:31"},"nodeType":"YulFunctionCall","src":"13696:46:31"},"nodeType":"YulExpressionStatement","src":"13696:46:31"},{"nodeType":"YulAssignment","src":"13751:28:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13769:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13774:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13765:3:31"},"nodeType":"YulFunctionCall","src":"13765:14:31"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13751:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13659:6:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13667:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13675:10:31","type":""}],"src":"13606:179:31"},{"body":{"nodeType":"YulBlock","src":"13866:38:31","statements":[{"nodeType":"YulAssignment","src":"13876:22:31","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13888:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"13893:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13884:3:31"},"nodeType":"YulFunctionCall","src":"13884:14:31"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13876:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13853:3:31","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13861:4:31","type":""}],"src":"13791:113:31"},{"body":{"nodeType":"YulBlock","src":"14064:608:31","statements":[{"nodeType":"YulVariableDeclaration","src":"14074:68:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14136:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14088:47:31"},"nodeType":"YulFunctionCall","src":"14088:54:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14078:6:31","type":""}]},{"nodeType":"YulAssignment","src":"14151:93:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14232:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"14237:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14158:73:31"},"nodeType":"YulFunctionCall","src":"14158:86:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14151:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"14253:71:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14318:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14268:49:31"},"nodeType":"YulFunctionCall","src":"14268:56:31"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14257:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14333:21:31","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14347:7:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14337:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"14423:224:31","statements":[{"nodeType":"YulVariableDeclaration","src":"14437:34:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14464:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14458:5:31"},"nodeType":"YulFunctionCall","src":"14458:13:31"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14441:13:31","type":""}]},{"nodeType":"YulAssignment","src":"14484:70:31","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14535:13:31"},{"name":"pos","nodeType":"YulIdentifier","src":"14550:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14491:43:31"},"nodeType":"YulFunctionCall","src":"14491:63:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14484:3:31"}]},{"nodeType":"YulAssignment","src":"14567:70:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14630:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14577:52:31"},"nodeType":"YulFunctionCall","src":"14577:60:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14567:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14385:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"14388:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14382:2:31"},"nodeType":"YulFunctionCall","src":"14382:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14396:18:31","statements":[{"nodeType":"YulAssignment","src":"14398:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14407:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"14410:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14403:3:31"},"nodeType":"YulFunctionCall","src":"14403:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14398:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"14367:14:31","statements":[{"nodeType":"YulVariableDeclaration","src":"14369:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"14378:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14373:1:31","type":""}]}]},"src":"14363:284:31"},{"nodeType":"YulAssignment","src":"14656:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"14663:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14043:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14050:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14059:3:31","type":""}],"src":"13940:732:31"},{"body":{"nodeType":"YulBlock","src":"14826:225:31","statements":[{"nodeType":"YulAssignment","src":"14836:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14848:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14859:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14844:3:31"},"nodeType":"YulFunctionCall","src":"14844:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14836:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14883:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14894:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14879:3:31"},"nodeType":"YulFunctionCall","src":"14879:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14902:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14908:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14898:3:31"},"nodeType":"YulFunctionCall","src":"14898:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14872:6:31"},"nodeType":"YulFunctionCall","src":"14872:47:31"},"nodeType":"YulExpressionStatement","src":"14872:47:31"},{"nodeType":"YulAssignment","src":"14928:116:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15030:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"15039:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14936:93:31"},"nodeType":"YulFunctionCall","src":"14936:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14928:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14798:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14810:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14821:4:31","type":""}],"src":"14678:373:31"},{"body":{"nodeType":"YulBlock","src":"15122:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15139:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15162:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15144:17:31"},"nodeType":"YulFunctionCall","src":"15144:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15132:6:31"},"nodeType":"YulFunctionCall","src":"15132:37:31"},"nodeType":"YulExpressionStatement","src":"15132:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15110:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15117:3:31","type":""}],"src":"15057:118:31"},{"body":{"nodeType":"YulBlock","src":"15279:124:31","statements":[{"nodeType":"YulAssignment","src":"15289:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15301:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15312:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15297:3:31"},"nodeType":"YulFunctionCall","src":"15297:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15289:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15369:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15382:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15393:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15378:3:31"},"nodeType":"YulFunctionCall","src":"15378:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15325:43:31"},"nodeType":"YulFunctionCall","src":"15325:71:31"},"nodeType":"YulExpressionStatement","src":"15325:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15251:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15263:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15274:4:31","type":""}],"src":"15181:222:31"},{"body":{"nodeType":"YulBlock","src":"15449:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"15503:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15512:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15515:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15505:6:31"},"nodeType":"YulFunctionCall","src":"15505:12:31"},"nodeType":"YulExpressionStatement","src":"15505:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15472:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15494:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15479:14:31"},"nodeType":"YulFunctionCall","src":"15479:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15469:2:31"},"nodeType":"YulFunctionCall","src":"15469:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15462:6:31"},"nodeType":"YulFunctionCall","src":"15462:40:31"},"nodeType":"YulIf","src":"15459:60:31"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15442:5:31","type":""}],"src":"15409:116:31"},{"body":{"nodeType":"YulBlock","src":"15580:84:31","statements":[{"nodeType":"YulAssignment","src":"15590:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15612:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15599:12:31"},"nodeType":"YulFunctionCall","src":"15599:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15590:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15652:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15628:23:31"},"nodeType":"YulFunctionCall","src":"15628:30:31"},"nodeType":"YulExpressionStatement","src":"15628:30:31"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15558:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"15566:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15574:5:31","type":""}],"src":"15531:133:31"},{"body":{"nodeType":"YulBlock","src":"15750:388:31","statements":[{"body":{"nodeType":"YulBlock","src":"15796:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15798:77:31"},"nodeType":"YulFunctionCall","src":"15798:79:31"},"nodeType":"YulExpressionStatement","src":"15798:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15771:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"15780:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15767:3:31"},"nodeType":"YulFunctionCall","src":"15767:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"15792:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15763:3:31"},"nodeType":"YulFunctionCall","src":"15763:32:31"},"nodeType":"YulIf","src":"15760:119:31"},{"nodeType":"YulBlock","src":"15889:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15904:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15918:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15908:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15933:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15968:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15979:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15964:3:31"},"nodeType":"YulFunctionCall","src":"15964:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15988:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15943:20:31"},"nodeType":"YulFunctionCall","src":"15943:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15933:6:31"}]}]},{"nodeType":"YulBlock","src":"16016:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16031:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16045:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16035:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16061:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16093:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16104:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16089:3:31"},"nodeType":"YulFunctionCall","src":"16089:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16113:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"16071:17:31"},"nodeType":"YulFunctionCall","src":"16071:50:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16061:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15712:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15723:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15735:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15743:6:31","type":""}],"src":"15670:468:31"},{"body":{"nodeType":"YulBlock","src":"16227:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"16273:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16275:77:31"},"nodeType":"YulFunctionCall","src":"16275:79:31"},"nodeType":"YulExpressionStatement","src":"16275:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16248:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"16257:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16244:3:31"},"nodeType":"YulFunctionCall","src":"16244:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"16269:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16240:3:31"},"nodeType":"YulFunctionCall","src":"16240:32:31"},"nodeType":"YulIf","src":"16237:119:31"},{"nodeType":"YulBlock","src":"16366:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16381:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16395:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16385:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16410:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16445:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16456:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16441:3:31"},"nodeType":"YulFunctionCall","src":"16441:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16465:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16420:20:31"},"nodeType":"YulFunctionCall","src":"16420:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16410:6:31"}]}]},{"nodeType":"YulBlock","src":"16493:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16508:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16522:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16512:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16538:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16573:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16584:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16569:3:31"},"nodeType":"YulFunctionCall","src":"16569:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16593:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16548:20:31"},"nodeType":"YulFunctionCall","src":"16548:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16538:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16189:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16200:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16212:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16220:6:31","type":""}],"src":"16144:474:31"},{"body":{"nodeType":"YulBlock","src":"16767:946:31","statements":[{"body":{"nodeType":"YulBlock","src":"16814:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16816:77:31"},"nodeType":"YulFunctionCall","src":"16816:79:31"},"nodeType":"YulExpressionStatement","src":"16816:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16788:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"16797:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16784:3:31"},"nodeType":"YulFunctionCall","src":"16784:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"16809:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16780:3:31"},"nodeType":"YulFunctionCall","src":"16780:33:31"},"nodeType":"YulIf","src":"16777:120:31"},{"nodeType":"YulBlock","src":"16907:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16922:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"16936:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16926:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16951:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16986:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"16997:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16982:3:31"},"nodeType":"YulFunctionCall","src":"16982:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17006:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16961:20:31"},"nodeType":"YulFunctionCall","src":"16961:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16951:6:31"}]}]},{"nodeType":"YulBlock","src":"17034:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17049:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17063:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17053:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17079:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17114:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17125:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17110:3:31"},"nodeType":"YulFunctionCall","src":"17110:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17134:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17089:20:31"},"nodeType":"YulFunctionCall","src":"17089:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17079:6:31"}]}]},{"nodeType":"YulBlock","src":"17162:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17177:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17191:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17181:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17207:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17242:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17253:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:31"},"nodeType":"YulFunctionCall","src":"17238:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17262:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17217:20:31"},"nodeType":"YulFunctionCall","src":"17217:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17207:6:31"}]}]},{"nodeType":"YulBlock","src":"17290:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17305:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17319:2:31","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17309:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17335:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17370:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17381:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17366:3:31"},"nodeType":"YulFunctionCall","src":"17366:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17390:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17345:20:31"},"nodeType":"YulFunctionCall","src":"17345:53:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17335:6:31"}]}]},{"nodeType":"YulBlock","src":"17418:288:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17433:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17464:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17475:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17460:3:31"},"nodeType":"YulFunctionCall","src":"17460:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17447:12:31"},"nodeType":"YulFunctionCall","src":"17447:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17437:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"17527:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17529:77:31"},"nodeType":"YulFunctionCall","src":"17529:79:31"},"nodeType":"YulExpressionStatement","src":"17529:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17499:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"17507:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17496:2:31"},"nodeType":"YulFunctionCall","src":"17496:30:31"},"nodeType":"YulIf","src":"17493:117:31"},{"nodeType":"YulAssignment","src":"17624:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17668:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17679:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17664:3:31"},"nodeType":"YulFunctionCall","src":"17664:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17688:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17634:29:31"},"nodeType":"YulFunctionCall","src":"17634:62:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17624:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16705:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16716:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16728:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16736:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16744:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16752:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16760:6:31","type":""}],"src":"16624:1089:31"},{"body":{"nodeType":"YulBlock","src":"17785:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"17831:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17833:77:31"},"nodeType":"YulFunctionCall","src":"17833:79:31"},"nodeType":"YulExpressionStatement","src":"17833:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17806:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17815:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17802:3:31"},"nodeType":"YulFunctionCall","src":"17802:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"17827:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17798:3:31"},"nodeType":"YulFunctionCall","src":"17798:32:31"},"nodeType":"YulIf","src":"17795:119:31"},{"nodeType":"YulBlock","src":"17924:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17939:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17953:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17943:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17968:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18003:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"18014:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17999:3:31"},"nodeType":"YulFunctionCall","src":"17999:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18023:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17978:20:31"},"nodeType":"YulFunctionCall","src":"17978:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17968:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17755:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17766:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17778:6:31","type":""}],"src":"17719:329:31"},{"body":{"nodeType":"YulBlock","src":"18082:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18099:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18102:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18092:6:31"},"nodeType":"YulFunctionCall","src":"18092:88:31"},"nodeType":"YulExpressionStatement","src":"18092:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18196:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18199:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18189:6:31"},"nodeType":"YulFunctionCall","src":"18189:15:31"},"nodeType":"YulExpressionStatement","src":"18189:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18220:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18223:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18213:6:31"},"nodeType":"YulFunctionCall","src":"18213:15:31"},"nodeType":"YulExpressionStatement","src":"18213:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18054:180:31"},{"body":{"nodeType":"YulBlock","src":"18291:269:31","statements":[{"nodeType":"YulAssignment","src":"18301:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18315:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"18321:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18311:3:31"},"nodeType":"YulFunctionCall","src":"18311:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18301:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"18332:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18362:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"18368:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18358:3:31"},"nodeType":"YulFunctionCall","src":"18358:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18336:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"18409:51:31","statements":[{"nodeType":"YulAssignment","src":"18423:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18437:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18445:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18433:3:31"},"nodeType":"YulFunctionCall","src":"18433:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18423:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18389:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18382:6:31"},"nodeType":"YulFunctionCall","src":"18382:26:31"},"nodeType":"YulIf","src":"18379:81:31"},{"body":{"nodeType":"YulBlock","src":"18512:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18526:16:31"},"nodeType":"YulFunctionCall","src":"18526:18:31"},"nodeType":"YulExpressionStatement","src":"18526:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18476:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18499:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"18507:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18496:2:31"},"nodeType":"YulFunctionCall","src":"18496:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18473:2:31"},"nodeType":"YulFunctionCall","src":"18473:38:31"},"nodeType":"YulIf","src":"18470:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18275:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18284:6:31","type":""}],"src":"18240:320:31"},{"body":{"nodeType":"YulBlock","src":"18692:206:31","statements":[{"nodeType":"YulAssignment","src":"18702:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18714:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18725:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18710:3:31"},"nodeType":"YulFunctionCall","src":"18710:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18702:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18782:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18795:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18806:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18791:3:31"},"nodeType":"YulFunctionCall","src":"18791:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18738:43:31"},"nodeType":"YulFunctionCall","src":"18738:71:31"},"nodeType":"YulExpressionStatement","src":"18738:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18863:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18876:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18887:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18872:3:31"},"nodeType":"YulFunctionCall","src":"18872:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18819:43:31"},"nodeType":"YulFunctionCall","src":"18819:72:31"},"nodeType":"YulExpressionStatement","src":"18819:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18656:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18668:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18676:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18687:4:31","type":""}],"src":"18566:332:31"},{"body":{"nodeType":"YulBlock","src":"19030:206:31","statements":[{"nodeType":"YulAssignment","src":"19040:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19052:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19063:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19048:3:31"},"nodeType":"YulFunctionCall","src":"19048:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19040:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19120:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19133:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19144:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19129:3:31"},"nodeType":"YulFunctionCall","src":"19129:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19076:43:31"},"nodeType":"YulFunctionCall","src":"19076:71:31"},"nodeType":"YulExpressionStatement","src":"19076:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19201:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19214:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19225:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19210:3:31"},"nodeType":"YulFunctionCall","src":"19210:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19157:43:31"},"nodeType":"YulFunctionCall","src":"19157:72:31"},"nodeType":"YulExpressionStatement","src":"19157:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18994:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19006:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19014:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19025:4:31","type":""}],"src":"18904:332:31"},{"body":{"nodeType":"YulBlock","src":"19270:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19287:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19290:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19280:6:31"},"nodeType":"YulFunctionCall","src":"19280:88:31"},"nodeType":"YulExpressionStatement","src":"19280:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19384:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19387:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19377:6:31"},"nodeType":"YulFunctionCall","src":"19377:15:31"},"nodeType":"YulExpressionStatement","src":"19377:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19408:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19411:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19401:6:31"},"nodeType":"YulFunctionCall","src":"19401:15:31"},"nodeType":"YulExpressionStatement","src":"19401:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19242:180:31"},{"body":{"nodeType":"YulBlock","src":"19456:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19473:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19476:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19466:6:31"},"nodeType":"YulFunctionCall","src":"19466:88:31"},"nodeType":"YulExpressionStatement","src":"19466:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19570:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19573:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19563:6:31"},"nodeType":"YulFunctionCall","src":"19563:15:31"},"nodeType":"YulExpressionStatement","src":"19563:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19594:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19597:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19587:6:31"},"nodeType":"YulFunctionCall","src":"19587:15:31"},"nodeType":"YulExpressionStatement","src":"19587:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19428:180:31"},{"body":{"nodeType":"YulBlock","src":"19657:190:31","statements":[{"nodeType":"YulAssignment","src":"19667:33:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19694:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19676:17:31"},"nodeType":"YulFunctionCall","src":"19676:24:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19667:5:31"}]},{"body":{"nodeType":"YulBlock","src":"19790:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19792:16:31"},"nodeType":"YulFunctionCall","src":"19792:18:31"},"nodeType":"YulExpressionStatement","src":"19792:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19715:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"19722:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19712:2:31"},"nodeType":"YulFunctionCall","src":"19712:77:31"},"nodeType":"YulIf","src":"19709:103:31"},{"nodeType":"YulAssignment","src":"19821:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19832:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"19839:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19828:3:31"},"nodeType":"YulFunctionCall","src":"19828:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19821:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19643:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19653:3:31","type":""}],"src":"19614:233:31"},{"body":{"nodeType":"YulBlock","src":"20035:371:31","statements":[{"nodeType":"YulAssignment","src":"20045:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20057:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20068:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20053:3:31"},"nodeType":"YulFunctionCall","src":"20053:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20045:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20126:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20139:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20150:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20135:3:31"},"nodeType":"YulFunctionCall","src":"20135:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20082:43:31"},"nodeType":"YulFunctionCall","src":"20082:71:31"},"nodeType":"YulExpressionStatement","src":"20082:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20207:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20220:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20231:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20216:3:31"},"nodeType":"YulFunctionCall","src":"20216:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20163:43:31"},"nodeType":"YulFunctionCall","src":"20163:72:31"},"nodeType":"YulExpressionStatement","src":"20163:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20289:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20302:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20313:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20298:3:31"},"nodeType":"YulFunctionCall","src":"20298:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20245:43:31"},"nodeType":"YulFunctionCall","src":"20245:72:31"},"nodeType":"YulExpressionStatement","src":"20245:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20371:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20384:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20395:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20380:3:31"},"nodeType":"YulFunctionCall","src":"20380:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20327:43:31"},"nodeType":"YulFunctionCall","src":"20327:72:31"},"nodeType":"YulExpressionStatement","src":"20327:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19983:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19995:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20003:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20011:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20019:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20030:4:31","type":""}],"src":"19853:553:31"},{"body":{"nodeType":"YulBlock","src":"20456:147:31","statements":[{"nodeType":"YulAssignment","src":"20466:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20489:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20471:17:31"},"nodeType":"YulFunctionCall","src":"20471:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20466:1:31"}]},{"nodeType":"YulAssignment","src":"20500:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20523:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20505:17:31"},"nodeType":"YulFunctionCall","src":"20505:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20500:1:31"}]},{"nodeType":"YulAssignment","src":"20534:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20545:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"20548:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20541:3:31"},"nodeType":"YulFunctionCall","src":"20541:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20534:3:31"}]},{"body":{"nodeType":"YulBlock","src":"20574:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20576:16:31"},"nodeType":"YulFunctionCall","src":"20576:18:31"},"nodeType":"YulExpressionStatement","src":"20576:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20566:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"20569:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20563:2:31"},"nodeType":"YulFunctionCall","src":"20563:10:31"},"nodeType":"YulIf","src":"20560:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20443:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"20446:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20452:3:31","type":""}],"src":"20412:191:31"},{"body":{"nodeType":"YulBlock","src":"20835:408:31","statements":[{"nodeType":"YulAssignment","src":"20845:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20857:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20868:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20853:3:31"},"nodeType":"YulFunctionCall","src":"20853:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20845:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20892:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20903:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20888:3:31"},"nodeType":"YulFunctionCall","src":"20888:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20911:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"20917:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20907:3:31"},"nodeType":"YulFunctionCall","src":"20907:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20881:6:31"},"nodeType":"YulFunctionCall","src":"20881:47:31"},"nodeType":"YulExpressionStatement","src":"20881:47:31"},{"nodeType":"YulAssignment","src":"20937:116:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21039:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"21048:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20945:93:31"},"nodeType":"YulFunctionCall","src":"20945:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20937:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21074:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21085:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21070:3:31"},"nodeType":"YulFunctionCall","src":"21070:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21094:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"21100:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21090:3:31"},"nodeType":"YulFunctionCall","src":"21090:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21063:6:31"},"nodeType":"YulFunctionCall","src":"21063:48:31"},"nodeType":"YulExpressionStatement","src":"21063:48:31"},{"nodeType":"YulAssignment","src":"21120:116:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21222:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"21231:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21128:93:31"},"nodeType":"YulFunctionCall","src":"21128:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21120:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20799:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20811:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20819:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20830:4:31","type":""}],"src":"20609:634:31"},{"body":{"nodeType":"YulBlock","src":"21307:40:31","statements":[{"nodeType":"YulAssignment","src":"21318:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21334:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21328:5:31"},"nodeType":"YulFunctionCall","src":"21328:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21318:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21290:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21300:6:31","type":""}],"src":"21249:98:31"},{"body":{"nodeType":"YulBlock","src":"21448:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21465:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"21470:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21458:6:31"},"nodeType":"YulFunctionCall","src":"21458:19:31"},"nodeType":"YulExpressionStatement","src":"21458:19:31"},{"nodeType":"YulAssignment","src":"21486:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21505:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"21510:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21501:3:31"},"nodeType":"YulFunctionCall","src":"21501:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21486:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21420:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"21425:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21436:11:31","type":""}],"src":"21353:168:31"},{"body":{"nodeType":"YulBlock","src":"21617:283:31","statements":[{"nodeType":"YulVariableDeclaration","src":"21627:52:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21673:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21641:31:31"},"nodeType":"YulFunctionCall","src":"21641:38:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21631:6:31","type":""}]},{"nodeType":"YulAssignment","src":"21688:77:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21753:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"21758:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21695:57:31"},"nodeType":"YulFunctionCall","src":"21695:70:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21688:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21813:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"21820:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21809:3:31"},"nodeType":"YulFunctionCall","src":"21809:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"21827:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"21832:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21774:34:31"},"nodeType":"YulFunctionCall","src":"21774:65:31"},"nodeType":"YulExpressionStatement","src":"21774:65:31"},{"nodeType":"YulAssignment","src":"21848:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21859:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21886:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21864:21:31"},"nodeType":"YulFunctionCall","src":"21864:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21855:3:31"},"nodeType":"YulFunctionCall","src":"21855:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21848:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21598:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21605:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21613:3:31","type":""}],"src":"21527:373:31"},{"body":{"nodeType":"YulBlock","src":"22134:523:31","statements":[{"nodeType":"YulAssignment","src":"22144:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22156:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22167:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22152:3:31"},"nodeType":"YulFunctionCall","src":"22152:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22144:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22225:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22238:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22249:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22234:3:31"},"nodeType":"YulFunctionCall","src":"22234:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22181:43:31"},"nodeType":"YulFunctionCall","src":"22181:71:31"},"nodeType":"YulExpressionStatement","src":"22181:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22306:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22319:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22330:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22315:3:31"},"nodeType":"YulFunctionCall","src":"22315:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22262:43:31"},"nodeType":"YulFunctionCall","src":"22262:72:31"},"nodeType":"YulExpressionStatement","src":"22262:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22388:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22401:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22412:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22397:3:31"},"nodeType":"YulFunctionCall","src":"22397:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22344:43:31"},"nodeType":"YulFunctionCall","src":"22344:72:31"},"nodeType":"YulExpressionStatement","src":"22344:72:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22470:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22483:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22494:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22479:3:31"},"nodeType":"YulFunctionCall","src":"22479:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22426:43:31"},"nodeType":"YulFunctionCall","src":"22426:72:31"},"nodeType":"YulExpressionStatement","src":"22426:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22519:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22530:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22515:3:31"},"nodeType":"YulFunctionCall","src":"22515:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22540:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"22546:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22536:3:31"},"nodeType":"YulFunctionCall","src":"22536:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22508:6:31"},"nodeType":"YulFunctionCall","src":"22508:49:31"},"nodeType":"YulExpressionStatement","src":"22508:49:31"},{"nodeType":"YulAssignment","src":"22566:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22636:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"22645:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22574:61:31"},"nodeType":"YulFunctionCall","src":"22574:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22566:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22074:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22086:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22094:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22102:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22110:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22118:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22129:4:31","type":""}],"src":"21906:751:31"},{"body":{"nodeType":"YulBlock","src":"22725:79:31","statements":[{"nodeType":"YulAssignment","src":"22735:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22750:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22744:5:31"},"nodeType":"YulFunctionCall","src":"22744:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22735:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22792:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22766:25:31"},"nodeType":"YulFunctionCall","src":"22766:32:31"},"nodeType":"YulExpressionStatement","src":"22766:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22703:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"22711:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22719:5:31","type":""}],"src":"22663:141:31"},{"body":{"nodeType":"YulBlock","src":"22886:273:31","statements":[{"body":{"nodeType":"YulBlock","src":"22932:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22934:77:31"},"nodeType":"YulFunctionCall","src":"22934:79:31"},"nodeType":"YulExpressionStatement","src":"22934:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22907:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"22916:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22903:3:31"},"nodeType":"YulFunctionCall","src":"22903:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"22928:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22899:3:31"},"nodeType":"YulFunctionCall","src":"22899:32:31"},"nodeType":"YulIf","src":"22896:119:31"},{"nodeType":"YulBlock","src":"23025:127:31","statements":[{"nodeType":"YulVariableDeclaration","src":"23040:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"23054:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23044:6:31","type":""}]},{"nodeType":"YulAssignment","src":"23069:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23114:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"23125:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23110:3:31"},"nodeType":"YulFunctionCall","src":"23110:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23134:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23079:30:31"},"nodeType":"YulFunctionCall","src":"23079:63:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23069:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22856:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22867:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22879:6:31","type":""}],"src":"22810:349:31"},{"body":{"nodeType":"YulBlock","src":"23493:725:31","statements":[{"nodeType":"YulAssignment","src":"23503:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23515:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23526:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23511:3:31"},"nodeType":"YulFunctionCall","src":"23511:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23503:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23584:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23597:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23608:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23593:3:31"},"nodeType":"YulFunctionCall","src":"23593:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23540:43:31"},"nodeType":"YulFunctionCall","src":"23540:71:31"},"nodeType":"YulExpressionStatement","src":"23540:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23665:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23678:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23689:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23674:3:31"},"nodeType":"YulFunctionCall","src":"23674:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23621:43:31"},"nodeType":"YulFunctionCall","src":"23621:72:31"},"nodeType":"YulExpressionStatement","src":"23621:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23714:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23725:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23710:3:31"},"nodeType":"YulFunctionCall","src":"23710:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23734:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"23740:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23730:3:31"},"nodeType":"YulFunctionCall","src":"23730:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23703:6:31"},"nodeType":"YulFunctionCall","src":"23703:48:31"},"nodeType":"YulExpressionStatement","src":"23703:48:31"},{"nodeType":"YulAssignment","src":"23760:116:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23862:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"23871:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23768:93:31"},"nodeType":"YulFunctionCall","src":"23768:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23760:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23897:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23908:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23893:3:31"},"nodeType":"YulFunctionCall","src":"23893:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23917:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"23923:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23913:3:31"},"nodeType":"YulFunctionCall","src":"23913:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23886:6:31"},"nodeType":"YulFunctionCall","src":"23886:48:31"},"nodeType":"YulExpressionStatement","src":"23886:48:31"},{"nodeType":"YulAssignment","src":"23943:116:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24045:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"24054:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23951:93:31"},"nodeType":"YulFunctionCall","src":"23951:108:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23943:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24080:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24091:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24076:3:31"},"nodeType":"YulFunctionCall","src":"24076:19:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24101:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"24107:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24097:3:31"},"nodeType":"YulFunctionCall","src":"24097:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24069:6:31"},"nodeType":"YulFunctionCall","src":"24069:49:31"},"nodeType":"YulExpressionStatement","src":"24069:49:31"},{"nodeType":"YulAssignment","src":"24127:84:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24197:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"24206:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24135:61:31"},"nodeType":"YulFunctionCall","src":"24135:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24127:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23433:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23445:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23453:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23461:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23469:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23477:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23488:4:31","type":""}],"src":"23165:1053:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101b05780638da5cb5b146101ba578063a22cb465146101d8578063e985e9c5146101f4578063f242432a14610224578063f2fde38b14610240576100b3565b8062fdd58e146100b857806301ffc9a7146100e85780630e89341c14610118578063156e29f6146101485780632eb2c2d6146101645780634e1273f414610180575b600080fd5b6100d260048036038101906100cd91906116b4565b61025c565b6040516100df9190611703565b60405180910390f35b61010260048036038101906100fd9190611776565b6102b6565b60405161010f91906117be565b60405180910390f35b610132600480360381019061012d91906117d9565b610398565b60405161013f9190611896565b60405180910390f35b610162600480360381019061015d91906118b8565b61042c565b005b61017e60048036038101906101799190611b08565b610454565b005b61019a60048036038101906101959190611c9a565b6104fc565b6040516101a79190611dd0565b60405180910390f35b6101b861060b565b005b6101c261061f565b6040516101cf9190611e01565b60405180910390f35b6101f260048036038101906101ed9190611e48565b610649565b005b61020e60048036038101906102099190611e88565b61065f565b60405161021b91906117be565b60405180910390f35b61023e60048036038101906102399190611ec8565b6106f3565b005b61025a60048036038101906102559190611f5f565b61079b565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038157507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610391575061039082610821565b5b9050919050565b6060600280546103a790611fbb565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611fbb565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b50505050509050919050565b61043461088b565b61044f83838360405180602001604052806000815250610912565b505050565b600061045e6109ab565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104a357506104a1868261065f565b155b156104e75780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016104de929190611fec565b60405180910390fd5b6104f486868686866109b3565b505050505050565b6060815183511461054857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161053f929190612015565b60405180910390fd5b6000835167ffffffffffffffff81111561056557610564611910565b5b6040519080825280602002602001820160405280156105935781602001602082028036833780820191505090505b50905060005b8451811015610600576105d06105b88287610aab90919063ffffffff16565b6105cb8387610abf90919063ffffffff16565b61025c565b8282815181106105e3576105e261203e565b5b602002602001018181525050806105f99061209c565b9050610599565b508091505092915050565b61061361088b565b61061d6000610ad3565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61065b6106546109ab565b8383610b99565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006106fd6109ab565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107425750610740868261065f565b155b156107865780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161077d929190611fec565b60405180910390fd5b6107938686868686610d09565b505050505050565b6107a361088b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108155760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161080c9190611e01565b60405180910390fd5b61081e81610ad3565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108936109ab565b73ffffffffffffffffffffffffffffffffffffffff166108b161061f565b73ffffffffffffffffffffffffffffffffffffffff1614610910576108d46109ab565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109079190611e01565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109845760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161097b9190611e01565b60405180910390fd5b6000806109918585610e14565b915091506109a3600087848487610e44565b505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a255760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a1c9190611e01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a975760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a8e9190611e01565b60405180910390fd5b610aa48585858585610e44565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0b5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c029190611e01565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cfc91906117be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d7b5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d729190611e01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ded5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610de49190611e01565b60405180910390fd5b600080610dfa8585610e14565b91509150610e0b8787848487610e44565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610e5085858585610ef6565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610eef576000610e8e6109ab565b90506001845103610ede576000610eaf600086610abf90919063ffffffff16565b90506000610ec7600086610abf90919063ffffffff16565b9050610ed78389898585896112a4565b5050610eed565b610eec818787878787611458565b5b505b5050505050565b8051825114610f4057815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610f37929190612015565b60405180910390fd5b6000610f4a6109ab565b905060005b835181101561115f576000610f6d8286610abf90919063ffffffff16565b90506000610f848386610abf90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146110b157600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561105957888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161105094939291906120e4565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461114c578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111449190612129565b925050819055505b5050806111589061209c565b9050610f4f565b50600183510361121e57600061117f600085610abf90919063ffffffff16565b90506000611197600085610abf90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161120f929190612015565b60405180910390a4505061129d565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161129492919061215d565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611450578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016113059594939291906121e9565b6020604051808303816000875af192505050801561134157506040513d601f19601f8201168201806040525081019061133e9190612258565b60015b6113c5573d8060008114611371576040519150601f19603f3d011682016040523d82523d6000602084013e611376565b606091505b5060008151036113bd57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113b49190611e01565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461144e57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114459190611e01565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611604578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016114b9959493929190612285565b6020604051808303816000875af19250505080156114f557506040513d601f19601f820116820180604052508101906114f29190612258565b60015b611579573d8060008114611525576040519150601f19603f3d011682016040523d82523d6000602084013e61152a565b606091505b50600081510361157157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115689190611e01565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461160257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115f99190611e01565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061164b82611620565b9050919050565b61165b81611640565b811461166657600080fd5b50565b60008135905061167881611652565b92915050565b6000819050919050565b6116918161167e565b811461169c57600080fd5b50565b6000813590506116ae81611688565b92915050565b600080604083850312156116cb576116ca611616565b5b60006116d985828601611669565b92505060206116ea8582860161169f565b9150509250929050565b6116fd8161167e565b82525050565b600060208201905061171860008301846116f4565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117538161171e565b811461175e57600080fd5b50565b6000813590506117708161174a565b92915050565b60006020828403121561178c5761178b611616565b5b600061179a84828501611761565b91505092915050565b60008115159050919050565b6117b8816117a3565b82525050565b60006020820190506117d360008301846117af565b92915050565b6000602082840312156117ef576117ee611616565b5b60006117fd8482850161169f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611840578082015181840152602081019050611825565b60008484015250505050565b6000601f19601f8301169050919050565b600061186882611806565b6118728185611811565b9350611882818560208601611822565b61188b8161184c565b840191505092915050565b600060208201905081810360008301526118b0818461185d565b905092915050565b6000806000606084860312156118d1576118d0611616565b5b60006118df86828701611669565b93505060206118f08682870161169f565b92505060406119018682870161169f565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119488261184c565b810181811067ffffffffffffffff8211171561196757611966611910565b5b80604052505050565b600061197a61160c565b9050611986828261193f565b919050565b600067ffffffffffffffff8211156119a6576119a5611910565b5b602082029050602081019050919050565b600080fd5b60006119cf6119ca8461198b565b611970565b905080838252602082019050602084028301858111156119f2576119f16119b7565b5b835b81811015611a1b5780611a07888261169f565b8452602084019350506020810190506119f4565b5050509392505050565b600082601f830112611a3a57611a3961190b565b5b8135611a4a8482602086016119bc565b91505092915050565b600080fd5b600067ffffffffffffffff821115611a7357611a72611910565b5b611a7c8261184c565b9050602081019050919050565b82818337600083830152505050565b6000611aab611aa684611a58565b611970565b905082815260208101848484011115611ac757611ac6611a53565b5b611ad2848285611a89565b509392505050565b600082601f830112611aef57611aee61190b565b5b8135611aff848260208601611a98565b91505092915050565b600080600080600060a08688031215611b2457611b23611616565b5b6000611b3288828901611669565b9550506020611b4388828901611669565b945050604086013567ffffffffffffffff811115611b6457611b6361161b565b5b611b7088828901611a25565b935050606086013567ffffffffffffffff811115611b9157611b9061161b565b5b611b9d88828901611a25565b925050608086013567ffffffffffffffff811115611bbe57611bbd61161b565b5b611bca88828901611ada565b9150509295509295909350565b600067ffffffffffffffff821115611bf257611bf1611910565b5b602082029050602081019050919050565b6000611c16611c1184611bd7565b611970565b90508083825260208201905060208402830185811115611c3957611c386119b7565b5b835b81811015611c625780611c4e8882611669565b845260208401935050602081019050611c3b565b5050509392505050565b600082601f830112611c8157611c8061190b565b5b8135611c91848260208601611c03565b91505092915050565b60008060408385031215611cb157611cb0611616565b5b600083013567ffffffffffffffff811115611ccf57611cce61161b565b5b611cdb85828601611c6c565b925050602083013567ffffffffffffffff811115611cfc57611cfb61161b565b5b611d0885828601611a25565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611d478161167e565b82525050565b6000611d598383611d3e565b60208301905092915050565b6000602082019050919050565b6000611d7d82611d12565b611d878185611d1d565b9350611d9283611d2e565b8060005b83811015611dc3578151611daa8882611d4d565b9750611db583611d65565b925050600181019050611d96565b5085935050505092915050565b60006020820190508181036000830152611dea8184611d72565b905092915050565b611dfb81611640565b82525050565b6000602082019050611e166000830184611df2565b92915050565b611e25816117a3565b8114611e3057600080fd5b50565b600081359050611e4281611e1c565b92915050565b60008060408385031215611e5f57611e5e611616565b5b6000611e6d85828601611669565b9250506020611e7e85828601611e33565b9150509250929050565b60008060408385031215611e9f57611e9e611616565b5b6000611ead85828601611669565b9250506020611ebe85828601611669565b9150509250929050565b600080600080600060a08688031215611ee457611ee3611616565b5b6000611ef288828901611669565b9550506020611f0388828901611669565b9450506040611f148882890161169f565b9350506060611f258882890161169f565b925050608086013567ffffffffffffffff811115611f4657611f4561161b565b5b611f5288828901611ada565b9150509295509295909350565b600060208284031215611f7557611f74611616565b5b6000611f8384828501611669565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fd357607f821691505b602082108103611fe657611fe5611f8c565b5b50919050565b60006040820190506120016000830185611df2565b61200e6020830184611df2565b9392505050565b600060408201905061202a60008301856116f4565b61203760208301846116f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120a78261167e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d9576120d861206d565b5b600182019050919050565b60006080820190506120f96000830187611df2565b61210660208301866116f4565b61211360408301856116f4565b61212060608301846116f4565b95945050505050565b60006121348261167e565b915061213f8361167e565b92508282019050808211156121575761215661206d565b5b92915050565b600060408201905081810360008301526121778185611d72565b9050818103602083015261218b8184611d72565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006121bb82612194565b6121c5818561219f565b93506121d5818560208601611822565b6121de8161184c565b840191505092915050565b600060a0820190506121fe6000830188611df2565b61220b6020830187611df2565b61221860408301866116f4565b61222560608301856116f4565b818103608083015261223781846121b0565b90509695505050505050565b6000815190506122528161174a565b92915050565b60006020828403121561226e5761226d611616565b5b600061227c84828501612243565b91505092915050565b600060a08201905061229a6000830188611df2565b6122a76020830187611df2565b81810360408301526122b98186611d72565b905081810360608301526122cd8185611d72565b905081810360808301526122e181846121b0565b9050969550505050505056fea264697066735822122068162fab163b223c3268159cf4dcb8095da6b2ef8c0bcffaa00b6ca73966ad9364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x240 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x381 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x391 JUMPI POP PUSH2 0x390 DUP3 PUSH2 0x821 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x420 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x403 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x44F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x912 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI POP PUSH2 0x4A1 DUP7 DUP3 PUSH2 0x65F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x4E7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x9B3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x548 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x593 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH2 0x5D0 PUSH2 0x5B8 DUP3 DUP8 PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP8 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E2 PUSH2 0x203E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5F9 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP PUSH2 0x599 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x613 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x61D PUSH1 0x0 PUSH2 0xAD3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x654 PUSH2 0x9AB JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x742 JUMPI POP PUSH2 0x740 DUP7 DUP3 PUSH2 0x65F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x786 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x793 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD09 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x815 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81E DUP2 PUSH2 0xAD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 PUSH2 0x9AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B1 PUSH2 0x61F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x910 JUMPI PUSH2 0x8D4 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x984 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x991 DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x9A3 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA97 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDFA DUP6 DUP6 PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE0B DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xE44 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEEF JUMPI PUSH1 0x0 PUSH2 0xE8E PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xEDE JUMPI PUSH1 0x0 PUSH2 0xEAF PUSH1 0x0 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC7 PUSH1 0x0 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xED7 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x12A4 JUMP JUMPDEST POP POP PUSH2 0xEED JUMP JUMPDEST PUSH2 0xEEC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1458 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF40 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF37 SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4A PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 PUSH2 0xF6D DUP3 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF84 DUP4 DUP7 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1059 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x114C JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x2129 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1158 SWAP1 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP PUSH2 0xF4F JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x121E JUMPI PUSH1 0x0 PUSH2 0x117F PUSH1 0x0 DUP6 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1197 PUSH1 0x0 DUP6 PUSH2 0xABF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x129D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1450 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1341 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1371 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13BD JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x144E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1604 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14F5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F2 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1579 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1571 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1602 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164B DUP3 PUSH2 0x1620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165B DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP2 EQ PUSH2 0x1666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1678 DUP2 PUSH2 0x1652 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1691 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x169C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AE DUP2 PUSH2 0x1688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CA PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16EA DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FD DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1718 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1753 DUP2 PUSH2 0x171E JUMP JUMPDEST DUP2 EQ PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1770 DUP2 PUSH2 0x174A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179A DUP5 DUP3 DUP6 ADD PUSH2 0x1761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP5 DUP3 DUP6 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1840 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1806 JUMP JUMPDEST PUSH2 0x1872 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1882 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x184C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18B0 DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F0 DUP7 DUP3 DUP8 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1901 DUP7 DUP3 DUP8 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1948 DUP3 PUSH2 0x184C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197A PUSH2 0x160C JUMP JUMPDEST SWAP1 POP PUSH2 0x1986 DUP3 DUP3 PUSH2 0x193F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CF PUSH2 0x19CA DUP5 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP1 PUSH2 0x1A07 DUP9 DUP3 PUSH2 0x169F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7C DUP3 PUSH2 0x184C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAB PUSH2 0x1AA6 DUP5 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x1A53 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD2 DUP5 DUP3 DUP6 PUSH2 0x1A89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B32 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B43 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1B70 DUP9 DUP3 DUP10 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1B9D DUP9 DUP3 DUP10 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1BCA DUP9 DUP3 DUP10 ADD PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF1 PUSH2 0x1910 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C16 PUSH2 0x1C11 DUP5 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x19B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C62 JUMPI DUP1 PUSH2 0x1C4E DUP9 DUP3 PUSH2 0x1669 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C81 JUMPI PUSH2 0x1C80 PUSH2 0x190B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C91 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB1 JUMPI PUSH2 0x1CB0 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1CDB DUP6 DUP3 DUP7 ADD PUSH2 0x1C6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1D08 DUP6 DUP3 DUP7 ADD PUSH2 0x1A25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D47 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 DUP4 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7D DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D1D JUMP JUMPDEST SWAP4 POP PUSH2 0x1D92 DUP4 PUSH2 0x1D2E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC3 JUMPI DUP2 MLOAD PUSH2 0x1DAA DUP9 DUP3 PUSH2 0x1D4D JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB5 DUP4 PUSH2 0x1D65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D96 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEA DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFB DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E25 DUP2 PUSH2 0x17A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E42 DUP2 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5F JUMPI PUSH2 0x1E5E PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6D DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EAD DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EBE DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F03 DUP9 DUP3 DUP10 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1F14 DUP9 DUP3 DUP10 ADD PUSH2 0x169F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1F25 DUP9 DUP3 DUP10 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x161B JUMP JUMPDEST JUMPDEST PUSH2 0x1F52 DUP9 DUP3 DUP10 ADD PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F83 DUP5 DUP3 DUP6 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FE6 JUMPI PUSH2 0x1FE5 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2001 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x200E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x202A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2037 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20D9 JUMPI PUSH2 0x20D8 PUSH2 0x206D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x2106 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2113 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2120 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2134 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x213F DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2157 JUMPI PUSH2 0x2156 PUSH2 0x206D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2177 DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x218B DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BB DUP3 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x21C5 DUP2 DUP6 PUSH2 0x219F JUMP JUMPDEST SWAP4 POP PUSH2 0x21D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x21DE DUP2 PUSH2 0x184C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x21FE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x220B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x2218 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x2225 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x16F4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2237 DUP2 DUP5 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2252 DUP2 PUSH2 0x174A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x226E JUMPI PUSH2 0x226D PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227C DUP5 DUP3 DUP6 ADD PUSH2 0x2243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x229A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22B9 DUP2 DUP7 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22CD DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22E1 DUP2 DUP5 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x162FAB163B223C3268 ISZERO SWAP13 DELEGATECALL 0xDC 0xB8 MULMOD 0x5D 0xA6 0xB2 0xEF DUP13 SIGNEXTEND 0xCF STATICCALL LOG0 SIGNEXTEND PUSH13 0xA73966AD9364736F6C63430008 EQ STOP CALLER ","sourceMap":"172:432:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2082:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:115:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4012:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3365:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2245:132:2;2322:7;2348:9;:13;2358:2;2348:13;;;;;;;;;;;:22;2362:7;2348:22;;;;;;;;;;;;;;;;2341:29;;2245:132;;;;:::o;1378:305::-;1480:4;1530:26;1515:41;;;:11;:41;;;;:109;;;;1587:37;1572:52;;;:11;:52;;;;1515:109;:161;;;;1640:36;1664:11;1640:23;:36::i;:::-;1515:161;1496:180;;1378:305;;;:::o;2082:103::-;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;487:115:28:-;1531:13:0;:11;:13::i;:::-;570:25:28::1;576:2;580;584:6;570:25;;;;;;;;;;;::::0;:5:::1;:25::i;:::-;487:115:::0;;;:::o;4012:429:2:-;4206:14;4223:12;:10;:12::i;:::-;4206:29;;4257:6;4249:14;;:4;:14;;;;:49;;;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4350:6;4358:4;4321:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:3;:10;2780:8;:15;2742:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2686:121;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;2970:68;2980:30;3008:1;2980:8;:27;;:30;;;;:::i;:::-;3012:25;3035:1;3012:3;:22;;:25;;;;:::i;:::-;2970:9;:68::i;:::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2932:3;;;;:::i;:::-;;;2891:158;;;;3066:13;3059:20;;;2534:552;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3154:144:2:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3154:144;;:::o;3365:157::-;3455:4;3478:18;:27;3497:7;3478:27;;;;;;;;;;;;;;;:37;3506:8;3478:37;;;;;;;;;;;;;;;;;;;;;;;;;3471:44;;3365:157;;;;:::o;3589:351::-;3712:14;3729:12;:10;:12::i;:::-;3712:29;;3763:6;3755:14;;:4;:14;;;;:49;;;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3856:6;3864:4;3827:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3751:129;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;:::-;3702:238;3589:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:22:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10754:346:2:-;10864:1;10850:16;;:2;:16;;;10846:88;;10920:1;10889:34;;;;;;;;;;;:::i;:::-;;;;;;;;10846:88;10944:20;10966:23;10993:29;11012:2;11016:5;10993:18;:29::i;:::-;10943:79;;;;11032:61;11067:1;11071:2;11075:3;11080:6;11088:4;11032:26;:61::i;:::-;10836:264;;10754:346;;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;9023:445:2:-;9230:1;9216:16;;:2;:16;;;9212:88;;9286:1;9255:34;;;;;;;;;;;:::i;:::-;;;;;;;;9212:88;9329:1;9313:18;;:4;:18;;;9309:88;;9383:1;9354:32;;;;;;;;;;;:::i;:::-;;;;;;;;9309:88;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;16128:197:15:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13276:315:2:-;13403:1;13383:22;;:8;:22;;;13379:94;;13459:1;13428:34;;;;;;;;;;;:::i;:::-;;;;;;;;13379:94;13520:8;13482:18;:25;13501:5;13482:25;;;;;;;;;;;;;;;:35;13508:8;13482:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13565:8;13543:41;;13558:5;13543:41;;;13575:8;13543:41;;;;;;:::i;:::-;;;;;;;;13276:315;;;:::o;8159:463::-;8295:1;8281:16;;:2;:16;;;8277:88;;8351:1;8320:34;;;;;;;;;;;:::i;:::-;;;;;;;;8277:88;8394:1;8378:18;;:4;:18;;;8374:88;;8448:1;8419:32;;;;;;;;;;;:::i;:::-;;;;;;;;8374:88;8472:20;8494:23;8521:29;8540:2;8544:5;8521:18;:29::i;:::-;8471:79;;;;8560:55;8587:4;8593:2;8597:3;8602:6;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;13707:822::-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;:12::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;:12::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;998:959:6:-;1214:1;1197:2;:14;;;:18;1193:758;;;1252:2;1235:38;;;1274:8;1284:4;1290:2;1294:5;1301:4;1235:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:1;1605:6;:13;:18;1601:326;;1748:2;1710:41;;;;;;;;;;;:::i;:::-;;;;;;;;1601:326;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;1367:43;;;1355:55;;;:8;:55;;;;1351:189;;1518:2;1480:41;;;;;;;;;;;:::i;:::-;;;;;;;;1351:189;1307:247;1193:758;998:959;;;;;;:::o;2505:1026::-;2746:1;2729:2;:14;;;:18;2725:800;;;2784:2;2767:43;;;2811:8;2821:4;2827:3;2832:6;2840:4;2767:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1;3179:6;:13;:18;3175:326;;3322:2;3284:41;;;;;;;;;;;:::i;:::-;;;;;;;;3175:326;3453:6;3447:13;3438:6;3434:2;3430:15;3423:38;2763:752;2936:48;;;2924:60;;;:8;:60;;;;2920:194;;3092:2;3054:41;;;;;;;;;;;:::i;:::-;;;;;;;;2920:194;2846:282;2725:800;2505:1026;;;;;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:117::-;5624:1;5621;5614:12;5638:180;5686:77;5683:1;5676:88;5783:4;5780:1;5773:15;5807:4;5804:1;5797:15;5824:281;5907:27;5929:4;5907:27;:::i;:::-;5899:6;5895:40;6037:6;6025:10;6022:22;6001:18;5989:10;5986:34;5983:62;5980:88;;;6048:18;;:::i;:::-;5980:88;6088:10;6084:2;6077:22;5867:238;5824:281;;:::o;6111:129::-;6145:6;6172:20;;:::i;:::-;6162:30;;6201:33;6229:4;6221:6;6201:33;:::i;:::-;6111:129;;;:::o;6246:311::-;6323:4;6413:18;6405:6;6402:30;6399:56;;;6435:18;;:::i;:::-;6399:56;6485:4;6477:6;6473:17;6465:25;;6545:4;6539;6535:15;6527:23;;6246:311;;;:::o;6563:117::-;6672:1;6669;6662:12;6703:710;6799:5;6824:81;6840:64;6897:6;6840:64;:::i;:::-;6824:81;:::i;:::-;6815:90;;6925:5;6954:6;6947:5;6940:21;6988:4;6981:5;6977:16;6970:23;;7041:4;7033:6;7029:17;7021:6;7017:30;7070:3;7062:6;7059:15;7056:122;;;7089:79;;:::i;:::-;7056:122;7204:6;7187:220;7221:6;7216:3;7213:15;7187:220;;;7296:3;7325:37;7358:3;7346:10;7325:37;:::i;:::-;7320:3;7313:50;7392:4;7387:3;7383:14;7376:21;;7263:144;7247:4;7242:3;7238:14;7231:21;;7187:220;;;7191:21;6805:608;;6703:710;;;;;:::o;7436:370::-;7507:5;7556:3;7549:4;7541:6;7537:17;7533:27;7523:122;;7564:79;;:::i;:::-;7523:122;7681:6;7668:20;7706:94;7796:3;7788:6;7781:4;7773:6;7769:17;7706:94;:::i;:::-;7697:103;;7513:293;7436:370;;;;:::o;7812:117::-;7921:1;7918;7911:12;7935:307;7996:4;8086:18;8078:6;8075:30;8072:56;;;8108:18;;:::i;:::-;8072:56;8146:29;8168:6;8146:29;:::i;:::-;8138:37;;8230:4;8224;8220:15;8212:23;;7935:307;;;:::o;8248:146::-;8345:6;8340:3;8335;8322:30;8386:1;8377:6;8372:3;8368:16;8361:27;8248:146;;;:::o;8400:423::-;8477:5;8502:65;8518:48;8559:6;8518:48;:::i;:::-;8502:65;:::i;:::-;8493:74;;8590:6;8583:5;8576:21;8628:4;8621:5;8617:16;8666:3;8657:6;8652:3;8648:16;8645:25;8642:112;;;8673:79;;:::i;:::-;8642:112;8763:54;8810:6;8805:3;8800;8763:54;:::i;:::-;8483:340;8400:423;;;;;:::o;8842:338::-;8897:5;8946:3;8939:4;8931:6;8927:17;8923:27;8913:122;;8954:79;;:::i;:::-;8913:122;9071:6;9058:20;9096:78;9170:3;9162:6;9155:4;9147:6;9143:17;9096:78;:::i;:::-;9087:87;;8903:277;8842:338;;;;:::o;9186:1509::-;9340:6;9348;9356;9364;9372;9421:3;9409:9;9400:7;9396:23;9392:33;9389:120;;;9428:79;;:::i;:::-;9389:120;9548:1;9573:53;9618:7;9609:6;9598:9;9594:22;9573:53;:::i;:::-;9563:63;;9519:117;9675:2;9701:53;9746:7;9737:6;9726:9;9722:22;9701:53;:::i;:::-;9691:63;;9646:118;9831:2;9820:9;9816:18;9803:32;9862:18;9854:6;9851:30;9848:117;;;9884:79;;:::i;:::-;9848:117;9989:78;10059:7;10050:6;10039:9;10035:22;9989:78;:::i;:::-;9979:88;;9774:303;10144:2;10133:9;10129:18;10116:32;10175:18;10167:6;10164:30;10161:117;;;10197:79;;:::i;:::-;10161:117;10302:78;10372:7;10363:6;10352:9;10348:22;10302:78;:::i;:::-;10292:88;;10087:303;10457:3;10446:9;10442:19;10429:33;10489:18;10481:6;10478:30;10475:117;;;10511:79;;:::i;:::-;10475:117;10616:62;10670:7;10661:6;10650:9;10646:22;10616:62;:::i;:::-;10606:72;;10400:288;9186:1509;;;;;;;;:::o;10701:311::-;10778:4;10868:18;10860:6;10857:30;10854:56;;;10890:18;;:::i;:::-;10854:56;10940:4;10932:6;10928:17;10920:25;;11000:4;10994;10990:15;10982:23;;10701:311;;;:::o;11035:710::-;11131:5;11156:81;11172:64;11229:6;11172:64;:::i;:::-;11156:81;:::i;:::-;11147:90;;11257:5;11286:6;11279:5;11272:21;11320:4;11313:5;11309:16;11302:23;;11373:4;11365:6;11361:17;11353:6;11349:30;11402:3;11394:6;11391:15;11388:122;;;11421:79;;:::i;:::-;11388:122;11536:6;11519:220;11553:6;11548:3;11545:15;11519:220;;;11628:3;11657:37;11690:3;11678:10;11657:37;:::i;:::-;11652:3;11645:50;11724:4;11719:3;11715:14;11708:21;;11595:144;11579:4;11574:3;11570:14;11563:21;;11519:220;;;11523:21;11137:608;;11035:710;;;;;:::o;11768:370::-;11839:5;11888:3;11881:4;11873:6;11869:17;11865:27;11855:122;;11896:79;;:::i;:::-;11855:122;12013:6;12000:20;12038:94;12128:3;12120:6;12113:4;12105:6;12101:17;12038:94;:::i;:::-;12029:103;;11845:293;11768:370;;;;:::o;12144:894::-;12262:6;12270;12319:2;12307:9;12298:7;12294:23;12290:32;12287:119;;;12325:79;;:::i;:::-;12287:119;12473:1;12462:9;12458:17;12445:31;12503:18;12495:6;12492:30;12489:117;;;12525:79;;:::i;:::-;12489:117;12630:78;12700:7;12691:6;12680:9;12676:22;12630:78;:::i;:::-;12620:88;;12416:302;12785:2;12774:9;12770:18;12757:32;12816:18;12808:6;12805:30;12802:117;;;12838:79;;:::i;:::-;12802:117;12943:78;13013:7;13004:6;12993:9;12989:22;12943:78;:::i;:::-;12933:88;;12728:303;12144:894;;;;;:::o;13044:114::-;13111:6;13145:5;13139:12;13129:22;;13044:114;;;:::o;13164:184::-;13263:11;13297:6;13292:3;13285:19;13337:4;13332:3;13328:14;13313:29;;13164:184;;;;:::o;13354:132::-;13421:4;13444:3;13436:11;;13474:4;13469:3;13465:14;13457:22;;13354:132;;;:::o;13492:108::-;13569:24;13587:5;13569:24;:::i;:::-;13564:3;13557:37;13492:108;;:::o;13606:179::-;13675:10;13696:46;13738:3;13730:6;13696:46;:::i;:::-;13774:4;13769:3;13765:14;13751:28;;13606:179;;;;:::o;13791:113::-;13861:4;13893;13888:3;13884:14;13876:22;;13791:113;;;:::o;13940:732::-;14059:3;14088:54;14136:5;14088:54;:::i;:::-;14158:86;14237:6;14232:3;14158:86;:::i;:::-;14151:93;;14268:56;14318:5;14268:56;:::i;:::-;14347:7;14378:1;14363:284;14388:6;14385:1;14382:13;14363:284;;;14464:6;14458:13;14491:63;14550:3;14535:13;14491:63;:::i;:::-;14484:70;;14577:60;14630:6;14577:60;:::i;:::-;14567:70;;14423:224;14410:1;14407;14403:9;14398:14;;14363:284;;;14367:14;14663:3;14656:10;;14064:608;;;13940:732;;;;:::o;14678:373::-;14821:4;14859:2;14848:9;14844:18;14836:26;;14908:9;14902:4;14898:20;14894:1;14883:9;14879:17;14872:47;14936:108;15039:4;15030:6;14936:108;:::i;:::-;14928:116;;14678:373;;;;:::o;15057:118::-;15144:24;15162:5;15144:24;:::i;:::-;15139:3;15132:37;15057:118;;:::o;15181:222::-;15274:4;15312:2;15301:9;15297:18;15289:26;;15325:71;15393:1;15382:9;15378:17;15369:6;15325:71;:::i;:::-;15181:222;;;;:::o;15409:116::-;15479:21;15494:5;15479:21;:::i;:::-;15472:5;15469:32;15459:60;;15515:1;15512;15505:12;15459:60;15409:116;:::o;15531:133::-;15574:5;15612:6;15599:20;15590:29;;15628:30;15652:5;15628:30;:::i;:::-;15531:133;;;;:::o;15670:468::-;15735:6;15743;15792:2;15780:9;15771:7;15767:23;15763:32;15760:119;;;15798:79;;:::i;:::-;15760:119;15918:1;15943:53;15988:7;15979:6;15968:9;15964:22;15943:53;:::i;:::-;15933:63;;15889:117;16045:2;16071:50;16113:7;16104:6;16093:9;16089:22;16071:50;:::i;:::-;16061:60;;16016:115;15670:468;;;;;:::o;16144:474::-;16212:6;16220;16269:2;16257:9;16248:7;16244:23;16240:32;16237:119;;;16275:79;;:::i;:::-;16237:119;16395:1;16420:53;16465:7;16456:6;16445:9;16441:22;16420:53;:::i;:::-;16410:63;;16366:117;16522:2;16548:53;16593:7;16584:6;16573:9;16569:22;16548:53;:::i;:::-;16538:63;;16493:118;16144:474;;;;;:::o;16624:1089::-;16728:6;16736;16744;16752;16760;16809:3;16797:9;16788:7;16784:23;16780:33;16777:120;;;16816:79;;:::i;:::-;16777:120;16936:1;16961:53;17006:7;16997:6;16986:9;16982:22;16961:53;:::i;:::-;16951:63;;16907:117;17063:2;17089:53;17134:7;17125:6;17114:9;17110:22;17089:53;:::i;:::-;17079:63;;17034:118;17191:2;17217:53;17262:7;17253:6;17242:9;17238:22;17217:53;:::i;:::-;17207:63;;17162:118;17319:2;17345:53;17390:7;17381:6;17370:9;17366:22;17345:53;:::i;:::-;17335:63;;17290:118;17475:3;17464:9;17460:19;17447:33;17507:18;17499:6;17496:30;17493:117;;;17529:79;;:::i;:::-;17493:117;17634:62;17688:7;17679:6;17668:9;17664:22;17634:62;:::i;:::-;17624:72;;17418:288;16624:1089;;;;;;;;:::o;17719:329::-;17778:6;17827:2;17815:9;17806:7;17802:23;17798:32;17795:119;;;17833:79;;:::i;:::-;17795:119;17953:1;17978:53;18023:7;18014:6;18003:9;17999:22;17978:53;:::i;:::-;17968:63;;17924:117;17719:329;;;;:::o;18054:180::-;18102:77;18099:1;18092:88;18199:4;18196:1;18189:15;18223:4;18220:1;18213:15;18240:320;18284:6;18321:1;18315:4;18311:12;18301:22;;18368:1;18362:4;18358:12;18389:18;18379:81;;18445:4;18437:6;18433:17;18423:27;;18379:81;18507:2;18499:6;18496:14;18476:18;18473:38;18470:84;;18526:18;;:::i;:::-;18470:84;18291:269;18240:320;;;:::o;18566:332::-;18687:4;18725:2;18714:9;18710:18;18702:26;;18738:71;18806:1;18795:9;18791:17;18782:6;18738:71;:::i;:::-;18819:72;18887:2;18876:9;18872:18;18863:6;18819:72;:::i;:::-;18566:332;;;;;:::o;18904:::-;19025:4;19063:2;19052:9;19048:18;19040:26;;19076:71;19144:1;19133:9;19129:17;19120:6;19076:71;:::i;:::-;19157:72;19225:2;19214:9;19210:18;19201:6;19157:72;:::i;:::-;18904:332;;;;;:::o;19242:180::-;19290:77;19287:1;19280:88;19387:4;19384:1;19377:15;19411:4;19408:1;19401:15;19428:180;19476:77;19473:1;19466:88;19573:4;19570:1;19563:15;19597:4;19594:1;19587:15;19614:233;19653:3;19676:24;19694:5;19676:24;:::i;:::-;19667:33;;19722:66;19715:5;19712:77;19709:103;;19792:18;;:::i;:::-;19709:103;19839:1;19832:5;19828:13;19821:20;;19614:233;;;:::o;19853:553::-;20030:4;20068:3;20057:9;20053:19;20045:27;;20082:71;20150:1;20139:9;20135:17;20126:6;20082:71;:::i;:::-;20163:72;20231:2;20220:9;20216:18;20207:6;20163:72;:::i;:::-;20245;20313:2;20302:9;20298:18;20289:6;20245:72;:::i;:::-;20327;20395:2;20384:9;20380:18;20371:6;20327:72;:::i;:::-;19853:553;;;;;;;:::o;20412:191::-;20452:3;20471:20;20489:1;20471:20;:::i;:::-;20466:25;;20505:20;20523:1;20505:20;:::i;:::-;20500:25;;20548:1;20545;20541:9;20534:16;;20569:3;20566:1;20563:10;20560:36;;;20576:18;;:::i;:::-;20560:36;20412:191;;;;:::o;20609:634::-;20830:4;20868:2;20857:9;20853:18;20845:26;;20917:9;20911:4;20907:20;20903:1;20892:9;20888:17;20881:47;20945:108;21048:4;21039:6;20945:108;:::i;:::-;20937:116;;21100:9;21094:4;21090:20;21085:2;21074:9;21070:18;21063:48;21128:108;21231:4;21222:6;21128:108;:::i;:::-;21120:116;;20609:634;;;;;:::o;21249:98::-;21300:6;21334:5;21328:12;21318:22;;21249:98;;;:::o;21353:168::-;21436:11;21470:6;21465:3;21458:19;21510:4;21505:3;21501:14;21486:29;;21353:168;;;;:::o;21527:373::-;21613:3;21641:38;21673:5;21641:38;:::i;:::-;21695:70;21758:6;21753:3;21695:70;:::i;:::-;21688:77;;21774:65;21832:6;21827:3;21820:4;21813:5;21809:16;21774:65;:::i;:::-;21864:29;21886:6;21864:29;:::i;:::-;21859:3;21855:39;21848:46;;21617:283;21527:373;;;;:::o;21906:751::-;22129:4;22167:3;22156:9;22152:19;22144:27;;22181:71;22249:1;22238:9;22234:17;22225:6;22181:71;:::i;:::-;22262:72;22330:2;22319:9;22315:18;22306:6;22262:72;:::i;:::-;22344;22412:2;22401:9;22397:18;22388:6;22344:72;:::i;:::-;22426;22494:2;22483:9;22479:18;22470:6;22426:72;:::i;:::-;22546:9;22540:4;22536:20;22530:3;22519:9;22515:19;22508:49;22574:76;22645:4;22636:6;22574:76;:::i;:::-;22566:84;;21906:751;;;;;;;;:::o;22663:141::-;22719:5;22750:6;22744:13;22735:22;;22766:32;22792:5;22766:32;:::i;:::-;22663:141;;;;:::o;22810:349::-;22879:6;22928:2;22916:9;22907:7;22903:23;22899:32;22896:119;;;22934:79;;:::i;:::-;22896:119;23054:1;23079:63;23134:7;23125:6;23114:9;23110:22;23079:63;:::i;:::-;23069:73;;23025:127;22810:349;;;;:::o;23165:1053::-;23488:4;23526:3;23515:9;23511:19;23503:27;;23540:71;23608:1;23597:9;23593:17;23584:6;23540:71;:::i;:::-;23621:72;23689:2;23678:9;23674:18;23665:6;23621:72;:::i;:::-;23740:9;23734:4;23730:20;23725:2;23714:9;23710:18;23703:48;23768:108;23871:4;23862:6;23768:108;:::i;:::-;23760:116;;23923:9;23917:4;23913:20;23908:2;23897:9;23893:18;23886:48;23951:108;24054:4;24045:6;23951:108;:::i;:::-;23943:116;;24107:9;24101:4;24097:20;24091:3;24080:9;24076:19;24069:49;24135:76;24206:4;24197:6;24135:76;:::i;:::-;24127:84;;23165:1053;;;;;;;;:::o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256)":"156e29f6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestERC1155.sol\":\"TestERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/TestERC1155.sol\":{\"keccak256\":\"0x0b37740804819b6dac308fb0ae36a7cda38c2e9c178059dce33dd8a9f3d8170f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98aadff0b5db09711beb4973c189c22f0df52f7eb5f7ad2162a2b8573c4e2891\",\"dweb:/ipfs/QmQzvfvbQ468xiHtzzEJn6BPYeNVkuLz36JK7MnrbWbZGV\"]}},\"version\":1}"}},"contracts/TestNFT.sol":{"TestNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"batchRevokeApprovals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2225":{"entryPoint":null,"id":2225,"parameterSlots":2,"returnSlots":0},"@_9708":{"entryPoint":null,"id":9708,"parameterSlots":0,"returnSlots":0},"@_approve_3045":{"entryPoint":1326,"id":3045,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_2619":{"entryPoint":1116,"id":2619,"parameterSlots":3,"returnSlots":0},"@_getApproved_2546":{"entryPoint":2190,"id":2546,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_2582":{"entryPoint":1803,"id":2582,"parameterSlots":3,"returnSlots":1},"@_mint_2775":{"entryPoint":227,"id":2775,"parameterSlots":2,"returnSlots":0},"@_ownerOf_2533":{"entryPoint":1055,"id":2533,"parameterSlots":1,"returnSlots":1},"@_requireOwned_3111":{"entryPoint":2015,"id":3111,"parameterSlots":1,"returnSlots":1},"@_update_2725":{"entryPoint":490,"id":2725,"parameterSlots":3,"returnSlots":1},"@isApprovedForAll_2426":{"entryPoint":2251,"id":2426,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_9726":{"entryPoint":2162,"id":9726,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3316,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3362,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3408,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3379,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2399,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2878,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3296,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3264,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2693,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2839,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2713,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2578,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2504,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3003,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2703,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2971,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":2457,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2410,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2753,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2594,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2958,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2811,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2607,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2763,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2806,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6507:31","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:31","statements":[{"nodeType":"YulAssignment","src":"77:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:31"},"nodeType":"YulFunctionCall","src":"87:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:31","type":""}],"src":"7:99:31"},{"body":{"nodeType":"YulBlock","src":"140:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:31"},"nodeType":"YulFunctionCall","src":"150:88:31"},"nodeType":"YulExpressionStatement","src":"150:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:31"},"nodeType":"YulFunctionCall","src":"247:15:31"},"nodeType":"YulExpressionStatement","src":"247:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:31"},"nodeType":"YulFunctionCall","src":"271:15:31"},"nodeType":"YulExpressionStatement","src":"271:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:31"},{"body":{"nodeType":"YulBlock","src":"326:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:31"},"nodeType":"YulFunctionCall","src":"336:88:31"},"nodeType":"YulExpressionStatement","src":"336:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:31"},"nodeType":"YulFunctionCall","src":"433:15:31"},"nodeType":"YulExpressionStatement","src":"433:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:31"},"nodeType":"YulFunctionCall","src":"457:15:31"},"nodeType":"YulExpressionStatement","src":"457:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:31"},{"body":{"nodeType":"YulBlock","src":"535:269:31","statements":[{"nodeType":"YulAssignment","src":"545:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:31"},"nodeType":"YulFunctionCall","src":"555:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:31"},"nodeType":"YulFunctionCall","src":"602:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:31","statements":[{"nodeType":"YulAssignment","src":"667:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:31"},"nodeType":"YulFunctionCall","src":"677:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:31"},"nodeType":"YulFunctionCall","src":"626:26:31"},"nodeType":"YulIf","src":"623:81:31"},{"body":{"nodeType":"YulBlock","src":"756:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:31"},"nodeType":"YulFunctionCall","src":"770:18:31"},"nodeType":"YulExpressionStatement","src":"770:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:31"},"nodeType":"YulFunctionCall","src":"740:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:31"},"nodeType":"YulFunctionCall","src":"717:38:31"},"nodeType":"YulIf","src":"714:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:31","type":""}],"src":"484:320:31"},{"body":{"nodeType":"YulBlock","src":"864:87:31","statements":[{"nodeType":"YulAssignment","src":"874:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:31"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:31","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:31"},"nodeType":"YulFunctionCall","src":"895:14:31"},"nodeType":"YulExpressionStatement","src":"895:14:31"},{"nodeType":"YulAssignment","src":"918:26:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:31"},"nodeType":"YulFunctionCall","src":"926:18:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:31"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:31","type":""}],"src":"810:141:31"},{"body":{"nodeType":"YulBlock","src":"1001:49:31","statements":[{"nodeType":"YulAssignment","src":"1011:33:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:31"},"nodeType":"YulFunctionCall","src":"1025:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:31","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:31"},"nodeType":"YulFunctionCall","src":"1021:23:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:31"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:31","type":""}],"src":"957:93:31"},{"body":{"nodeType":"YulBlock","src":"1109:54:31","statements":[{"nodeType":"YulAssignment","src":"1119:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:31"},"nodeType":"YulFunctionCall","src":"1140:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:31"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:31","type":""}],"src":"1056:107:31"},{"body":{"nodeType":"YulBlock","src":"1245:317:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:31","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:31"},"nodeType":"YulFunctionCall","src":"1272:18:31"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:31"},"nodeType":"YulFunctionCall","src":"1311:97:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:31","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:31"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:31"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:31"},"nodeType":"YulFunctionCall","src":"1429:39:31"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:31"}]},{"nodeType":"YulAssignment","src":"1477:30:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:31"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:31"},"nodeType":"YulFunctionCall","src":"1497:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:31"},"nodeType":"YulFunctionCall","src":"1486:21:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:31"}]},{"nodeType":"YulAssignment","src":"1516:40:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:31"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:31"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:31"},"nodeType":"YulFunctionCall","src":"1536:19:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:31"},"nodeType":"YulFunctionCall","src":"1526:30:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:31"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:31","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:31","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:31","type":""}],"src":"1169:393:31"},{"body":{"nodeType":"YulBlock","src":"1613:32:31","statements":[{"nodeType":"YulAssignment","src":"1623:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:31","type":""}],"src":"1568:77:31"},{"body":{"nodeType":"YulBlock","src":"1683:28:31","statements":[{"nodeType":"YulAssignment","src":"1693:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:31","type":""}],"src":"1651:60:31"},{"body":{"nodeType":"YulBlock","src":"1777:82:31","statements":[{"nodeType":"YulAssignment","src":"1787:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:31"},"nodeType":"YulFunctionCall","src":"1827:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:31"},"nodeType":"YulFunctionCall","src":"1818:34:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:31"},"nodeType":"YulFunctionCall","src":"1800:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:31","type":""}],"src":"1717:142:31"},{"body":{"nodeType":"YulBlock","src":"1912:28:31","statements":[{"nodeType":"YulAssignment","src":"1922:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:31"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:31","type":""}],"src":"1865:75:31"},{"body":{"nodeType":"YulBlock","src":"2022:193:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:31","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:31"},"nodeType":"YulFunctionCall","src":"2056:39:31"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:31"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:31"},"nodeType":"YulFunctionCall","src":"2145:11:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:31"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:31"},"nodeType":"YulFunctionCall","src":"2166:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:31"},"nodeType":"YulFunctionCall","src":"2117:91:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:31"},"nodeType":"YulFunctionCall","src":"2104:105:31"},"nodeType":"YulExpressionStatement","src":"2104:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:31","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:31","type":""}],"src":"1946:269:31"},{"body":{"nodeType":"YulBlock","src":"2270:24:31","statements":[{"nodeType":"YulAssignment","src":"2280:8:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:31","type":""}],"src":"2221:73:31"},{"body":{"nodeType":"YulBlock","src":"2353:136:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:31"},"nodeType":"YulFunctionCall","src":"2377:32:31"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:31"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:31"},"nodeType":"YulFunctionCall","src":"2418:65:31"},"nodeType":"YulExpressionStatement","src":"2418:65:31"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:31","type":""}],"src":"2300:189:31"},{"body":{"nodeType":"YulBlock","src":"2545:136:31","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:31","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:31"},"nodeType":"YulFunctionCall","src":"2626:39:31"},"nodeType":"YulExpressionStatement","src":"2626:39:31"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:31"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:31"},"nodeType":"YulFunctionCall","src":"2562:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:31","statements":[{"nodeType":"YulAssignment","src":"2579:22:31","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:31"},"nodeType":"YulFunctionCall","src":"2588:13:31"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:31"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:31","statements":[]},"src":"2555:120:31"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:31","type":""}],"src":"2495:186:31"},{"body":{"nodeType":"YulBlock","src":"2766:464:31","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:31"},"nodeType":"YulFunctionCall","src":"2822:38:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:31"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:31"},"nodeType":"YulFunctionCall","src":"2906:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:31"},"nodeType":"YulFunctionCall","src":"2892:44:31"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:31","statements":[{"nodeType":"YulAssignment","src":"3095:23:31","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:31"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:31"},"nodeType":"YulFunctionCall","src":"3074:18:31"},"nodeType":"YulIf","src":"3071:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:31"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:31"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:31"},"nodeType":"YulFunctionCall","src":"3189:22:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:31"},"nodeType":"YulFunctionCall","src":"3175:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:31"},"nodeType":"YulFunctionCall","src":"3133:80:31"},"nodeType":"YulExpressionStatement","src":"3133:80:31"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:31"},"nodeType":"YulFunctionCall","src":"2780:11:31"},"nodeType":"YulIf","src":"2777:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:31","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:31","type":""}],"src":"2687:543:31"},{"body":{"nodeType":"YulBlock","src":"3299:54:31","statements":[{"nodeType":"YulAssignment","src":"3309:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:31"},"nodeType":"YulFunctionCall","src":"3330:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:31","type":""}],"src":"3236:117:31"},{"body":{"nodeType":"YulBlock","src":"3410:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:31","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:31"},"nodeType":"YulFunctionCall","src":"3465:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:31"},"nodeType":"YulFunctionCall","src":"3480:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:31"},"nodeType":"YulFunctionCall","src":"3436:51:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:31"},"nodeType":"YulFunctionCall","src":"3432:56:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:31","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:31"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:31"},"nodeType":"YulFunctionCall","src":"3507:15:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:31"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:31","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:31","type":""}],"src":"3359:169:31"},{"body":{"nodeType":"YulBlock","src":"3614:214:31","statements":[{"nodeType":"YulAssignment","src":"3747:37:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:31"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:31"},"nodeType":"YulFunctionCall","src":"3755:29:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:31"}]},{"nodeType":"YulAssignment","src":"3793:29:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:31","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:31"},"nodeType":"YulFunctionCall","src":"3810:11:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:31"},"nodeType":"YulFunctionCall","src":"3801:21:31"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:31","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:31","type":""}],"src":"3533:295:31"},{"body":{"nodeType":"YulBlock","src":"3925:1303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:31"},"nodeType":"YulFunctionCall","src":"3950:37:31"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:31"},"nodeType":"YulFunctionCall","src":"4074:18:31"},"nodeType":"YulExpressionStatement","src":"4074:18:31"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:31"},"nodeType":"YulFunctionCall","src":"4041:30:31"},"nodeType":"YulIf","src":"4038:56:31"},{"nodeType":"YulVariableDeclaration","src":"4104:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:31"},"nodeType":"YulFunctionCall","src":"4144:11:31"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:31"},"nodeType":"YulFunctionCall","src":"4118:38:31"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:31"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:31"},"nodeType":"YulFunctionCall","src":"4203:67:31"},"nodeType":"YulExpressionStatement","src":"4203:67:31"},{"nodeType":"YulVariableDeclaration","src":"4280:18:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:31","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:31"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:31","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:31"},"nodeType":"YulFunctionCall","src":"4413:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:31"},"nodeType":"YulFunctionCall","src":"4401:22:31"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:31","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:31"},"nodeType":"YulFunctionCall","src":"4451:37:31"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:31"},"nodeType":"YulFunctionCall","src":"4608:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:31"},"nodeType":"YulFunctionCall","src":"4602:26:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:31"},"nodeType":"YulFunctionCall","src":"4587:42:31"},"nodeType":"YulExpressionStatement","src":"4587:42:31"},{"nodeType":"YulAssignment","src":"4646:24:31","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:31"},"nodeType":"YulFunctionCall","src":"4656:14:31"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:31"}]},{"nodeType":"YulAssignment","src":"4687:31:31","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:31"},"nodeType":"YulFunctionCall","src":"4700:18:31"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:31"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:31"},"nodeType":"YulFunctionCall","src":"4532:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:31","statements":[{"nodeType":"YulAssignment","src":"4549:17:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:31"},"nodeType":"YulFunctionCall","src":"4554:12:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:31","statements":[]},"src":"4524:208:31"},{"body":{"nodeType":"YulBlock","src":"4768:156:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:31"},"nodeType":"YulFunctionCall","src":"4809:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:31"},"nodeType":"YulFunctionCall","src":"4803:26:31"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:31"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:31"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:31"},"nodeType":"YulFunctionCall","src":"4891:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:31"},"nodeType":"YulFunctionCall","src":"4861:48:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:31"},"nodeType":"YulFunctionCall","src":"4846:64:31"},"nodeType":"YulExpressionStatement","src":"4846:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:31"},"nodeType":"YulFunctionCall","src":"4748:19:31"},"nodeType":"YulIf","src":"4745:179:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:31"},"nodeType":"YulFunctionCall","src":"4954:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:31"},"nodeType":"YulFunctionCall","src":"4950:22:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:31"},"nodeType":"YulFunctionCall","src":"4937:36:31"},"nodeType":"YulExpressionStatement","src":"4937:36:31"}]},"nodeType":"YulCase","src":"4365:618:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:31","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:31","statements":[{"nodeType":"YulAssignment","src":"5069:35:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:31"},"nodeType":"YulFunctionCall","src":"5084:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:31"},"nodeType":"YulFunctionCall","src":"5078:26:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:31"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:31"},"nodeType":"YulIf","src":"5041:77:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:31"},"nodeType":"YulFunctionCall","src":"5144:67:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:31"},"nodeType":"YulFunctionCall","src":"5131:81:31"},"nodeType":"YulExpressionStatement","src":"5131:81:31"}]},"nodeType":"YulCase","src":"4992:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:31"},"nodeType":"YulFunctionCall","src":"4342:14:31"},"nodeType":"YulSwitch","src":"4335:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:31","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:31","type":""}],"src":"3833:1395:31"},{"body":{"nodeType":"YulBlock","src":"5279:81:31","statements":[{"nodeType":"YulAssignment","src":"5289:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:31"},"nodeType":"YulFunctionCall","src":"5300:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:31","type":""}],"src":"5234:126:31"},{"body":{"nodeType":"YulBlock","src":"5411:51:31","statements":[{"nodeType":"YulAssignment","src":"5421:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:31"},"nodeType":"YulFunctionCall","src":"5432:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:31","type":""}],"src":"5366:96:31"},{"body":{"nodeType":"YulBlock","src":"5533:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:31"},"nodeType":"YulFunctionCall","src":"5555:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:31"},"nodeType":"YulFunctionCall","src":"5543:37:31"},"nodeType":"YulExpressionStatement","src":"5543:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:31","type":""}],"src":"5468:118:31"},{"body":{"nodeType":"YulBlock","src":"5690:124:31","statements":[{"nodeType":"YulAssignment","src":"5700:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:31"},"nodeType":"YulFunctionCall","src":"5708:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:31"},"nodeType":"YulFunctionCall","src":"5789:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:31"},"nodeType":"YulFunctionCall","src":"5736:71:31"},"nodeType":"YulExpressionStatement","src":"5736:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:31","type":""}],"src":"5592:222:31"},{"body":{"nodeType":"YulBlock","src":"5885:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5902:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5925:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5907:17:31"},"nodeType":"YulFunctionCall","src":"5907:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5895:6:31"},"nodeType":"YulFunctionCall","src":"5895:37:31"},"nodeType":"YulExpressionStatement","src":"5895:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5873:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5880:3:31","type":""}],"src":"5820:118:31"},{"body":{"nodeType":"YulBlock","src":"6042:124:31","statements":[{"nodeType":"YulAssignment","src":"6052:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6064:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6075:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6060:3:31"},"nodeType":"YulFunctionCall","src":"6060:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6052:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6132:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6145:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6156:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6141:3:31"},"nodeType":"YulFunctionCall","src":"6141:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6088:43:31"},"nodeType":"YulFunctionCall","src":"6088:71:31"},"nodeType":"YulExpressionStatement","src":"6088:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6014:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6026:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6037:4:31","type":""}],"src":"5944:222:31"},{"body":{"nodeType":"YulBlock","src":"6298:206:31","statements":[{"nodeType":"YulAssignment","src":"6308:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6320:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6331:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6316:3:31"},"nodeType":"YulFunctionCall","src":"6316:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6308:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6388:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6401:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6412:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6397:3:31"},"nodeType":"YulFunctionCall","src":"6397:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6344:43:31"},"nodeType":"YulFunctionCall","src":"6344:71:31"},"nodeType":"YulExpressionStatement","src":"6344:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6469:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:31"},"nodeType":"YulFunctionCall","src":"6478:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:31"},"nodeType":"YulFunctionCall","src":"6425:72:31"},"nodeType":"YulExpressionStatement","src":"6425:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6262:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6274:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6282:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6293:4:31","type":""}],"src":"6172:332:31"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546573744E465400000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0xBD9 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0xBD9 JUMP JUMPDEST POP POP POP PUSH3 0xB7 CALLER PUSH1 0x1 PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCA CALLER PUSH1 0x2 PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xDD CALLER PUSH1 0x3 PUSH3 0xE3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xD7D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x158 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14F SWAP2 SWAP1 PUSH3 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x16E DUP4 DUP4 PUSH1 0x0 PUSH3 0x1EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1DC SWAP2 SWAP1 PUSH3 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x1FE DUP5 PUSH3 0x41F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x249 JUMPI PUSH3 0x248 DUP2 DUP5 DUP7 PUSH3 0x45C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2E3 JUMPI PUSH3 0x294 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH3 0x52E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x367 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x46F DUP4 DUP4 DUP4 PUSH3 0x70B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x529 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4E8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DF SWAP2 SWAP1 PUSH3 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x520 SWAP3 SWAP2 SWAP1 PUSH3 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x568 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x6B3 JUMPI PUSH1 0x0 PUSH3 0x581 DUP5 PUSH3 0x7DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x5ED JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x609 JUMPI POP PUSH3 0x607 DUP2 DUP5 PUSH3 0x872 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x64E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x645 SWAP2 SWAP1 PUSH3 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x6B1 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x7D6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH3 0x78E JUMPI POP PUSH3 0x78D DUP5 DUP5 PUSH3 0x872 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST DUP1 PUSH3 0x7D5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x7BD DUP4 PUSH3 0x88E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x7F3 DUP4 PUSH3 0x41F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x869 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x860 SWAP2 SWAP1 PUSH3 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x886 DUP4 DUP4 PUSH3 0x8CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x9E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x9F7 JUMPI PUSH3 0x9F6 PUSH3 0x999 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xA61 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xA22 JUMP JUMPDEST PUSH3 0xA6D DUP7 DUP4 PUSH3 0xA22 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABA PUSH3 0xAB4 PUSH3 0xAAE DUP5 PUSH3 0xA85 JUMP JUMPDEST PUSH3 0xA8F JUMP JUMPDEST PUSH3 0xA85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAD6 DUP4 PUSH3 0xA99 JUMP JUMPDEST PUSH3 0xAEE PUSH3 0xAE5 DUP3 PUSH3 0xAC1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xA2F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xB05 PUSH3 0xAF6 JUMP JUMPDEST PUSH3 0xB12 DUP2 DUP5 DUP5 PUSH3 0xACB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xB3A JUMPI PUSH3 0xB2E PUSH1 0x0 DUP3 PUSH3 0xAFB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xB89 JUMPI PUSH3 0xB53 DUP2 PUSH3 0x9FD JUMP JUMPDEST PUSH3 0xB5E DUP5 PUSH3 0xA12 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xB6E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xB86 PUSH3 0xB7D DUP6 PUSH3 0xA12 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xB17 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBAE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xB8E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBC9 DUP4 DUP4 PUSH3 0xB9B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBE4 DUP3 PUSH3 0x95F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xC00 JUMPI PUSH3 0xBFF PUSH3 0x96A JUMP JUMPDEST JUMPDEST PUSH3 0xC0C DUP3 SLOAD PUSH3 0x9C8 JUMP JUMPDEST PUSH3 0xC19 DUP3 DUP3 DUP6 PUSH3 0xB3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xC51 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xC3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xC48 DUP6 DUP3 PUSH3 0xBBB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xCB8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xC61 DUP7 PUSH3 0x9FD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xC8B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC64 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xCAB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xCA7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xB9B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCED DUP3 PUSH3 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCFF DUP2 PUSH3 0xCE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD1C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xCF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xD2D DUP2 PUSH3 0xA85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD4A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xD22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xD67 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xCF4 JUMP JUMPDEST PUSH3 0xD76 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xD22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FC4 DUP1 PUSH3 0xD8D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC7CC557D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x3CD DUP3 PUSH2 0x8A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x913 JUMP JUMPDEST POP PUSH2 0x47C DUP3 PUSH2 0x99B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 DUP3 PUSH2 0x490 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP4 DUP4 PUSH2 0x51A PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x595 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP3 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x640 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x72B PUSH2 0x724 PUSH2 0x9D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x745 PUSH2 0x9D8 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xD7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x828 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79A DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x5BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x815 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x483 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x820 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x757 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x837 DUP3 PUSH2 0x913 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x842 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x88D JUMP JUMPDEST DUP1 PUSH2 0x86C DUP5 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x87D SWAP3 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP4 DUP4 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91F DUP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x992 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE DUP5 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA40 JUMPI PUSH2 0xA3F DUP2 DUP5 DUP7 PUSH2 0x12A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD1 JUMPI PUSH2 0xA82 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB54 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xF25 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE9A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xE92 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xF23 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF52 DUP5 PUSH2 0x136B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF71 JUMPI PUSH2 0xF70 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFA3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1006 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFB1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x111B JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 PUSH2 0x112B DUP5 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11A9 JUMPI POP PUSH2 0x11A7 DUP2 DUP5 PUSH2 0x895 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11EB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x124D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12B2 DUP4 DUP4 DUP4 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x1366 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135D SWAP3 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x13C9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1406 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13FC JUMPI PUSH2 0x13FB PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1435 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x142B JUMPI PUSH2 0x142A PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x145E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1454 JUMPI PUSH2 0x1453 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1483 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x14A6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x14B5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1537 JUMPI POP PUSH2 0x1536 DUP5 DUP5 PUSH2 0x895 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1575 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155D DUP4 PUSH2 0x99B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x1593 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E5 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160F DUP5 DUP3 DUP6 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1618 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1688 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x166D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP3 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x16BA DUP2 DUP6 PUSH2 0x1659 JUMP JUMPDEST SWAP4 POP PUSH2 0x16CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1694 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP5 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1730 DUP2 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174C JUMPI PUSH2 0x174B PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175A DUP5 DUP3 DUP6 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178E DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C8 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E5 DUP2 PUSH2 0x17BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1810 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1821 DUP6 DUP3 DUP7 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1852 DUP7 DUP3 DUP8 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1863 DUP7 DUP3 DUP8 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1874 DUP7 DUP3 DUP8 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A2 DUP5 DUP3 DUP6 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B4 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH2 0x1618 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18FB DUP2 PUSH2 0x18D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1937 DUP6 DUP3 DUP7 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1983 DUP3 PUSH2 0x1694 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19A2 JUMPI PUSH2 0x19A1 PUSH2 0x194B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 PUSH2 0x157F JUMP JUMPDEST SWAP1 POP PUSH2 0x19C1 DUP3 DUP3 PUSH2 0x197A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH2 0x19EA DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A19 PUSH2 0x1A14 DUP5 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x1946 JUMP JUMPDEST JUMPDEST PUSH2 0x1A40 DUP5 DUP3 DUP6 PUSH2 0x19F7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x1941 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A9E DUP8 DUP3 DUP9 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1AAF DUP8 DUP3 DUP9 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1AC0 DUP8 DUP3 DUP9 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x158E JUMP JUMPDEST JUMPDEST PUSH2 0x1AED DUP8 DUP3 DUP9 ADD PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B3D PUSH2 0x1B38 DUP5 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x1B25 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B89 JUMPI DUP1 PUSH2 0x1B75 DUP9 DUP3 PUSH2 0x1721 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B62 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BA8 JUMPI PUSH2 0x1BA7 PUSH2 0x1941 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BB8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF5 JUMPI PUSH2 0x1BF4 PUSH2 0x158E JUMP JUMPDEST JUMPDEST PUSH2 0x1C01 DUP5 DUP3 DUP6 ADD PUSH2 0x1B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C40 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1CCC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x1CD9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F74206F776E6572206F6620746F6B656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D46 PUSH1 0x12 DUP4 PUSH2 0x1659 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DB6 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E09 DUP3 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1E13 DUP2 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B DUP3 DUP6 PUSH2 0x1DFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP3 DUP5 PUSH2 0x1DFE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7A DUP3 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x1E84 DUP2 DUP6 PUSH2 0x1E5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1E94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1E9D DUP2 PUSH2 0x1694 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EBD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1ECA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1ED7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18AB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1EE9 DUP2 DUP5 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F03 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1F87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 BALANCE 0x29 0xE7 0xCD 0xC1 0xDB LOG4 EXTCODEHASH 0xCF 0xC0 SUB PUSH20 0x462C9CBAB8920B14500575FD8210E86D1208D64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"117:853:29:-:0;;;150:137;;;;;;;;;;1380:113:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;200:20:29::1;206:10;218:1;200:5;;;:20;;:::i;:::-;230;236:10;248:1;230:5;;;:20;;:::i;:::-;260;266:10;278:1;260:5;;;:20;;:::i;:::-;117:853:::0;;9978:327:10;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;;;:32;;:::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;;;:17;;:::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;;;:37;;:::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;;;:48;;:::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;;;:38;;:::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;;;:22;;:::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;;;:29;;:::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;;;:32;;:::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;;;:21;;:::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;16212:241::-;16275:7;16294:13;16310:17;16319:7;16310:8;;;:17;;:::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;392:158:29:-;481:4;504:39;527:5;534:8;504:22;;;:39;;:::i;:::-;497:46;;392:158;;;;:::o;5963:127:10:-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;7:99:31:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:118::-;5907:24;5925:5;5907:24;:::i;:::-;5902:3;5895:37;5820:118;;:::o;5944:222::-;6037:4;6075:2;6064:9;6060:18;6052:26;;6088:71;6156:1;6145:9;6141:17;6132:6;6088:71;:::i;:::-;5944:222;;;;:::o;6172:332::-;6293:4;6331:2;6320:9;6316:18;6308:26;;6344:71;6412:1;6401:9;6397:17;6388:6;6344:71;:::i;:::-;6425:72;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6172:332;;;;;:::o;117:853:29:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2979":{"entryPoint":2528,"id":2979,"parameterSlots":3,"returnSlots":0},"@_approve_3045":{"entryPoint":4322,"id":3045,"parameterSlots":4,"returnSlots":0},"@_baseURI_2360":{"entryPoint":3884,"id":2360,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2619":{"entryPoint":4775,"id":2619,"parameterSlots":3,"returnSlots":0},"@_getApproved_2546":{"entryPoint":2459,"id":2546,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_2582":{"entryPoint":5310,"id":2582,"parameterSlots":3,"returnSlots":1},"@_msgSender_4274":{"entryPoint":2520,"id":4274,"parameterSlots":0,"returnSlots":1},"@_ownerOf_2533":{"entryPoint":4261,"id":2533,"parameterSlots":1,"returnSlots":1},"@_requireOwned_3111":{"entryPoint":2323,"id":3111,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_3082":{"entryPoint":3084,"id":3082,"parameterSlots":3,"returnSlots":0},"@_update_2725":{"entryPoint":2546,"id":2725,"parameterSlots":3,"returnSlots":1},"@approve_2376":{"entryPoint":1155,"id":2376,"parameterSlots":2,"returnSlots":0},"@balanceOf_2284":{"entryPoint":1485,"id":2284,"parameterSlots":1,"returnSlots":1},"@batchRevokeApprovals_9769":{"entryPoint":1876,"id":9769,"parameterSlots":1,"returnSlots":0},"@checkOnERC721Received_3351":{"entryPoint":3451,"id":3351,"parameterSlots":5,"returnSlots":0},"@getApproved_2393":{"entryPoint":1127,"id":2393,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_2426":{"entryPoint":4113,"id":2426,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_9726":{"entryPoint":2197,"id":9726,"parameterSlots":2,"returnSlots":1},"@log10_7212":{"entryPoint":4971,"id":7212,"parameterSlots":1,"returnSlots":1},"@name_2306":{"entryPoint":981,"id":2306,"parameterSlots":0,"returnSlots":1},"@ownerOf_2297":{"entryPoint":1467,"id":2297,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_2490":{"entryPoint":1435,"id":2490,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_2520":{"entryPoint":1839,"id":2520,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_2409":{"entryPoint":1817,"id":2409,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2256":{"entryPoint":755,"id":2256,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5821":{"entryPoint":2217,"id":5821,"parameterSlots":1,"returnSlots":1},"@symbol_2315":{"entryPoint":1671,"id":2315,"parameterSlots":0,"returnSlots":1},"@toString_4676":{"entryPoint":3907,"id":4676,"parameterSlots":1,"returnSlots":1},"@tokenURI_2351":{"entryPoint":2092,"id":2351,"parameterSlots":1,"returnSlots":1},"@transferFrom_2472":{"entryPoint":1177,"id":2472,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6954,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6662,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6102,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":7924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6187,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6774,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6401,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6123,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":5611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6037,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5668,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6_to_t_string_memory_ptr_fromStack":{"entryPoint":7481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7727,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7848,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8037,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":7338,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6330,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6571,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5503,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6905,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6598,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7763,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5710,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7774,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5721,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7667,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6019,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5656,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5987,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5888,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6647,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5738,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6522,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7595,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7548,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7990,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7242,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7393,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6475,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6465,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6949,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6470,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5518,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5513,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5780,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6":{"entryPoint":7440,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6079,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6357,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5567,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5898,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18441:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"378:105:31","statements":[{"nodeType":"YulAssignment","src":"388:89:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:31"},"nodeType":"YulFunctionCall","src":"399:78:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:31"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:31","type":""}],"src":"334:149:31"},{"body":{"nodeType":"YulBlock","src":"531:78:31","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:31"},"nodeType":"YulFunctionCall","src":"589:12:31"},"nodeType":"YulExpressionStatement","src":"589:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:31"},"nodeType":"YulFunctionCall","src":"561:23:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:31"},"nodeType":"YulFunctionCall","src":"551:34:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:31"},"nodeType":"YulFunctionCall","src":"544:42:31"},"nodeType":"YulIf","src":"541:62:31"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:31","type":""}],"src":"489:120:31"},{"body":{"nodeType":"YulBlock","src":"666:86:31","statements":[{"nodeType":"YulAssignment","src":"676:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:31"},"nodeType":"YulFunctionCall","src":"685:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:31"},"nodeType":"YulFunctionCall","src":"714:32:31"},"nodeType":"YulExpressionStatement","src":"714:32:31"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:31","type":""}],"src":"615:137:31"},{"body":{"nodeType":"YulBlock","src":"823:262:31","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:31"},"nodeType":"YulFunctionCall","src":"871:79:31"},"nodeType":"YulExpressionStatement","src":"871:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:31"},"nodeType":"YulFunctionCall","src":"840:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:31"},"nodeType":"YulFunctionCall","src":"836:32:31"},"nodeType":"YulIf","src":"833:119:31"},{"nodeType":"YulBlock","src":"962:116:31","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:31","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:31"},"nodeType":"YulFunctionCall","src":"1036:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:31"},"nodeType":"YulFunctionCall","src":"1016:52:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:31","type":""}],"src":"758:327:31"},{"body":{"nodeType":"YulBlock","src":"1133:48:31","statements":[{"nodeType":"YulAssignment","src":"1143:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:31"},"nodeType":"YulFunctionCall","src":"1161:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:31"},"nodeType":"YulFunctionCall","src":"1154:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:31","type":""}],"src":"1091:90:31"},{"body":{"nodeType":"YulBlock","src":"1246:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:31"},"nodeType":"YulFunctionCall","src":"1268:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:31"},"nodeType":"YulFunctionCall","src":"1256:34:31"},"nodeType":"YulExpressionStatement","src":"1256:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:31","type":""}],"src":"1187:109:31"},{"body":{"nodeType":"YulBlock","src":"1394:118:31","statements":[{"nodeType":"YulAssignment","src":"1404:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:31"},"nodeType":"YulFunctionCall","src":"1412:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:31"},"nodeType":"YulFunctionCall","src":"1487:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:31"},"nodeType":"YulFunctionCall","src":"1440:65:31"},"nodeType":"YulExpressionStatement","src":"1440:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:31","type":""}],"src":"1302:210:31"},{"body":{"nodeType":"YulBlock","src":"1577:40:31","statements":[{"nodeType":"YulAssignment","src":"1588:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:31"},"nodeType":"YulFunctionCall","src":"1598:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:31","type":""}],"src":"1518:99:31"},{"body":{"nodeType":"YulBlock","src":"1719:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:31"},"nodeType":"YulFunctionCall","src":"1729:19:31"},"nodeType":"YulExpressionStatement","src":"1729:19:31"},{"nodeType":"YulAssignment","src":"1757:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:31"},"nodeType":"YulFunctionCall","src":"1772:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:31","type":""}],"src":"1623:169:31"},{"body":{"nodeType":"YulBlock","src":"1860:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:31"},"nodeType":"YulFunctionCall","src":"1960:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:31"},"nodeType":"YulFunctionCall","src":"1979:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:31"},"nodeType":"YulFunctionCall","src":"1973:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:31"},"nodeType":"YulFunctionCall","src":"1953:39:31"},"nodeType":"YulExpressionStatement","src":"1953:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:31"},"nodeType":"YulFunctionCall","src":"1897:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:31","statements":[{"nodeType":"YulAssignment","src":"1913:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:31"},"nodeType":"YulFunctionCall","src":"1918:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:31","statements":[]},"src":"1889:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:31"},"nodeType":"YulFunctionCall","src":"2018:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:31"},"nodeType":"YulFunctionCall","src":"2011:27:31"},"nodeType":"YulExpressionStatement","src":"2011:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:31","type":""}],"src":"1798:246:31"},{"body":{"nodeType":"YulBlock","src":"2098:54:31","statements":[{"nodeType":"YulAssignment","src":"2108:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:31"},"nodeType":"YulFunctionCall","src":"2122:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:31"},"nodeType":"YulFunctionCall","src":"2138:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:31"},"nodeType":"YulFunctionCall","src":"2118:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:31","type":""}],"src":"2050:102:31"},{"body":{"nodeType":"YulBlock","src":"2250:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:31"},"nodeType":"YulFunctionCall","src":"2274:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:31"},"nodeType":"YulFunctionCall","src":"2329:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:31"},"nodeType":"YulFunctionCall","src":"2444:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:31"},"nodeType":"YulFunctionCall","src":"2409:65:31"},"nodeType":"YulExpressionStatement","src":"2409:65:31"},{"nodeType":"YulAssignment","src":"2483:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:31"},"nodeType":"YulFunctionCall","src":"2499:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:31"},"nodeType":"YulFunctionCall","src":"2490:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:31","type":""}],"src":"2158:377:31"},{"body":{"nodeType":"YulBlock","src":"2659:195:31","statements":[{"nodeType":"YulAssignment","src":"2669:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:31"},"nodeType":"YulFunctionCall","src":"2677:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:31"},"nodeType":"YulFunctionCall","src":"2712:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:31"},"nodeType":"YulFunctionCall","src":"2731:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:31"},"nodeType":"YulFunctionCall","src":"2705:47:31"},"nodeType":"YulExpressionStatement","src":"2705:47:31"},{"nodeType":"YulAssignment","src":"2761:86:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:31"},"nodeType":"YulFunctionCall","src":"2769:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:31","type":""}],"src":"2541:313:31"},{"body":{"nodeType":"YulBlock","src":"2905:32:31","statements":[{"nodeType":"YulAssignment","src":"2915:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:31","type":""}],"src":"2860:77:31"},{"body":{"nodeType":"YulBlock","src":"2986:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:31"},"nodeType":"YulFunctionCall","src":"3045:12:31"},"nodeType":"YulExpressionStatement","src":"3045:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:31"},"nodeType":"YulFunctionCall","src":"3016:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:31"},"nodeType":"YulFunctionCall","src":"3006:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:31"},"nodeType":"YulFunctionCall","src":"2999:43:31"},"nodeType":"YulIf","src":"2996:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:31","type":""}],"src":"2943:122:31"},{"body":{"nodeType":"YulBlock","src":"3123:87:31","statements":[{"nodeType":"YulAssignment","src":"3133:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:31"},"nodeType":"YulFunctionCall","src":"3142:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:31"},"nodeType":"YulFunctionCall","src":"3171:33:31"},"nodeType":"YulExpressionStatement","src":"3171:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:31","type":""}],"src":"3071:139:31"},{"body":{"nodeType":"YulBlock","src":"3282:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:31"},"nodeType":"YulFunctionCall","src":"3330:79:31"},"nodeType":"YulExpressionStatement","src":"3330:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:31"},"nodeType":"YulFunctionCall","src":"3299:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:31"},"nodeType":"YulFunctionCall","src":"3295:32:31"},"nodeType":"YulIf","src":"3292:119:31"},{"nodeType":"YulBlock","src":"3421:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:31"},"nodeType":"YulFunctionCall","src":"3496:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:31"},"nodeType":"YulFunctionCall","src":"3475:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:31","type":""}],"src":"3216:329:31"},{"body":{"nodeType":"YulBlock","src":"3596:81:31","statements":[{"nodeType":"YulAssignment","src":"3606:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:31"},"nodeType":"YulFunctionCall","src":"3617:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:31","type":""}],"src":"3551:126:31"},{"body":{"nodeType":"YulBlock","src":"3728:51:31","statements":[{"nodeType":"YulAssignment","src":"3738:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:31"},"nodeType":"YulFunctionCall","src":"3749:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:31","type":""}],"src":"3683:96:31"},{"body":{"nodeType":"YulBlock","src":"3850:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:31"},"nodeType":"YulFunctionCall","src":"3872:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:31"},"nodeType":"YulFunctionCall","src":"3860:37:31"},"nodeType":"YulExpressionStatement","src":"3860:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:31","type":""}],"src":"3785:118:31"},{"body":{"nodeType":"YulBlock","src":"4007:124:31","statements":[{"nodeType":"YulAssignment","src":"4017:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:31"},"nodeType":"YulFunctionCall","src":"4025:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:31"},"nodeType":"YulFunctionCall","src":"4106:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:31"},"nodeType":"YulFunctionCall","src":"4053:71:31"},"nodeType":"YulExpressionStatement","src":"4053:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:31","type":""}],"src":"3909:222:31"},{"body":{"nodeType":"YulBlock","src":"4180:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:31"},"nodeType":"YulFunctionCall","src":"4239:12:31"},"nodeType":"YulExpressionStatement","src":"4239:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:31"},"nodeType":"YulFunctionCall","src":"4210:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:31"},"nodeType":"YulFunctionCall","src":"4200:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:31"},"nodeType":"YulFunctionCall","src":"4193:43:31"},"nodeType":"YulIf","src":"4190:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:31","type":""}],"src":"4137:122:31"},{"body":{"nodeType":"YulBlock","src":"4317:87:31","statements":[{"nodeType":"YulAssignment","src":"4327:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:31"},"nodeType":"YulFunctionCall","src":"4336:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:31"},"nodeType":"YulFunctionCall","src":"4365:33:31"},"nodeType":"YulExpressionStatement","src":"4365:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:31","type":""}],"src":"4265:139:31"},{"body":{"nodeType":"YulBlock","src":"4493:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:31"},"nodeType":"YulFunctionCall","src":"4541:79:31"},"nodeType":"YulExpressionStatement","src":"4541:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:31"},"nodeType":"YulFunctionCall","src":"4510:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:31"},"nodeType":"YulFunctionCall","src":"4506:32:31"},"nodeType":"YulIf","src":"4503:119:31"},{"nodeType":"YulBlock","src":"4632:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:31"},"nodeType":"YulFunctionCall","src":"4707:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:31"},"nodeType":"YulFunctionCall","src":"4686:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:31"}]}]},{"nodeType":"YulBlock","src":"4759:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:31"},"nodeType":"YulFunctionCall","src":"4835:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:31"},"nodeType":"YulFunctionCall","src":"4814:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:31","type":""}],"src":"4410:474:31"},{"body":{"nodeType":"YulBlock","src":"4990:519:31","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:31"},"nodeType":"YulFunctionCall","src":"5038:79:31"},"nodeType":"YulExpressionStatement","src":"5038:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:31"},"nodeType":"YulFunctionCall","src":"5007:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:31"},"nodeType":"YulFunctionCall","src":"5003:32:31"},"nodeType":"YulIf","src":"5000:119:31"},{"nodeType":"YulBlock","src":"5129:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:31"},"nodeType":"YulFunctionCall","src":"5204:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:31"},"nodeType":"YulFunctionCall","src":"5183:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:31"}]}]},{"nodeType":"YulBlock","src":"5256:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:31"},"nodeType":"YulFunctionCall","src":"5332:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:31"},"nodeType":"YulFunctionCall","src":"5311:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:31"}]}]},{"nodeType":"YulBlock","src":"5384:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:31"},"nodeType":"YulFunctionCall","src":"5460:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:31"},"nodeType":"YulFunctionCall","src":"5439:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:31","type":""}],"src":"4890:619:31"},{"body":{"nodeType":"YulBlock","src":"5581:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:31"},"nodeType":"YulFunctionCall","src":"5629:79:31"},"nodeType":"YulExpressionStatement","src":"5629:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:31"},"nodeType":"YulFunctionCall","src":"5598:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:31"},"nodeType":"YulFunctionCall","src":"5594:32:31"},"nodeType":"YulIf","src":"5591:119:31"},{"nodeType":"YulBlock","src":"5720:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:31"},"nodeType":"YulFunctionCall","src":"5795:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:31"},"nodeType":"YulFunctionCall","src":"5774:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:31","type":""}],"src":"5515:329:31"},{"body":{"nodeType":"YulBlock","src":"5915:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:31"},"nodeType":"YulFunctionCall","src":"5937:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:31"},"nodeType":"YulFunctionCall","src":"5925:37:31"},"nodeType":"YulExpressionStatement","src":"5925:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:31","type":""}],"src":"5850:118:31"},{"body":{"nodeType":"YulBlock","src":"6072:124:31","statements":[{"nodeType":"YulAssignment","src":"6082:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:31"},"nodeType":"YulFunctionCall","src":"6090:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:31"},"nodeType":"YulFunctionCall","src":"6171:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:31"},"nodeType":"YulFunctionCall","src":"6118:71:31"},"nodeType":"YulExpressionStatement","src":"6118:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:31","type":""}],"src":"5974:222:31"},{"body":{"nodeType":"YulBlock","src":"6242:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:31"},"nodeType":"YulFunctionCall","src":"6298:12:31"},"nodeType":"YulExpressionStatement","src":"6298:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:31"},"nodeType":"YulFunctionCall","src":"6272:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:31"},"nodeType":"YulFunctionCall","src":"6262:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:31"},"nodeType":"YulFunctionCall","src":"6255:40:31"},"nodeType":"YulIf","src":"6252:60:31"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:31","type":""}],"src":"6202:116:31"},{"body":{"nodeType":"YulBlock","src":"6373:84:31","statements":[{"nodeType":"YulAssignment","src":"6383:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:31"},"nodeType":"YulFunctionCall","src":"6392:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:31"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:31"},"nodeType":"YulFunctionCall","src":"6421:30:31"},"nodeType":"YulExpressionStatement","src":"6421:30:31"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:31","type":""}],"src":"6324:133:31"},{"body":{"nodeType":"YulBlock","src":"6543:388:31","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:31"},"nodeType":"YulFunctionCall","src":"6591:79:31"},"nodeType":"YulExpressionStatement","src":"6591:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:31"},"nodeType":"YulFunctionCall","src":"6560:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:31"},"nodeType":"YulFunctionCall","src":"6556:32:31"},"nodeType":"YulIf","src":"6553:119:31"},{"nodeType":"YulBlock","src":"6682:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:31","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:31"},"nodeType":"YulFunctionCall","src":"6757:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:31"},"nodeType":"YulFunctionCall","src":"6736:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:31"}]}]},{"nodeType":"YulBlock","src":"6809:115:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:31","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:31"},"nodeType":"YulFunctionCall","src":"6882:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:31"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:31"},"nodeType":"YulFunctionCall","src":"6864:50:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:31","type":""}],"src":"6463:468:31"},{"body":{"nodeType":"YulBlock","src":"7026:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:31"},"nodeType":"YulFunctionCall","src":"7036:12:31"},"nodeType":"YulExpressionStatement","src":"7036:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:31"},{"body":{"nodeType":"YulBlock","src":"7149:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:31"},"nodeType":"YulFunctionCall","src":"7159:12:31"},"nodeType":"YulExpressionStatement","src":"7159:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:31"},{"body":{"nodeType":"YulBlock","src":"7211:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:31"},"nodeType":"YulFunctionCall","src":"7221:88:31"},"nodeType":"YulExpressionStatement","src":"7221:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:31"},"nodeType":"YulFunctionCall","src":"7318:15:31"},"nodeType":"YulExpressionStatement","src":"7318:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:31"},"nodeType":"YulFunctionCall","src":"7342:15:31"},"nodeType":"YulExpressionStatement","src":"7342:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:31"},{"body":{"nodeType":"YulBlock","src":"7412:238:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:31"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:31"},"nodeType":"YulFunctionCall","src":"7452:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:31"},"nodeType":"YulFunctionCall","src":"7440:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:31"},"nodeType":"YulFunctionCall","src":"7593:18:31"},"nodeType":"YulExpressionStatement","src":"7593:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:31"},"nodeType":"YulFunctionCall","src":"7531:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:31"},"nodeType":"YulFunctionCall","src":"7567:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:31"},"nodeType":"YulFunctionCall","src":"7528:62:31"},"nodeType":"YulIf","src":"7525:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:31"},"nodeType":"YulFunctionCall","src":"7622:22:31"},"nodeType":"YulExpressionStatement","src":"7622:22:31"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:31","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:31","type":""}],"src":"7369:281:31"},{"body":{"nodeType":"YulBlock","src":"7697:88:31","statements":[{"nodeType":"YulAssignment","src":"7707:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:31"},"nodeType":"YulFunctionCall","src":"7717:20:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:31"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:31"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:31"},"nodeType":"YulFunctionCall","src":"7746:33:31"},"nodeType":"YulExpressionStatement","src":"7746:33:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:31","type":""}],"src":"7656:129:31"},{"body":{"nodeType":"YulBlock","src":"7857:241:31","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:31"},"nodeType":"YulFunctionCall","src":"7964:18:31"},"nodeType":"YulExpressionStatement","src":"7964:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:31"},"nodeType":"YulFunctionCall","src":"7931:30:31"},"nodeType":"YulIf","src":"7928:56:31"},{"nodeType":"YulAssignment","src":"7994:37:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:31"},"nodeType":"YulFunctionCall","src":"8002:29:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:31"}]},{"nodeType":"YulAssignment","src":"8068:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:31"},"nodeType":"YulFunctionCall","src":"8076:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:31","type":""}],"src":"7791:307:31"},{"body":{"nodeType":"YulBlock","src":"8168:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:31"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:31"},"nodeType":"YulFunctionCall","src":"8178:30:31"},"nodeType":"YulExpressionStatement","src":"8178:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:31"},"nodeType":"YulFunctionCall","src":"8224:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:31"},"nodeType":"YulFunctionCall","src":"8217:27:31"},"nodeType":"YulExpressionStatement","src":"8217:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:31","type":""}],"src":"8104:146:31"},{"body":{"nodeType":"YulBlock","src":"8339:340:31","statements":[{"nodeType":"YulAssignment","src":"8349:74:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:31"},"nodeType":"YulFunctionCall","src":"8374:48:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:31"},"nodeType":"YulFunctionCall","src":"8358:65:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:31"},"nodeType":"YulFunctionCall","src":"8432:21:31"},"nodeType":"YulExpressionStatement","src":"8432:21:31"},{"nodeType":"YulVariableDeclaration","src":"8462:27:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:31"},"nodeType":"YulFunctionCall","src":"8473:16:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:31"},"nodeType":"YulFunctionCall","src":"8529:79:31"},"nodeType":"YulExpressionStatement","src":"8529:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:31"},"nodeType":"YulFunctionCall","src":"8504:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:31"},"nodeType":"YulFunctionCall","src":"8501:25:31"},"nodeType":"YulIf","src":"8498:112:31"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:31"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:31"},"nodeType":"YulFunctionCall","src":"8619:54:31"},"nodeType":"YulExpressionStatement","src":"8619:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:31","type":""}],"src":"8256:423:31"},{"body":{"nodeType":"YulBlock","src":"8759:277:31","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:31"},"nodeType":"YulFunctionCall","src":"8810:79:31"},"nodeType":"YulExpressionStatement","src":"8810:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:31"},"nodeType":"YulFunctionCall","src":"8783:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:31"},"nodeType":"YulFunctionCall","src":"8779:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:31"},"nodeType":"YulFunctionCall","src":"8772:35:31"},"nodeType":"YulIf","src":"8769:122:31"},{"nodeType":"YulVariableDeclaration","src":"8900:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:31"},"nodeType":"YulFunctionCall","src":"8914:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:31","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:31"},"nodeType":"YulFunctionCall","src":"8999:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:31"},"nodeType":"YulFunctionCall","src":"8952:78:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:31","type":""}],"src":"8698:338:31"},{"body":{"nodeType":"YulBlock","src":"9168:817:31","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:31"},"nodeType":"YulFunctionCall","src":"9217:79:31"},"nodeType":"YulExpressionStatement","src":"9217:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:31"},"nodeType":"YulFunctionCall","src":"9185:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:31"},"nodeType":"YulFunctionCall","src":"9181:33:31"},"nodeType":"YulIf","src":"9178:120:31"},{"nodeType":"YulBlock","src":"9308:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:31"},"nodeType":"YulFunctionCall","src":"9383:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:31"},"nodeType":"YulFunctionCall","src":"9362:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:31"}]}]},{"nodeType":"YulBlock","src":"9435:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:31"},"nodeType":"YulFunctionCall","src":"9511:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:31"},"nodeType":"YulFunctionCall","src":"9490:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:31"}]}]},{"nodeType":"YulBlock","src":"9563:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:31","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:31"},"nodeType":"YulFunctionCall","src":"9639:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:31"},"nodeType":"YulFunctionCall","src":"9618:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:31"}]}]},{"nodeType":"YulBlock","src":"9691:287:31","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:31"},"nodeType":"YulFunctionCall","src":"9733:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:31"},"nodeType":"YulFunctionCall","src":"9720:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:31"},"nodeType":"YulFunctionCall","src":"9801:79:31"},"nodeType":"YulExpressionStatement","src":"9801:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:31"},"nodeType":"YulFunctionCall","src":"9768:30:31"},"nodeType":"YulIf","src":"9765:117:31"},{"nodeType":"YulAssignment","src":"9896:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:31"},"nodeType":"YulFunctionCall","src":"9936:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:31"},"nodeType":"YulFunctionCall","src":"9906:62:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:31","type":""}],"src":"9042:943:31"},{"body":{"nodeType":"YulBlock","src":"10073:229:31","statements":[{"body":{"nodeType":"YulBlock","src":"10178:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10180:16:31"},"nodeType":"YulFunctionCall","src":"10180:18:31"},"nodeType":"YulExpressionStatement","src":"10180:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10150:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10158:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10147:2:31"},"nodeType":"YulFunctionCall","src":"10147:30:31"},"nodeType":"YulIf","src":"10144:56:31"},{"nodeType":"YulAssignment","src":"10210:25:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10222:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10230:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10218:3:31"},"nodeType":"YulFunctionCall","src":"10218:17:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10210:4:31"}]},{"nodeType":"YulAssignment","src":"10272:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10284:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"10290:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10280:3:31"},"nodeType":"YulFunctionCall","src":"10280:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10272:4:31"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10057:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10068:4:31","type":""}],"src":"9991:311:31"},{"body":{"nodeType":"YulBlock","src":"10397:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10414:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10417:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10407:6:31"},"nodeType":"YulFunctionCall","src":"10407:12:31"},"nodeType":"YulExpressionStatement","src":"10407:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"10308:117:31"},{"body":{"nodeType":"YulBlock","src":"10550:608:31","statements":[{"nodeType":"YulAssignment","src":"10560:90:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10642:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10585:56:31"},"nodeType":"YulFunctionCall","src":"10585:64:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10569:15:31"},"nodeType":"YulFunctionCall","src":"10569:81:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10560:5:31"}]},{"nodeType":"YulVariableDeclaration","src":"10659:16:31","value":{"name":"array","nodeType":"YulIdentifier","src":"10670:5:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10663:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10692:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"10699:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10685:6:31"},"nodeType":"YulFunctionCall","src":"10685:21:31"},"nodeType":"YulExpressionStatement","src":"10685:21:31"},{"nodeType":"YulAssignment","src":"10715:23:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10726:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"10733:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:31"},"nodeType":"YulFunctionCall","src":"10722:16:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10715:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"10748:44:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10766:6:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10778:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10786:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10774:3:31"},"nodeType":"YulFunctionCall","src":"10774:17:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10762:3:31"},"nodeType":"YulFunctionCall","src":"10762:30:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"10752:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"10820:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10834:77:31"},"nodeType":"YulFunctionCall","src":"10834:79:31"},"nodeType":"YulExpressionStatement","src":"10834:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"10807:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"10815:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10804:2:31"},"nodeType":"YulFunctionCall","src":"10804:15:31"},"nodeType":"YulIf","src":"10801:122:31"},{"body":{"nodeType":"YulBlock","src":"11008:144:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11023:21:31","value":{"name":"src","nodeType":"YulIdentifier","src":"11041:3:31"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11027:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11065:3:31"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11091:10:31"},{"name":"end","nodeType":"YulIdentifier","src":"11103:3:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11070:20:31"},"nodeType":"YulFunctionCall","src":"11070:37:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11058:6:31"},"nodeType":"YulFunctionCall","src":"11058:50:31"},"nodeType":"YulExpressionStatement","src":"11058:50:31"},{"nodeType":"YulAssignment","src":"11121:21:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11132:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"11137:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11128:3:31"},"nodeType":"YulFunctionCall","src":"11128:14:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11121:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10961:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"10966:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10958:2:31"},"nodeType":"YulFunctionCall","src":"10958:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10974:25:31","statements":[{"nodeType":"YulAssignment","src":"10976:21:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10987:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"10992:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10983:3:31"},"nodeType":"YulFunctionCall","src":"10983:14:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"10976:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"10936:21:31","statements":[{"nodeType":"YulVariableDeclaration","src":"10938:17:31","value":{"name":"offset","nodeType":"YulIdentifier","src":"10949:6:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"10942:3:31","type":""}]}]},"src":"10932:220:31"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10520:6:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"10528:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"10536:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10544:5:31","type":""}],"src":"10448:710:31"},{"body":{"nodeType":"YulBlock","src":"11258:293:31","statements":[{"body":{"nodeType":"YulBlock","src":"11307:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11309:77:31"},"nodeType":"YulFunctionCall","src":"11309:79:31"},"nodeType":"YulExpressionStatement","src":"11309:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11286:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11294:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11282:3:31"},"nodeType":"YulFunctionCall","src":"11282:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"11301:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11278:3:31"},"nodeType":"YulFunctionCall","src":"11278:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11271:6:31"},"nodeType":"YulFunctionCall","src":"11271:35:31"},"nodeType":"YulIf","src":"11268:122:31"},{"nodeType":"YulVariableDeclaration","src":"11399:34:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11426:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11413:12:31"},"nodeType":"YulFunctionCall","src":"11413:20:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11403:6:31","type":""}]},{"nodeType":"YulAssignment","src":"11442:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11518:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11526:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11514:3:31"},"nodeType":"YulFunctionCall","src":"11514:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"11533:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"11541:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11451:62:31"},"nodeType":"YulFunctionCall","src":"11451:94:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11442:5:31"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11236:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"11244:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11252:5:31","type":""}],"src":"11181:370:31"},{"body":{"nodeType":"YulBlock","src":"11648:448:31","statements":[{"body":{"nodeType":"YulBlock","src":"11694:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11696:77:31"},"nodeType":"YulFunctionCall","src":"11696:79:31"},"nodeType":"YulExpressionStatement","src":"11696:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11669:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"11678:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11665:3:31"},"nodeType":"YulFunctionCall","src":"11665:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"11690:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11661:3:31"},"nodeType":"YulFunctionCall","src":"11661:32:31"},"nodeType":"YulIf","src":"11658:119:31"},{"nodeType":"YulBlock","src":"11787:302:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11802:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11833:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11844:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11829:3:31"},"nodeType":"YulFunctionCall","src":"11829:17:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11816:12:31"},"nodeType":"YulFunctionCall","src":"11816:31:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11806:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11894:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11896:77:31"},"nodeType":"YulFunctionCall","src":"11896:79:31"},"nodeType":"YulExpressionStatement","src":"11896:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11866:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11874:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11863:2:31"},"nodeType":"YulFunctionCall","src":"11863:30:31"},"nodeType":"YulIf","src":"11860:117:31"},{"nodeType":"YulAssignment","src":"11991:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12051:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12062:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12047:3:31"},"nodeType":"YulFunctionCall","src":"12047:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12071:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12001:45:31"},"nodeType":"YulFunctionCall","src":"12001:78:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11991:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11618:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11629:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11641:6:31","type":""}],"src":"11557:539:31"},{"body":{"nodeType":"YulBlock","src":"12185:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"12231:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12233:77:31"},"nodeType":"YulFunctionCall","src":"12233:79:31"},"nodeType":"YulExpressionStatement","src":"12233:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12206:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12215:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12202:3:31"},"nodeType":"YulFunctionCall","src":"12202:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12227:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12198:3:31"},"nodeType":"YulFunctionCall","src":"12198:32:31"},"nodeType":"YulIf","src":"12195:119:31"},{"nodeType":"YulBlock","src":"12324:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12339:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12353:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12343:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12368:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12403:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12414:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:31"},"nodeType":"YulFunctionCall","src":"12399:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12423:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12378:20:31"},"nodeType":"YulFunctionCall","src":"12378:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12368:6:31"}]}]},{"nodeType":"YulBlock","src":"12451:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"12466:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12480:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12470:6:31","type":""}]},{"nodeType":"YulAssignment","src":"12496:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12531:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"12542:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12527:3:31"},"nodeType":"YulFunctionCall","src":"12527:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12551:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12506:20:31"},"nodeType":"YulFunctionCall","src":"12506:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12496:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12147:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12158:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12170:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12178:6:31","type":""}],"src":"12102:474:31"},{"body":{"nodeType":"YulBlock","src":"12610:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12627:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12630:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:31"},"nodeType":"YulFunctionCall","src":"12620:88:31"},"nodeType":"YulExpressionStatement","src":"12620:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12724:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12727:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12717:6:31"},"nodeType":"YulFunctionCall","src":"12717:15:31"},"nodeType":"YulExpressionStatement","src":"12717:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12748:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12751:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12741:6:31"},"nodeType":"YulFunctionCall","src":"12741:15:31"},"nodeType":"YulExpressionStatement","src":"12741:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12582:180:31"},{"body":{"nodeType":"YulBlock","src":"12819:269:31","statements":[{"nodeType":"YulAssignment","src":"12829:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12843:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"12849:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12839:3:31"},"nodeType":"YulFunctionCall","src":"12839:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12829:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"12860:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12890:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"12896:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12886:3:31"},"nodeType":"YulFunctionCall","src":"12886:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12864:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"12937:51:31","statements":[{"nodeType":"YulAssignment","src":"12951:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12965:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"12973:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12961:3:31"},"nodeType":"YulFunctionCall","src":"12961:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12951:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12917:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12910:6:31"},"nodeType":"YulFunctionCall","src":"12910:26:31"},"nodeType":"YulIf","src":"12907:81:31"},{"body":{"nodeType":"YulBlock","src":"13040:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13054:16:31"},"nodeType":"YulFunctionCall","src":"13054:18:31"},"nodeType":"YulExpressionStatement","src":"13054:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13004:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13027:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"13035:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13024:2:31"},"nodeType":"YulFunctionCall","src":"13024:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13001:2:31"},"nodeType":"YulFunctionCall","src":"13001:38:31"},"nodeType":"YulIf","src":"12998:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12803:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12812:6:31","type":""}],"src":"12768:320:31"},{"body":{"nodeType":"YulBlock","src":"13248:288:31","statements":[{"nodeType":"YulAssignment","src":"13258:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13270:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13281:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13266:3:31"},"nodeType":"YulFunctionCall","src":"13266:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13258:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13338:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13351:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13362:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13347:3:31"},"nodeType":"YulFunctionCall","src":"13347:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13294:43:31"},"nodeType":"YulFunctionCall","src":"13294:71:31"},"nodeType":"YulExpressionStatement","src":"13294:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13419:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13432:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13443:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13428:3:31"},"nodeType":"YulFunctionCall","src":"13428:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13375:43:31"},"nodeType":"YulFunctionCall","src":"13375:72:31"},"nodeType":"YulExpressionStatement","src":"13375:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13501:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13514:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13525:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13510:3:31"},"nodeType":"YulFunctionCall","src":"13510:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13457:43:31"},"nodeType":"YulFunctionCall","src":"13457:72:31"},"nodeType":"YulExpressionStatement","src":"13457:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13204:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13216:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13224:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13232:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13243:4:31","type":""}],"src":"13094:442:31"},{"body":{"nodeType":"YulBlock","src":"13570:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13587:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13590:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13580:6:31"},"nodeType":"YulFunctionCall","src":"13580:88:31"},"nodeType":"YulExpressionStatement","src":"13580:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13684:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13687:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13677:6:31"},"nodeType":"YulFunctionCall","src":"13677:15:31"},"nodeType":"YulExpressionStatement","src":"13677:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13708:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13711:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13701:6:31"},"nodeType":"YulFunctionCall","src":"13701:15:31"},"nodeType":"YulExpressionStatement","src":"13701:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13542:180:31"},{"body":{"nodeType":"YulBlock","src":"13834:62:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13856:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"13864:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13852:3:31"},"nodeType":"YulFunctionCall","src":"13852:14:31"},{"hexValue":"4e6f74206f776e6572206f6620746f6b656e","kind":"string","nodeType":"YulLiteral","src":"13868:20:31","type":"","value":"Not owner of token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13845:6:31"},"nodeType":"YulFunctionCall","src":"13845:44:31"},"nodeType":"YulExpressionStatement","src":"13845:44:31"}]},"name":"store_literal_in_memory_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13826:6:31","type":""}],"src":"13728:168:31"},{"body":{"nodeType":"YulBlock","src":"14048:220:31","statements":[{"nodeType":"YulAssignment","src":"14058:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14124:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"14129:2:31","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14065:58:31"},"nodeType":"YulFunctionCall","src":"14065:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14058:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14230:3:31"}],"functionName":{"name":"store_literal_in_memory_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6","nodeType":"YulIdentifier","src":"14141:88:31"},"nodeType":"YulFunctionCall","src":"14141:93:31"},"nodeType":"YulExpressionStatement","src":"14141:93:31"},{"nodeType":"YulAssignment","src":"14243:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14254:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"14259:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14250:3:31"},"nodeType":"YulFunctionCall","src":"14250:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14243:3:31"}]}]},"name":"abi_encode_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14036:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14044:3:31","type":""}],"src":"13902:366:31"},{"body":{"nodeType":"YulBlock","src":"14445:248:31","statements":[{"nodeType":"YulAssignment","src":"14455:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14467:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14478:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14463:3:31"},"nodeType":"YulFunctionCall","src":"14463:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14455:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14502:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14513:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14498:3:31"},"nodeType":"YulFunctionCall","src":"14498:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14521:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14527:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14517:3:31"},"nodeType":"YulFunctionCall","src":"14517:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14491:6:31"},"nodeType":"YulFunctionCall","src":"14491:47:31"},"nodeType":"YulExpressionStatement","src":"14491:47:31"},{"nodeType":"YulAssignment","src":"14547:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14681:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14555:124:31"},"nodeType":"YulFunctionCall","src":"14555:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14547:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14425:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14440:4:31","type":""}],"src":"14274:419:31"},{"body":{"nodeType":"YulBlock","src":"14727:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14744:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14747:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14737:6:31"},"nodeType":"YulFunctionCall","src":"14737:88:31"},"nodeType":"YulExpressionStatement","src":"14737:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14841:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14844:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14834:6:31"},"nodeType":"YulFunctionCall","src":"14834:15:31"},"nodeType":"YulExpressionStatement","src":"14834:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14865:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14868:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14858:6:31"},"nodeType":"YulFunctionCall","src":"14858:15:31"},"nodeType":"YulExpressionStatement","src":"14858:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14699:180:31"},{"body":{"nodeType":"YulBlock","src":"14928:190:31","statements":[{"nodeType":"YulAssignment","src":"14938:33:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14965:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14947:17:31"},"nodeType":"YulFunctionCall","src":"14947:24:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14938:5:31"}]},{"body":{"nodeType":"YulBlock","src":"15061:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15063:16:31"},"nodeType":"YulFunctionCall","src":"15063:18:31"},"nodeType":"YulExpressionStatement","src":"15063:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14986:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"14993:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14983:2:31"},"nodeType":"YulFunctionCall","src":"14983:77:31"},"nodeType":"YulIf","src":"14980:103:31"},{"nodeType":"YulAssignment","src":"15092:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15103:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"15110:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15099:3:31"},"nodeType":"YulFunctionCall","src":"15099:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15092:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14914:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14924:3:31","type":""}],"src":"14885:233:31"},{"body":{"nodeType":"YulBlock","src":"15238:34:31","statements":[{"nodeType":"YulAssignment","src":"15248:18:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"15263:3:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15248:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15210:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"15215:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15226:11:31","type":""}],"src":"15124:148:31"},{"body":{"nodeType":"YulBlock","src":"15388:280:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15398:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15445:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15412:32:31"},"nodeType":"YulFunctionCall","src":"15412:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15402:6:31","type":""}]},{"nodeType":"YulAssignment","src":"15460:96:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15544:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"15549:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15467:76:31"},"nodeType":"YulFunctionCall","src":"15467:89:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15460:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15604:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"15611:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:31"},"nodeType":"YulFunctionCall","src":"15600:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"15618:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"15623:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15565:34:31"},"nodeType":"YulFunctionCall","src":"15565:65:31"},"nodeType":"YulExpressionStatement","src":"15565:65:31"},{"nodeType":"YulAssignment","src":"15639:23:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15650:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"15655:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15646:3:31"},"nodeType":"YulFunctionCall","src":"15646:16:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15639:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15369:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15376:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15384:3:31","type":""}],"src":"15278:390:31"},{"body":{"nodeType":"YulBlock","src":"15858:251:31","statements":[{"nodeType":"YulAssignment","src":"15869:102:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15958:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"15967:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15876:81:31"},"nodeType":"YulFunctionCall","src":"15876:95:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15869:3:31"}]},{"nodeType":"YulAssignment","src":"15981:102:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16070:6:31"},{"name":"pos","nodeType":"YulIdentifier","src":"16079:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15988:81:31"},"nodeType":"YulFunctionCall","src":"15988:95:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15981:3:31"}]},{"nodeType":"YulAssignment","src":"16093:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"16100:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16093:3:31"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15829:3:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15835:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15843:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15854:3:31","type":""}],"src":"15674:435:31"},{"body":{"nodeType":"YulBlock","src":"16173:40:31","statements":[{"nodeType":"YulAssignment","src":"16184:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16200:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16194:5:31"},"nodeType":"YulFunctionCall","src":"16194:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16184:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16156:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16166:6:31","type":""}],"src":"16115:98:31"},{"body":{"nodeType":"YulBlock","src":"16314:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16331:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"16336:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16324:6:31"},"nodeType":"YulFunctionCall","src":"16324:19:31"},"nodeType":"YulExpressionStatement","src":"16324:19:31"},{"nodeType":"YulAssignment","src":"16352:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16371:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"16376:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16367:3:31"},"nodeType":"YulFunctionCall","src":"16367:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16352:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16286:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"16291:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16302:11:31","type":""}],"src":"16219:168:31"},{"body":{"nodeType":"YulBlock","src":"16483:283:31","statements":[{"nodeType":"YulVariableDeclaration","src":"16493:52:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16539:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16507:31:31"},"nodeType":"YulFunctionCall","src":"16507:38:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16497:6:31","type":""}]},{"nodeType":"YulAssignment","src":"16554:77:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16619:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"16624:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16561:57:31"},"nodeType":"YulFunctionCall","src":"16561:70:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16554:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16679:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"16686:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16675:3:31"},"nodeType":"YulFunctionCall","src":"16675:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"16693:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"16698:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16640:34:31"},"nodeType":"YulFunctionCall","src":"16640:65:31"},"nodeType":"YulExpressionStatement","src":"16640:65:31"},{"nodeType":"YulAssignment","src":"16714:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16725:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16752:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16730:21:31"},"nodeType":"YulFunctionCall","src":"16730:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16721:3:31"},"nodeType":"YulFunctionCall","src":"16721:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16714:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16464:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16471:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16479:3:31","type":""}],"src":"16393:373:31"},{"body":{"nodeType":"YulBlock","src":"16972:440:31","statements":[{"nodeType":"YulAssignment","src":"16982:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16994:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17005:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16990:3:31"},"nodeType":"YulFunctionCall","src":"16990:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16982:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17063:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17076:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17087:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17072:3:31"},"nodeType":"YulFunctionCall","src":"17072:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17019:43:31"},"nodeType":"YulFunctionCall","src":"17019:71:31"},"nodeType":"YulExpressionStatement","src":"17019:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17144:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17157:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17168:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17153:3:31"},"nodeType":"YulFunctionCall","src":"17153:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17100:43:31"},"nodeType":"YulFunctionCall","src":"17100:72:31"},"nodeType":"YulExpressionStatement","src":"17100:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17226:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17239:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17250:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17235:3:31"},"nodeType":"YulFunctionCall","src":"17235:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17182:43:31"},"nodeType":"YulFunctionCall","src":"17182:72:31"},"nodeType":"YulExpressionStatement","src":"17182:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17275:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17286:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17271:3:31"},"nodeType":"YulFunctionCall","src":"17271:18:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17295:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17291:3:31"},"nodeType":"YulFunctionCall","src":"17291:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17264:6:31"},"nodeType":"YulFunctionCall","src":"17264:48:31"},"nodeType":"YulExpressionStatement","src":"17264:48:31"},{"nodeType":"YulAssignment","src":"17321:84:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17391:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"17400:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17329:61:31"},"nodeType":"YulFunctionCall","src":"17329:76:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17321:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16920:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16932:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16940:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16948:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16956:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16967:4:31","type":""}],"src":"16772:640:31"},{"body":{"nodeType":"YulBlock","src":"17480:79:31","statements":[{"nodeType":"YulAssignment","src":"17490:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17505:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17499:5:31"},"nodeType":"YulFunctionCall","src":"17499:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17490:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17547:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"17521:25:31"},"nodeType":"YulFunctionCall","src":"17521:32:31"},"nodeType":"YulExpressionStatement","src":"17521:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17458:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"17466:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17474:5:31","type":""}],"src":"17418:141:31"},{"body":{"nodeType":"YulBlock","src":"17641:273:31","statements":[{"body":{"nodeType":"YulBlock","src":"17687:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17689:77:31"},"nodeType":"YulFunctionCall","src":"17689:79:31"},"nodeType":"YulExpressionStatement","src":"17689:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17662:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17671:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17658:3:31"},"nodeType":"YulFunctionCall","src":"17658:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"17683:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17654:3:31"},"nodeType":"YulFunctionCall","src":"17654:32:31"},"nodeType":"YulIf","src":"17651:119:31"},{"nodeType":"YulBlock","src":"17780:127:31","statements":[{"nodeType":"YulVariableDeclaration","src":"17795:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"17809:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17799:6:31","type":""}]},{"nodeType":"YulAssignment","src":"17824:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17869:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17880:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17865:3:31"},"nodeType":"YulFunctionCall","src":"17865:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17889:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"17834:30:31"},"nodeType":"YulFunctionCall","src":"17834:63:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17824:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17611:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17622:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17634:6:31","type":""}],"src":"17565:349:31"},{"body":{"nodeType":"YulBlock","src":"17948:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17965:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17968:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17958:6:31"},"nodeType":"YulFunctionCall","src":"17958:88:31"},"nodeType":"YulExpressionStatement","src":"17958:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18062:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18065:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18055:6:31"},"nodeType":"YulFunctionCall","src":"18055:15:31"},"nodeType":"YulExpressionStatement","src":"18055:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18086:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18089:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18079:6:31"},"nodeType":"YulFunctionCall","src":"18079:15:31"},"nodeType":"YulExpressionStatement","src":"18079:15:31"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17920:180:31"},{"body":{"nodeType":"YulBlock","src":"18232:206:31","statements":[{"nodeType":"YulAssignment","src":"18242:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18254:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18265:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18250:3:31"},"nodeType":"YulFunctionCall","src":"18250:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18242:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18322:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18335:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18346:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18331:3:31"},"nodeType":"YulFunctionCall","src":"18331:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18278:43:31"},"nodeType":"YulFunctionCall","src":"18278:71:31"},"nodeType":"YulExpressionStatement","src":"18278:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18403:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18416:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18412:3:31"},"nodeType":"YulFunctionCall","src":"18412:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18359:43:31"},"nodeType":"YulFunctionCall","src":"18359:72:31"},"nodeType":"YulExpressionStatement","src":"18359:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18196:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18208:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18216:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18227:4:31","type":""}],"src":"18106:332:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner of token\")\n\n    }\n\n    function abi_encode_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_158dde95586d0aac7f61a97478dae54040ea0a5813c54f831c9fe5a7fd5bd3a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde1461025b578063c7cc557d14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a22cb4651461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906115eb565b6102f3565b6040516101169190611633565b60405180910390f35b6101276103d5565b60405161013491906116de565b60405180910390f35b61015760048036038101906101529190611736565b610467565b60405161016491906117a4565b60405180910390f35b610187600480360381019061018291906117eb565b610483565b005b6101a3600480360381019061019e919061182b565b610499565b005b6101bf60048036038101906101ba919061182b565b61059b565b005b6101db60048036038101906101d69190611736565b6105bb565b6040516101e891906117a4565b60405180910390f35b61020b6004803603810190610206919061187e565b6105cd565b60405161021891906118ba565b60405180910390f35b610229610687565b60405161023691906116de565b60405180910390f35b61025960048036038101906102549190611901565b610719565b005b61027560048036038101906102709190611a76565b61072f565b005b610291600480360381019061028c9190611bc1565b610754565b005b6102ad60048036038101906102a89190611736565b61082c565b6040516102ba91906116de565b60405180910390f35b6102dd60048036038101906102d89190611c0a565b610895565b6040516102ea9190611633565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd826108a9565b5b9050919050565b6060600080546103e490611c79565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611c79565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b600061047282610913565b5061047c8261099b565b9050919050565b61049582826104906109d8565b6109e0565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050b5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161050291906117a4565b60405180910390fd5b600061051f838361051a6109d8565b6109f2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610595578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058c93929190611caa565b60405180910390fd5b50505050565b6105b68383836040518060200160405280600081525061072f565b505050565b60006105c682610913565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106405760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161063791906117a4565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461069690611c79565b80601f01602080910402602001604051908101604052809291908181526020018280546106c290611c79565b801561070f5780601f106106e45761010080835404028352916020019161070f565b820191906000526020600020905b8154815290600101906020018083116106f257829003601f168201915b5050505050905090565b61072b6107246109d8565b8383610c0c565b5050565b61073a848484610499565b61074e6107456109d8565b85858585610d7b565b50505050565b60005b8151811015610828573373ffffffffffffffffffffffffffffffffffffffff1661079a83838151811061078d5761078c611ce1565b5b60200260200101516105bb565b73ffffffffffffffffffffffffffffffffffffffff16146107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e790611d5c565b60405180910390fd5b610815600083838151811061080857610807611ce1565b5b6020026020010151610483565b808061082090611dab565b915050610757565b5050565b606061083782610913565b506000610842610f2c565b90506000815111610862576040518060200160405280600081525061088d565b8061086c84610f43565b60405160200161087d929190611e2f565b6040516020818303038152906040525b915050919050565b60006108a18383611011565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061091f836110a5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361099257826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161098991906118ba565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109ed83838360016110e2565b505050565b6000806109fe846110a5565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a4057610a3f8184866112a7565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ad157610a826000856000806110e2565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b54576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7d57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610c7491906117a4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d6e9190611633565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115610f25578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610dda9493929190611ea8565b6020604051808303816000875af1925050508015610e1657506040513d601f19601f82011682018060405250810190610e139190611f09565b60015b610e9a573d8060008114610e46576040519150601f19603f3d011682016040523d82523d6000602084013e610e4b565b606091505b506000815103610e9257836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e8991906117a4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610f2357836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f1a91906117a4565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b606060006001610f528461136b565b01905060008167ffffffffffffffff811115610f7157610f7061194b565b5b6040519080825280601f01601f191660200182016040528015610fa35781602001600182028036833780820191505090505b509050600082602001820190505b600115611006578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ffa57610ff9611f36565b5b04945060008503610fb1575b819350505050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061111b5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561124f57600061112b84610913565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561119657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156111a957506111a78184610895565b155b156111eb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016111e291906117a4565b60405180910390fd5b811561124d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6112b28383836114be565b61136657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361132757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161131e91906118ba565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161135d929190611f65565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106113c9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113bf576113be611f36565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611406576d04ee2d6d415b85acef810000000083816113fc576113fb611f36565b5b0492506020810190505b662386f26fc10000831061143557662386f26fc10000838161142b5761142a611f36565b5b0492506010810190505b6305f5e100831061145e576305f5e100838161145457611453611f36565b5b0492506008810190505b612710831061148357612710838161147957611478611f36565b5b0492506004810190505b606483106114a6576064838161149c5761149b611f36565b5b0492506002810190505b600a83106114b5576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561157657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061153757506115368484610895565b5b8061157557508273ffffffffffffffffffffffffffffffffffffffff1661155d8361099b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115c881611593565b81146115d357600080fd5b50565b6000813590506115e5816115bf565b92915050565b60006020828403121561160157611600611589565b5b600061160f848285016115d6565b91505092915050565b60008115159050919050565b61162d81611618565b82525050565b60006020820190506116486000830184611624565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561168857808201518184015260208101905061166d565b60008484015250505050565b6000601f19601f8301169050919050565b60006116b08261164e565b6116ba8185611659565b93506116ca81856020860161166a565b6116d381611694565b840191505092915050565b600060208201905081810360008301526116f881846116a5565b905092915050565b6000819050919050565b61171381611700565b811461171e57600080fd5b50565b6000813590506117308161170a565b92915050565b60006020828403121561174c5761174b611589565b5b600061175a84828501611721565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061178e82611763565b9050919050565b61179e81611783565b82525050565b60006020820190506117b96000830184611795565b92915050565b6117c881611783565b81146117d357600080fd5b50565b6000813590506117e5816117bf565b92915050565b6000806040838503121561180257611801611589565b5b6000611810858286016117d6565b925050602061182185828601611721565b9150509250929050565b60008060006060848603121561184457611843611589565b5b6000611852868287016117d6565b9350506020611863868287016117d6565b925050604061187486828701611721565b9150509250925092565b60006020828403121561189457611893611589565b5b60006118a2848285016117d6565b91505092915050565b6118b481611700565b82525050565b60006020820190506118cf60008301846118ab565b92915050565b6118de81611618565b81146118e957600080fd5b50565b6000813590506118fb816118d5565b92915050565b6000806040838503121561191857611917611589565b5b6000611926858286016117d6565b9250506020611937858286016118ec565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61198382611694565b810181811067ffffffffffffffff821117156119a2576119a161194b565b5b80604052505050565b60006119b561157f565b90506119c1828261197a565b919050565b600067ffffffffffffffff8211156119e1576119e061194b565b5b6119ea82611694565b9050602081019050919050565b82818337600083830152505050565b6000611a19611a14846119c6565b6119ab565b905082815260208101848484011115611a3557611a34611946565b5b611a408482856119f7565b509392505050565b600082601f830112611a5d57611a5c611941565b5b8135611a6d848260208601611a06565b91505092915050565b60008060008060808587031215611a9057611a8f611589565b5b6000611a9e878288016117d6565b9450506020611aaf878288016117d6565b9350506040611ac087828801611721565b925050606085013567ffffffffffffffff811115611ae157611ae061158e565b5b611aed87828801611a48565b91505092959194509250565b600067ffffffffffffffff821115611b1457611b1361194b565b5b602082029050602081019050919050565b600080fd5b6000611b3d611b3884611af9565b6119ab565b90508083825260208201905060208402830185811115611b6057611b5f611b25565b5b835b81811015611b895780611b758882611721565b845260208401935050602081019050611b62565b5050509392505050565b600082601f830112611ba857611ba7611941565b5b8135611bb8848260208601611b2a565b91505092915050565b600060208284031215611bd757611bd6611589565b5b600082013567ffffffffffffffff811115611bf557611bf461158e565b5b611c0184828501611b93565b91505092915050565b60008060408385031215611c2157611c20611589565b5b6000611c2f858286016117d6565b9250506020611c40858286016117d6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c9157607f821691505b602082108103611ca457611ca3611c4a565b5b50919050565b6000606082019050611cbf6000830186611795565b611ccc60208301856118ab565b611cd96040830184611795565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f74206f776e6572206f6620746f6b656e0000000000000000000000000000600082015250565b6000611d46601283611659565b9150611d5182611d10565b602082019050919050565b60006020820190508181036000830152611d7581611d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611db682611700565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611de857611de7611d7c565b5b600182019050919050565b600081905092915050565b6000611e098261164e565b611e138185611df3565b9350611e2381856020860161166a565b80840191505092915050565b6000611e3b8285611dfe565b9150611e478284611dfe565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611e7a82611e53565b611e848185611e5e565b9350611e9481856020860161166a565b611e9d81611694565b840191505092915050565b6000608082019050611ebd6000830187611795565b611eca6020830186611795565b611ed760408301856118ab565b8181036060830152611ee98184611e6f565b905095945050505050565b600081519050611f03816115bf565b92915050565b600060208284031215611f1f57611f1e611589565b5b6000611f2d84828501611ef4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611f7a6000830185611795565b611f8760208301846118ab565b939250505056fea2646970667358221220f53129e7cdc1dba43fcfc003730462c9cbab8920b14500575fd8210e86d1208d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xC7CC557D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3BE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3CE JUMPI POP PUSH2 0x3CD DUP3 PUSH2 0x8A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472 DUP3 PUSH2 0x913 JUMP JUMPDEST POP PUSH2 0x47C DUP3 PUSH2 0x99B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP3 DUP3 PUSH2 0x490 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP4 DUP4 PUSH2 0x51A PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x595 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x72F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP3 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x640 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x72B PUSH2 0x724 PUSH2 0x9D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x745 PUSH2 0x9D8 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xD7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x828 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79A DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x5BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E7 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x815 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x483 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x820 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x757 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x837 DUP3 PUSH2 0x913 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x842 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x88D JUMP JUMPDEST DUP1 PUSH2 0x86C DUP5 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x87D SWAP3 SWAP2 SWAP1 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP4 DUP4 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91F DUP4 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x992 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE DUP5 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA40 JUMPI PUSH2 0xA3F DUP2 DUP5 DUP7 PUSH2 0x12A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD1 JUMPI PUSH2 0xA82 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB54 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xF25 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE9A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xE92 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xF23 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF52 DUP5 PUSH2 0x136B JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF71 JUMPI PUSH2 0xF70 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFA3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1006 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFB1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x111B JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x124F JUMPI PUSH1 0x0 PUSH2 0x112B DUP5 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11A9 JUMPI POP PUSH2 0x11A7 DUP2 DUP5 PUSH2 0x895 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11EB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x124D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12B2 DUP4 DUP4 DUP4 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x1366 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135D SWAP3 SWAP2 SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x13C9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1406 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13FC JUMPI PUSH2 0x13FB PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1435 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x142B JUMPI PUSH2 0x142A PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x145E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1454 JUMPI PUSH2 0x1453 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1483 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1479 JUMPI PUSH2 0x1478 PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x14A6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x1F36 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x14B5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1537 JUMPI POP PUSH2 0x1536 DUP5 DUP5 PUSH2 0x895 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1575 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155D DUP4 PUSH2 0x99B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x1593 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E5 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160F DUP5 DUP3 DUP6 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1618 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1688 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x166D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP3 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x16BA DUP2 DUP6 PUSH2 0x1659 JUMP JUMPDEST SWAP4 POP PUSH2 0x16CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST PUSH2 0x16D3 DUP2 PUSH2 0x1694 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F8 DUP2 DUP5 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1730 DUP2 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174C JUMPI PUSH2 0x174B PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175A DUP5 DUP3 DUP6 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178E DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C8 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E5 DUP2 PUSH2 0x17BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1810 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1821 DUP6 DUP3 DUP7 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1843 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1852 DUP7 DUP3 DUP8 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1863 DUP7 DUP3 DUP8 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1874 DUP7 DUP3 DUP8 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1894 JUMPI PUSH2 0x1893 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A2 DUP5 DUP3 DUP6 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B4 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH2 0x1618 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18FB DUP2 PUSH2 0x18D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1937 DUP6 DUP3 DUP7 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1983 DUP3 PUSH2 0x1694 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19A2 JUMPI PUSH2 0x19A1 PUSH2 0x194B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 PUSH2 0x157F JUMP JUMPDEST SWAP1 POP PUSH2 0x19C1 DUP3 DUP3 PUSH2 0x197A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH2 0x19EA DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A19 PUSH2 0x1A14 DUP5 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x1946 JUMP JUMPDEST JUMPDEST PUSH2 0x1A40 DUP5 DUP3 DUP6 PUSH2 0x19F7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x1941 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A9E DUP8 DUP3 DUP9 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1AAF DUP8 DUP3 DUP9 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1AC0 DUP8 DUP3 DUP9 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x158E JUMP JUMPDEST JUMPDEST PUSH2 0x1AED DUP8 DUP3 DUP9 ADD PUSH2 0x1A48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x194B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B3D PUSH2 0x1B38 DUP5 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0x19AB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x1B25 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B89 JUMPI DUP1 PUSH2 0x1B75 DUP9 DUP3 PUSH2 0x1721 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B62 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BA8 JUMPI PUSH2 0x1BA7 PUSH2 0x1941 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BB8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF5 JUMPI PUSH2 0x1BF4 PUSH2 0x158E JUMP JUMPDEST JUMPDEST PUSH2 0x1C01 DUP5 DUP3 DUP6 ADD PUSH2 0x1B93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C40 DUP6 DUP3 DUP7 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CA4 JUMPI PUSH2 0x1CA3 PUSH2 0x1C4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1CCC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x1CD9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E6F74206F776E6572206F6620746F6B656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D46 PUSH1 0x12 DUP4 PUSH2 0x1659 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DB6 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E09 DUP3 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1E13 DUP2 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B DUP3 DUP6 PUSH2 0x1DFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP3 DUP5 PUSH2 0x1DFE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7A DUP3 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x1E84 DUP2 DUP6 PUSH2 0x1E5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1E94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1E9D DUP2 PUSH2 0x1694 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EBD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1ECA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1ED7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18AB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1EE9 DUP2 DUP5 PUSH2 0x1E6F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F03 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1589 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1F87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 BALANCE 0x29 0xE7 0xCD 0xC1 0xDB LOG4 EXTCODEHASH 0xCF 0xC0 SUB PUSH20 0x462C9CBAB8920B14500575FD8210E86D1208D64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"117:853:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;651:317:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:158:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:300:10;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2517:93::-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;651:317:29:-;732:9;727:235;751:8;:15;747:1;:19;727:235;;;819:10;795:34;;:20;803:8;812:1;803:11;;;;;;;;:::i;:::-;;;;;;;;795:7;:20::i;:::-;:34;;;787:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;866:32;882:1;886:8;895:1;886:11;;;;;;;;:::i;:::-;;;;;;;;866:7;:32::i;:::-;768:3;;;;;:::i;:::-;;;;727:235;;;;651:317;:::o;2676:255:10:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;392:158:29:-;481:4;504:39;527:5;534:8;504:22;:39::i;:::-;497:46;;392:158;;;;:::o;763:146:22:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:10:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;14492:120:10:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;15665:312::-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:14:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;3173:92:10:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;987:632:21:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;3927:153:10:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;25316:916:24:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;6401:272:10:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:311::-;10068:4;10158:18;10150:6;10147:30;10144:56;;;10180:18;;:::i;:::-;10144:56;10230:4;10222:6;10218:17;10210:25;;10290:4;10284;10280:15;10272:23;;9991:311;;;:::o;10308:117::-;10417:1;10414;10407:12;10448:710;10544:5;10569:81;10585:64;10642:6;10585:64;:::i;:::-;10569:81;:::i;:::-;10560:90;;10670:5;10699:6;10692:5;10685:21;10733:4;10726:5;10722:16;10715:23;;10786:4;10778:6;10774:17;10766:6;10762:30;10815:3;10807:6;10804:15;10801:122;;;10834:79;;:::i;:::-;10801:122;10949:6;10932:220;10966:6;10961:3;10958:15;10932:220;;;11041:3;11070:37;11103:3;11091:10;11070:37;:::i;:::-;11065:3;11058:50;11137:4;11132:3;11128:14;11121:21;;11008:144;10992:4;10987:3;10983:14;10976:21;;10932:220;;;10936:21;10550:608;;10448:710;;;;;:::o;11181:370::-;11252:5;11301:3;11294:4;11286:6;11282:17;11278:27;11268:122;;11309:79;;:::i;:::-;11268:122;11426:6;11413:20;11451:94;11541:3;11533:6;11526:4;11518:6;11514:17;11451:94;:::i;:::-;11442:103;;11258:293;11181:370;;;;:::o;11557:539::-;11641:6;11690:2;11678:9;11669:7;11665:23;11661:32;11658:119;;;11696:79;;:::i;:::-;11658:119;11844:1;11833:9;11829:17;11816:31;11874:18;11866:6;11863:30;11860:117;;;11896:79;;:::i;:::-;11860:117;12001:78;12071:7;12062:6;12051:9;12047:22;12001:78;:::i;:::-;11991:88;;11787:302;11557:539;;;;:::o;12102:474::-;12170:6;12178;12227:2;12215:9;12206:7;12202:23;12198:32;12195:119;;;12233:79;;:::i;:::-;12195:119;12353:1;12378:53;12423:7;12414:6;12403:9;12399:22;12378:53;:::i;:::-;12368:63;;12324:117;12480:2;12506:53;12551:7;12542:6;12531:9;12527:22;12506:53;:::i;:::-;12496:63;;12451:118;12102:474;;;;;:::o;12582:180::-;12630:77;12627:1;12620:88;12727:4;12724:1;12717:15;12751:4;12748:1;12741:15;12768:320;12812:6;12849:1;12843:4;12839:12;12829:22;;12896:1;12890:4;12886:12;12917:18;12907:81;;12973:4;12965:6;12961:17;12951:27;;12907:81;13035:2;13027:6;13024:14;13004:18;13001:38;12998:84;;13054:18;;:::i;:::-;12998:84;12819:269;12768:320;;;:::o;13094:442::-;13243:4;13281:2;13270:9;13266:18;13258:26;;13294:71;13362:1;13351:9;13347:17;13338:6;13294:71;:::i;:::-;13375:72;13443:2;13432:9;13428:18;13419:6;13375:72;:::i;:::-;13457;13525:2;13514:9;13510:18;13501:6;13457:72;:::i;:::-;13094:442;;;;;;:::o;13542:180::-;13590:77;13587:1;13580:88;13687:4;13684:1;13677:15;13711:4;13708:1;13701:15;13728:168;13868:20;13864:1;13856:6;13852:14;13845:44;13728:168;:::o;13902:366::-;14044:3;14065:67;14129:2;14124:3;14065:67;:::i;:::-;14058:74;;14141:93;14230:3;14141:93;:::i;:::-;14259:2;14254:3;14250:12;14243:19;;13902:366;;;:::o;14274:419::-;14440:4;14478:2;14467:9;14463:18;14455:26;;14527:9;14521:4;14517:20;14513:1;14502:9;14498:17;14491:47;14555:131;14681:4;14555:131;:::i;:::-;14547:139;;14274:419;;;:::o;14699:180::-;14747:77;14744:1;14737:88;14844:4;14841:1;14834:15;14868:4;14865:1;14858:15;14885:233;14924:3;14947:24;14965:5;14947:24;:::i;:::-;14938:33;;14993:66;14986:5;14983:77;14980:103;;15063:18;;:::i;:::-;14980:103;15110:1;15103:5;15099:13;15092:20;;14885:233;;;:::o;15124:148::-;15226:11;15263:3;15248:18;;15124:148;;;;:::o;15278:390::-;15384:3;15412:39;15445:5;15412:39;:::i;:::-;15467:89;15549:6;15544:3;15467:89;:::i;:::-;15460:96;;15565:65;15623:6;15618:3;15611:4;15604:5;15600:16;15565:65;:::i;:::-;15655:6;15650:3;15646:16;15639:23;;15388:280;15278:390;;;;:::o;15674:435::-;15854:3;15876:95;15967:3;15958:6;15876:95;:::i;:::-;15869:102;;15988:95;16079:3;16070:6;15988:95;:::i;:::-;15981:102;;16100:3;16093:10;;15674:435;;;;;:::o;16115:98::-;16166:6;16200:5;16194:12;16184:22;;16115:98;;;:::o;16219:168::-;16302:11;16336:6;16331:3;16324:19;16376:4;16371:3;16367:14;16352:29;;16219:168;;;;:::o;16393:373::-;16479:3;16507:38;16539:5;16507:38;:::i;:::-;16561:70;16624:6;16619:3;16561:70;:::i;:::-;16554:77;;16640:65;16698:6;16693:3;16686:4;16679:5;16675:16;16640:65;:::i;:::-;16730:29;16752:6;16730:29;:::i;:::-;16725:3;16721:39;16714:46;;16483:283;16393:373;;;;:::o;16772:640::-;16967:4;17005:3;16994:9;16990:19;16982:27;;17019:71;17087:1;17076:9;17072:17;17063:6;17019:71;:::i;:::-;17100:72;17168:2;17157:9;17153:18;17144:6;17100:72;:::i;:::-;17182;17250:2;17239:9;17235:18;17226:6;17182:72;:::i;:::-;17301:9;17295:4;17291:20;17286:2;17275:9;17271:18;17264:48;17329:76;17400:4;17391:6;17329:76;:::i;:::-;17321:84;;16772:640;;;;;;;:::o;17418:141::-;17474:5;17505:6;17499:13;17490:22;;17521:32;17547:5;17521:32;:::i;:::-;17418:141;;;;:::o;17565:349::-;17634:6;17683:2;17671:9;17662:7;17658:23;17654:32;17651:119;;;17689:79;;:::i;:::-;17651:119;17809:1;17834:63;17889:7;17880:6;17869:9;17865:22;17834:63;:::i;:::-;17824:73;;17780:127;17565:349;;;;:::o;17920:180::-;17968:77;17965:1;17958:88;18065:4;18062:1;18055:15;18089:4;18086:1;18079:15;18106:332;18227:4;18265:2;18254:9;18250:18;18242:26;;18278:71;18346:1;18335:9;18331:17;18322:6;18278:71;:::i;:::-;18359:72;18427:2;18416:9;18412:18;18403:6;18359:72;:::i;:::-;18106:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchRevokeApprovals(uint256[])":"c7cc557d","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchRevokeApprovals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchRevokeApprovals(uint256[])\":{\"details\":\"Allows the owner to batch revoke approvals for multiple token IDs.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Explicitly override OpenZeppelin's function to ensure ABI includes it.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestNFT.sol\":\"TestNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/TestNFT.sol\":{\"keccak256\":\"0xfabf205b2e7ad7a5d3218d5fb4ad3df3cbefc1a94d6515c1b943fa0c3574b0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8100588f04468b2a08223ea5732504bb02bfe340daf9a150983bcf7260f64063\",\"dweb:/ipfs/QmWJqMPEEhCb8ZTRjhYgVXoTUUtRWXeN5tfNPBQ6W5jiu3\"]}},\"version\":1}"}},"contracts/TestToken.sol":{"TestToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1588":{"entryPoint":null,"id":1588,"parameterSlots":2,"returnSlots":0},"@_9806":{"entryPoint":null,"id":9806,"parameterSlots":3,"returnSlots":0},"@_mint_1891":{"entryPoint":217,"id":1891,"parameterSlots":2,"returnSlots":0},"@_update_1858":{"entryPoint":358,"id":1858,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1195,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":1360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory":{"entryPoint":1383,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3055,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3072,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1066,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":918,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1097,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1648,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1537,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2996,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2415,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2742,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2506,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2823,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1969,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2898,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1784,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1321,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1930,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1804,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2124,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1151,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1669,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1595,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2094,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1012,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1794,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2062,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2355,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1548,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":965,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1844,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":938,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":943,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":933,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":928,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1685,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2402,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2049,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1902,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1698,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1854,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":1334,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1897,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13600:31","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:31","statements":[{"nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:31"},"nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:31"},"nodeType":"YulFunctionCall","src":"187:12:31"},"nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:31"},"nodeType":"YulFunctionCall","src":"310:12:31"},"nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nodeType":"YulBlock","src":"423:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:31"},"nodeType":"YulFunctionCall","src":"433:12:31"},"nodeType":"YulExpressionStatement","src":"433:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:31"},{"body":{"nodeType":"YulBlock","src":"546:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:31"},"nodeType":"YulFunctionCall","src":"556:12:31"},"nodeType":"YulExpressionStatement","src":"556:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:31"},{"body":{"nodeType":"YulBlock","src":"628:54:31","statements":[{"nodeType":"YulAssignment","src":"638:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:31"},"nodeType":"YulFunctionCall","src":"652:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:31"},"nodeType":"YulFunctionCall","src":"668:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:31"},"nodeType":"YulFunctionCall","src":"648:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:31","type":""}],"src":"580:102:31"},{"body":{"nodeType":"YulBlock","src":"716:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:31"},"nodeType":"YulFunctionCall","src":"726:88:31"},"nodeType":"YulExpressionStatement","src":"726:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:31"},"nodeType":"YulFunctionCall","src":"823:15:31"},"nodeType":"YulExpressionStatement","src":"823:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:31"},"nodeType":"YulFunctionCall","src":"847:15:31"},"nodeType":"YulExpressionStatement","src":"847:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:31"},{"body":{"nodeType":"YulBlock","src":"917:238:31","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:31"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:31"},"nodeType":"YulFunctionCall","src":"957:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:31"},"nodeType":"YulFunctionCall","src":"945:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:31"},"nodeType":"YulFunctionCall","src":"1098:18:31"},"nodeType":"YulExpressionStatement","src":"1098:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:31"},"nodeType":"YulFunctionCall","src":"1036:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:31"},"nodeType":"YulFunctionCall","src":"1072:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:31"},"nodeType":"YulFunctionCall","src":"1033:62:31"},"nodeType":"YulIf","src":"1030:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:31"},"nodeType":"YulFunctionCall","src":"1127:22:31"},"nodeType":"YulExpressionStatement","src":"1127:22:31"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:31","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:31","type":""}],"src":"874:281:31"},{"body":{"nodeType":"YulBlock","src":"1202:88:31","statements":[{"nodeType":"YulAssignment","src":"1212:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:31"},"nodeType":"YulFunctionCall","src":"1222:20:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:31"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:31"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:31"},"nodeType":"YulFunctionCall","src":"1251:33:31"},"nodeType":"YulExpressionStatement","src":"1251:33:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:31","type":""}],"src":"1161:129:31"},{"body":{"nodeType":"YulBlock","src":"1363:241:31","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:31"},"nodeType":"YulFunctionCall","src":"1470:18:31"},"nodeType":"YulExpressionStatement","src":"1470:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:31"},"nodeType":"YulFunctionCall","src":"1437:30:31"},"nodeType":"YulIf","src":"1434:56:31"},{"nodeType":"YulAssignment","src":"1500:37:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:31"},"nodeType":"YulFunctionCall","src":"1508:29:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:31"}]},{"nodeType":"YulAssignment","src":"1574:23:31","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:31"},"nodeType":"YulFunctionCall","src":"1582:15:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:31","type":""}],"src":"1296:308:31"},{"body":{"nodeType":"YulBlock","src":"1672:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:31"},"nodeType":"YulFunctionCall","src":"1772:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:31"},"nodeType":"YulFunctionCall","src":"1791:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:31"},"nodeType":"YulFunctionCall","src":"1785:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:31"},"nodeType":"YulFunctionCall","src":"1765:39:31"},"nodeType":"YulExpressionStatement","src":"1765:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:31"},"nodeType":"YulFunctionCall","src":"1709:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:31","statements":[{"nodeType":"YulAssignment","src":"1725:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:31"},"nodeType":"YulFunctionCall","src":"1730:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:31","statements":[]},"src":"1701:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:31"},"nodeType":"YulFunctionCall","src":"1830:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:31"},"nodeType":"YulFunctionCall","src":"1823:27:31"},"nodeType":"YulExpressionStatement","src":"1823:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:31","type":""}],"src":"1610:246:31"},{"body":{"nodeType":"YulBlock","src":"1957:339:31","statements":[{"nodeType":"YulAssignment","src":"1967:75:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:31"},"nodeType":"YulFunctionCall","src":"1992:49:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:31"},"nodeType":"YulFunctionCall","src":"1976:66:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:31"},"nodeType":"YulFunctionCall","src":"2051:21:31"},"nodeType":"YulExpressionStatement","src":"2051:21:31"},{"nodeType":"YulVariableDeclaration","src":"2081:27:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:31"},"nodeType":"YulFunctionCall","src":"2092:16:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:31"},"nodeType":"YulFunctionCall","src":"2148:79:31"},"nodeType":"YulExpressionStatement","src":"2148:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:31"},"nodeType":"YulFunctionCall","src":"2123:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:31"},"nodeType":"YulFunctionCall","src":"2120:25:31"},"nodeType":"YulIf","src":"2117:112:31"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:31"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:31"},"nodeType":"YulFunctionCall","src":"2238:52:31"},"nodeType":"YulExpressionStatement","src":"2238:52:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:31","type":""}],"src":"1862:434:31"},{"body":{"nodeType":"YulBlock","src":"2389:282:31","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:31"},"nodeType":"YulFunctionCall","src":"2440:79:31"},"nodeType":"YulExpressionStatement","src":"2440:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:31"},"nodeType":"YulFunctionCall","src":"2413:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:31"},"nodeType":"YulFunctionCall","src":"2409:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:31"},"nodeType":"YulFunctionCall","src":"2402:35:31"},"nodeType":"YulIf","src":"2399:122:31"},{"nodeType":"YulVariableDeclaration","src":"2530:27:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:31"},"nodeType":"YulFunctionCall","src":"2544:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:31"},"nodeType":"YulFunctionCall","src":"2634:17:31"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:31"},"nodeType":"YulFunctionCall","src":"2575:90:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:31","type":""}],"src":"2316:355:31"},{"body":{"nodeType":"YulBlock","src":"2720:43:31","statements":[{"nodeType":"YulAssignment","src":"2730:27:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2745:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2752:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2741:3:31"},"nodeType":"YulFunctionCall","src":"2741:16:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2730:7:31"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2702:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2712:7:31","type":""}],"src":"2677:86:31"},{"body":{"nodeType":"YulBlock","src":"2810:77:31","statements":[{"body":{"nodeType":"YulBlock","src":"2865:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2877:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2867:6:31"},"nodeType":"YulFunctionCall","src":"2867:12:31"},"nodeType":"YulExpressionStatement","src":"2867:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2833:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2856:5:31"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2840:15:31"},"nodeType":"YulFunctionCall","src":"2840:22:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2830:2:31"},"nodeType":"YulFunctionCall","src":"2830:33:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2823:6:31"},"nodeType":"YulFunctionCall","src":"2823:41:31"},"nodeType":"YulIf","src":"2820:61:31"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2803:5:31","type":""}],"src":"2769:118:31"},{"body":{"nodeType":"YulBlock","src":"2954:78:31","statements":[{"nodeType":"YulAssignment","src":"2964:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2973:5:31"},"nodeType":"YulFunctionCall","src":"2973:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2964:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3020:5:31"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"2995:24:31"},"nodeType":"YulFunctionCall","src":"2995:31:31"},"nodeType":"YulExpressionStatement","src":"2995:31:31"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2932:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2940:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2948:5:31","type":""}],"src":"2893:139:31"},{"body":{"nodeType":"YulBlock","src":"3167:876:31","statements":[{"body":{"nodeType":"YulBlock","src":"3213:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3215:77:31"},"nodeType":"YulFunctionCall","src":"3215:79:31"},"nodeType":"YulExpressionStatement","src":"3215:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3188:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3184:3:31"},"nodeType":"YulFunctionCall","src":"3184:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3180:3:31"},"nodeType":"YulFunctionCall","src":"3180:32:31"},"nodeType":"YulIf","src":"3177:119:31"},{"nodeType":"YulBlock","src":"3306:291:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3321:38:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3345:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3356:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3341:3:31"},"nodeType":"YulFunctionCall","src":"3341:17:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3335:5:31"},"nodeType":"YulFunctionCall","src":"3335:24:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3325:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3406:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3408:77:31"},"nodeType":"YulFunctionCall","src":"3408:79:31"},"nodeType":"YulExpressionStatement","src":"3408:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3378:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3386:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3375:2:31"},"nodeType":"YulFunctionCall","src":"3375:30:31"},"nodeType":"YulIf","src":"3372:117:31"},{"nodeType":"YulAssignment","src":"3503:84:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3570:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:31"},"nodeType":"YulFunctionCall","src":"3555:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3579:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3513:41:31"},"nodeType":"YulFunctionCall","src":"3513:74:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3503:6:31"}]}]},{"nodeType":"YulBlock","src":"3607:292:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3622:39:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3646:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3657:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:31"},"nodeType":"YulFunctionCall","src":"3642:18:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3636:5:31"},"nodeType":"YulFunctionCall","src":"3636:25:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3626:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3708:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3710:77:31"},"nodeType":"YulFunctionCall","src":"3710:79:31"},"nodeType":"YulExpressionStatement","src":"3710:79:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3680:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3688:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3677:2:31"},"nodeType":"YulFunctionCall","src":"3677:30:31"},"nodeType":"YulIf","src":"3674:117:31"},{"nodeType":"YulAssignment","src":"3805:84:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3872:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:31"},"nodeType":"YulFunctionCall","src":"3857:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3881:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3815:41:31"},"nodeType":"YulFunctionCall","src":"3815:74:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3805:6:31"}]}]},{"nodeType":"YulBlock","src":"3909:127:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3924:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3938:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3928:6:31","type":""}]},{"nodeType":"YulAssignment","src":"3954:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4009:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:31"},"nodeType":"YulFunctionCall","src":"3994:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4018:7:31"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"3964:29:31"},"nodeType":"YulFunctionCall","src":"3964:62:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3954:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3121:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3132:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3144:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3152:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3160:6:31","type":""}],"src":"3038:1005:31"},{"body":{"nodeType":"YulBlock","src":"4108:40:31","statements":[{"nodeType":"YulAssignment","src":"4119:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4135:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4129:5:31"},"nodeType":"YulFunctionCall","src":"4129:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4119:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4091:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4101:6:31","type":""}],"src":"4049:99:31"},{"body":{"nodeType":"YulBlock","src":"4182:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4202:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:31"},"nodeType":"YulFunctionCall","src":"4192:88:31"},"nodeType":"YulExpressionStatement","src":"4192:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4296:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4299:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4289:6:31"},"nodeType":"YulFunctionCall","src":"4289:15:31"},"nodeType":"YulExpressionStatement","src":"4289:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4320:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4313:6:31"},"nodeType":"YulFunctionCall","src":"4313:15:31"},"nodeType":"YulExpressionStatement","src":"4313:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4154:180:31"},{"body":{"nodeType":"YulBlock","src":"4391:269:31","statements":[{"nodeType":"YulAssignment","src":"4401:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4415:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"4421:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4411:3:31"},"nodeType":"YulFunctionCall","src":"4411:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4401:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"4432:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4462:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"4468:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4458:3:31"},"nodeType":"YulFunctionCall","src":"4458:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4436:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4509:51:31","statements":[{"nodeType":"YulAssignment","src":"4523:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4537:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4545:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4533:3:31"},"nodeType":"YulFunctionCall","src":"4533:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4523:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4489:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4482:6:31"},"nodeType":"YulFunctionCall","src":"4482:26:31"},"nodeType":"YulIf","src":"4479:81:31"},{"body":{"nodeType":"YulBlock","src":"4612:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4626:16:31"},"nodeType":"YulFunctionCall","src":"4626:18:31"},"nodeType":"YulExpressionStatement","src":"4626:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4576:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4599:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4596:2:31"},"nodeType":"YulFunctionCall","src":"4596:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4573:2:31"},"nodeType":"YulFunctionCall","src":"4573:38:31"},"nodeType":"YulIf","src":"4570:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4375:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4384:6:31","type":""}],"src":"4340:320:31"},{"body":{"nodeType":"YulBlock","src":"4720:87:31","statements":[{"nodeType":"YulAssignment","src":"4730:11:31","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4738:3:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4730:4:31"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4758:1:31","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4761:3:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4751:6:31"},"nodeType":"YulFunctionCall","src":"4751:14:31"},"nodeType":"YulExpressionStatement","src":"4751:14:31"},{"nodeType":"YulAssignment","src":"4774:26:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4792:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4795:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4782:9:31"},"nodeType":"YulFunctionCall","src":"4782:18:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4774:4:31"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4707:3:31","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4715:4:31","type":""}],"src":"4666:141:31"},{"body":{"nodeType":"YulBlock","src":"4857:49:31","statements":[{"nodeType":"YulAssignment","src":"4867:33:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4885:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4892:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4881:3:31"},"nodeType":"YulFunctionCall","src":"4881:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"4897:2:31","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4877:3:31"},"nodeType":"YulFunctionCall","src":"4877:23:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4867:6:31"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4840:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4850:6:31","type":""}],"src":"4813:93:31"},{"body":{"nodeType":"YulBlock","src":"4965:54:31","statements":[{"nodeType":"YulAssignment","src":"4975:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5000:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"5006:5:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4996:3:31"},"nodeType":"YulFunctionCall","src":"4996:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4975:8:31"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4940:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"4946:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4956:8:31","type":""}],"src":"4912:107:31"},{"body":{"nodeType":"YulBlock","src":"5101:317:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5111:35:31","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5132:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"5144:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5128:3:31"},"nodeType":"YulFunctionCall","src":"5128:18:31"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5115:9:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5155:109:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5186:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5197:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5167:18:31"},"nodeType":"YulFunctionCall","src":"5167:97:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5159:4:31","type":""}]},{"nodeType":"YulAssignment","src":"5273:51:31","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5304:9:31"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5315:8:31"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5285:18:31"},"nodeType":"YulFunctionCall","src":"5285:39:31"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5273:8:31"}]},{"nodeType":"YulAssignment","src":"5333:30:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5346:5:31"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5357:4:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5353:3:31"},"nodeType":"YulFunctionCall","src":"5353:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5342:3:31"},"nodeType":"YulFunctionCall","src":"5342:21:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5333:5:31"}]},{"nodeType":"YulAssignment","src":"5372:40:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5385:5:31"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5396:8:31"},{"name":"mask","nodeType":"YulIdentifier","src":"5406:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5392:3:31"},"nodeType":"YulFunctionCall","src":"5392:19:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5382:2:31"},"nodeType":"YulFunctionCall","src":"5382:30:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5372:6:31"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5062:5:31","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5069:10:31","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5081:8:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5094:6:31","type":""}],"src":"5025:393:31"},{"body":{"nodeType":"YulBlock","src":"5469:32:31","statements":[{"nodeType":"YulAssignment","src":"5479:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"5490:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5479:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5451:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5461:7:31","type":""}],"src":"5424:77:31"},{"body":{"nodeType":"YulBlock","src":"5539:28:31","statements":[{"nodeType":"YulAssignment","src":"5549:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"5556:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5549:3:31"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5525:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5535:3:31","type":""}],"src":"5507:60:31"},{"body":{"nodeType":"YulBlock","src":"5633:82:31","statements":[{"nodeType":"YulAssignment","src":"5643:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5683:17:31"},"nodeType":"YulFunctionCall","src":"5683:24:31"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5674:8:31"},"nodeType":"YulFunctionCall","src":"5674:34:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5656:17:31"},"nodeType":"YulFunctionCall","src":"5656:53:31"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5643:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5613:5:31","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5623:9:31","type":""}],"src":"5573:142:31"},{"body":{"nodeType":"YulBlock","src":"5768:28:31","statements":[{"nodeType":"YulAssignment","src":"5778:12:31","value":{"name":"value","nodeType":"YulIdentifier","src":"5785:5:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5778:3:31"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5754:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5764:3:31","type":""}],"src":"5721:75:31"},{"body":{"nodeType":"YulBlock","src":"5878:193:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5888:63:31","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5943:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5912:30:31"},"nodeType":"YulFunctionCall","src":"5912:39:31"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5892:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5967:4:31"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6007:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6001:5:31"},"nodeType":"YulFunctionCall","src":"6001:11:31"},{"name":"offset","nodeType":"YulIdentifier","src":"6014:6:31"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6046:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6022:23:31"},"nodeType":"YulFunctionCall","src":"6022:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5973:27:31"},"nodeType":"YulFunctionCall","src":"5973:91:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5960:6:31"},"nodeType":"YulFunctionCall","src":"5960:105:31"},"nodeType":"YulExpressionStatement","src":"5960:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5855:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5861:6:31","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5869:7:31","type":""}],"src":"5802:269:31"},{"body":{"nodeType":"YulBlock","src":"6126:24:31","statements":[{"nodeType":"YulAssignment","src":"6136:8:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6143:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6136:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6122:3:31","type":""}],"src":"6077:73:31"},{"body":{"nodeType":"YulBlock","src":"6209:136:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6219:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6233:30:31"},"nodeType":"YulFunctionCall","src":"6233:32:31"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6223:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6318:4:31"},{"name":"offset","nodeType":"YulIdentifier","src":"6324:6:31"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6332:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6274:43:31"},"nodeType":"YulFunctionCall","src":"6274:65:31"},"nodeType":"YulExpressionStatement","src":"6274:65:31"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6195:4:31","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6201:6:31","type":""}],"src":"6156:189:31"},{"body":{"nodeType":"YulBlock","src":"6401:136:31","statements":[{"body":{"nodeType":"YulBlock","src":"6468:63:31","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6512:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6519:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6482:29:31"},"nodeType":"YulFunctionCall","src":"6482:39:31"},"nodeType":"YulExpressionStatement","src":"6482:39:31"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6421:5:31"},{"name":"end","nodeType":"YulIdentifier","src":"6428:3:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6418:2:31"},"nodeType":"YulFunctionCall","src":"6418:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6433:26:31","statements":[{"nodeType":"YulAssignment","src":"6435:22:31","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6448:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"6455:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6444:3:31"},"nodeType":"YulFunctionCall","src":"6444:13:31"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6435:5:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6415:2:31","statements":[]},"src":"6411:120:31"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6389:5:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6396:3:31","type":""}],"src":"6351:186:31"},{"body":{"nodeType":"YulBlock","src":"6622:464:31","statements":[{"body":{"nodeType":"YulBlock","src":"6648:431:31","statements":[{"nodeType":"YulVariableDeclaration","src":"6662:54:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6710:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6678:31:31"},"nodeType":"YulFunctionCall","src":"6678:38:31"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6666:8:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6729:63:31","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6752:8:31"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6780:10:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6762:17:31"},"nodeType":"YulFunctionCall","src":"6762:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6748:3:31"},"nodeType":"YulFunctionCall","src":"6748:44:31"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6733:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6949:27:31","statements":[{"nodeType":"YulAssignment","src":"6951:23:31","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6966:8:31"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6951:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6933:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"6945:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6930:2:31"},"nodeType":"YulFunctionCall","src":"6930:18:31"},"nodeType":"YulIf","src":"6927:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7018:11:31"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7035:8:31"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7063:3:31"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7045:17:31"},"nodeType":"YulFunctionCall","src":"7045:22:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7031:3:31"},"nodeType":"YulFunctionCall","src":"7031:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6989:28:31"},"nodeType":"YulFunctionCall","src":"6989:80:31"},"nodeType":"YulExpressionStatement","src":"6989:80:31"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6639:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"6644:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6636:2:31"},"nodeType":"YulFunctionCall","src":"6636:11:31"},"nodeType":"YulIf","src":"6633:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6598:5:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"6605:3:31","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6610:10:31","type":""}],"src":"6543:543:31"},{"body":{"nodeType":"YulBlock","src":"7155:54:31","statements":[{"nodeType":"YulAssignment","src":"7165:37:31","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7190:4:31"},{"name":"value","nodeType":"YulIdentifier","src":"7196:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7186:3:31"},"nodeType":"YulFunctionCall","src":"7186:16:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7165:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7130:4:31","type":""},{"name":"value","nodeType":"YulTypedName","src":"7136:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7146:8:31","type":""}],"src":"7092:117:31"},{"body":{"nodeType":"YulBlock","src":"7266:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7276:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:31","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7328:5:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7321:3:31"},"nodeType":"YulFunctionCall","src":"7321:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7340:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7336:3:31"},"nodeType":"YulFunctionCall","src":"7336:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7292:28:31"},"nodeType":"YulFunctionCall","src":"7292:51:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7288:3:31"},"nodeType":"YulFunctionCall","src":"7288:56:31"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7280:4:31","type":""}]},{"nodeType":"YulAssignment","src":"7353:25:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7367:4:31"},{"name":"mask","nodeType":"YulIdentifier","src":"7373:4:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7363:3:31"},"nodeType":"YulFunctionCall","src":"7363:15:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7353:6:31"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7243:4:31","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7249:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7259:6:31","type":""}],"src":"7215:169:31"},{"body":{"nodeType":"YulBlock","src":"7470:214:31","statements":[{"nodeType":"YulAssignment","src":"7603:37:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7630:4:31"},{"name":"len","nodeType":"YulIdentifier","src":"7636:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7611:18:31"},"nodeType":"YulFunctionCall","src":"7611:29:31"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7603:4:31"}]},{"nodeType":"YulAssignment","src":"7649:29:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7660:4:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7670:1:31","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7673:3:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7666:3:31"},"nodeType":"YulFunctionCall","src":"7666:11:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7657:2:31"},"nodeType":"YulFunctionCall","src":"7657:21:31"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7649:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7451:4:31","type":""},{"name":"len","nodeType":"YulTypedName","src":"7457:3:31","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7465:4:31","type":""}],"src":"7389:295:31"},{"body":{"nodeType":"YulBlock","src":"7781:1303:31","statements":[{"nodeType":"YulVariableDeclaration","src":"7792:51:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7839:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7806:32:31"},"nodeType":"YulFunctionCall","src":"7806:37:31"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7796:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7928:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7930:16:31"},"nodeType":"YulFunctionCall","src":"7930:18:31"},"nodeType":"YulExpressionStatement","src":"7930:18:31"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7900:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7908:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7897:2:31"},"nodeType":"YulFunctionCall","src":"7897:30:31"},"nodeType":"YulIf","src":"7894:56:31"},{"nodeType":"YulVariableDeclaration","src":"7960:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8006:4:31"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8000:5:31"},"nodeType":"YulFunctionCall","src":"8000:11:31"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7974:25:31"},"nodeType":"YulFunctionCall","src":"7974:38:31"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7964:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8105:4:31"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8111:6:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"8119:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8059:45:31"},"nodeType":"YulFunctionCall","src":"8059:67:31"},"nodeType":"YulExpressionStatement","src":"8059:67:31"},{"nodeType":"YulVariableDeclaration","src":"8136:18:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8153:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8140:9:31","type":""}]},{"nodeType":"YulAssignment","src":"8164:17:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8177:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8164:9:31"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8228:611:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8242:37:31","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8261:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8273:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8269:3:31"},"nodeType":"YulFunctionCall","src":"8269:9:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8257:3:31"},"nodeType":"YulFunctionCall","src":"8257:22:31"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8246:7:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8293:51:31","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8339:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8307:31:31"},"nodeType":"YulFunctionCall","src":"8307:37:31"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8297:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8357:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8366:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8361:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8425:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8450:6:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8468:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8473:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8464:3:31"},"nodeType":"YulFunctionCall","src":"8464:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8458:5:31"},"nodeType":"YulFunctionCall","src":"8458:26:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8443:6:31"},"nodeType":"YulFunctionCall","src":"8443:42:31"},"nodeType":"YulExpressionStatement","src":"8443:42:31"},{"nodeType":"YulAssignment","src":"8502:24:31","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8516:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8524:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8512:3:31"},"nodeType":"YulFunctionCall","src":"8512:14:31"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8502:6:31"}]},{"nodeType":"YulAssignment","src":"8543:31:31","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8560:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8571:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8556:3:31"},"nodeType":"YulFunctionCall","src":"8556:18:31"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8543:9:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8391:1:31"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8394:7:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8388:2:31"},"nodeType":"YulFunctionCall","src":"8388:14:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8403:21:31","statements":[{"nodeType":"YulAssignment","src":"8405:17:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8414:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"8417:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8410:3:31"},"nodeType":"YulFunctionCall","src":"8410:12:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8405:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"8384:3:31","statements":[]},"src":"8380:208:31"},{"body":{"nodeType":"YulBlock","src":"8624:156:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8642:43:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8669:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8674:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8665:3:31"},"nodeType":"YulFunctionCall","src":"8665:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8659:5:31"},"nodeType":"YulFunctionCall","src":"8659:26:31"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8646:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8709:6:31"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8736:9:31"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8751:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8759:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8747:3:31"},"nodeType":"YulFunctionCall","src":"8747:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8717:18:31"},"nodeType":"YulFunctionCall","src":"8717:48:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8702:6:31"},"nodeType":"YulFunctionCall","src":"8702:64:31"},"nodeType":"YulExpressionStatement","src":"8702:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8607:7:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"8616:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8604:2:31"},"nodeType":"YulFunctionCall","src":"8604:19:31"},"nodeType":"YulIf","src":"8601:179:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8800:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8814:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8822:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8810:3:31"},"nodeType":"YulFunctionCall","src":"8810:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"8826:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8806:3:31"},"nodeType":"YulFunctionCall","src":"8806:22:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8793:6:31"},"nodeType":"YulFunctionCall","src":"8793:36:31"},"nodeType":"YulExpressionStatement","src":"8793:36:31"}]},"nodeType":"YulCase","src":"8221:618:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8226:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8856:222:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8870:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8883:1:31","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8874:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8907:67:31","statements":[{"nodeType":"YulAssignment","src":"8925:35:31","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8944:3:31"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8949:9:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8940:3:31"},"nodeType":"YulFunctionCall","src":"8940:19:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8934:5:31"},"nodeType":"YulFunctionCall","src":"8934:26:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8925:5:31"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8900:6:31"},"nodeType":"YulIf","src":"8897:77:31"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8994:4:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9053:5:31"},{"name":"newLen","nodeType":"YulIdentifier","src":"9060:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9000:52:31"},"nodeType":"YulFunctionCall","src":"9000:67:31"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8987:6:31"},"nodeType":"YulFunctionCall","src":"8987:81:31"},"nodeType":"YulExpressionStatement","src":"8987:81:31"}]},"nodeType":"YulCase","src":"8848:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8201:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8198:2:31"},"nodeType":"YulFunctionCall","src":"8198:14:31"},"nodeType":"YulSwitch","src":"8191:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7770:4:31","type":""},{"name":"src","nodeType":"YulTypedName","src":"7776:3:31","type":""}],"src":"7689:1395:31"},{"body":{"nodeType":"YulBlock","src":"9118:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9135:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9138:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9128:6:31"},"nodeType":"YulFunctionCall","src":"9128:88:31"},"nodeType":"YulExpressionStatement","src":"9128:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9232:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9235:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9225:6:31"},"nodeType":"YulFunctionCall","src":"9225:15:31"},"nodeType":"YulExpressionStatement","src":"9225:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9256:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9259:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9249:6:31"},"nodeType":"YulFunctionCall","src":"9249:15:31"},"nodeType":"YulExpressionStatement","src":"9249:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9090:180:31"},{"body":{"nodeType":"YulBlock","src":"9327:51:31","statements":[{"nodeType":"YulAssignment","src":"9337:34:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9362:1:31","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"9365:5:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9358:3:31"},"nodeType":"YulFunctionCall","src":"9358:13:31"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9337:8:31"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9308:5:31","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9318:8:31","type":""}],"src":"9276:102:31"},{"body":{"nodeType":"YulBlock","src":"9457:775:31","statements":[{"nodeType":"YulAssignment","src":"9467:15:31","value":{"name":"_power","nodeType":"YulIdentifier","src":"9476:6:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9467:5:31"}]},{"nodeType":"YulAssignment","src":"9491:14:31","value":{"name":"_base","nodeType":"YulIdentifier","src":"9500:5:31"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"9491:4:31"}]},{"body":{"nodeType":"YulBlock","src":"9549:677:31","statements":[{"body":{"nodeType":"YulBlock","src":"9637:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9639:16:31"},"nodeType":"YulFunctionCall","src":"9639:18:31"},"nodeType":"YulExpressionStatement","src":"9639:18:31"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9615:4:31"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"9625:3:31"},{"name":"base","nodeType":"YulIdentifier","src":"9630:4:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9621:3:31"},"nodeType":"YulFunctionCall","src":"9621:14:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9612:2:31"},"nodeType":"YulFunctionCall","src":"9612:24:31"},"nodeType":"YulIf","src":"9609:50:31"},{"body":{"nodeType":"YulBlock","src":"9704:419:31","statements":[{"nodeType":"YulAssignment","src":"10084:25:31","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10097:5:31"},{"name":"base","nodeType":"YulIdentifier","src":"10104:4:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10093:3:31"},"nodeType":"YulFunctionCall","src":"10093:16:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10084:5:31"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9679:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"9689:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9675:3:31"},"nodeType":"YulFunctionCall","src":"9675:16:31"},"nodeType":"YulIf","src":"9672:451:31"},{"nodeType":"YulAssignment","src":"10136:23:31","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10148:4:31"},{"name":"base","nodeType":"YulIdentifier","src":"10154:4:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10144:3:31"},"nodeType":"YulFunctionCall","src":"10144:15:31"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"10136:4:31"}]},{"nodeType":"YulAssignment","src":"10172:44:31","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10207:8:31"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"10184:22:31"},"nodeType":"YulFunctionCall","src":"10184:32:31"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"10172:8:31"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9525:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"9535:1:31","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9522:2:31"},"nodeType":"YulFunctionCall","src":"9522:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9538:2:31","statements":[]},"pre":{"nodeType":"YulBlock","src":"9518:3:31","statements":[]},"src":"9514:712:31"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"9412:6:31","type":""},{"name":"_base","nodeType":"YulTypedName","src":"9420:5:31","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9427:8:31","type":""},{"name":"max","nodeType":"YulTypedName","src":"9437:3:31","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9445:5:31","type":""},{"name":"base","nodeType":"YulTypedName","src":"9452:4:31","type":""}],"src":"9384:848:31"},{"body":{"nodeType":"YulBlock","src":"10298:1013:31","statements":[{"body":{"nodeType":"YulBlock","src":"10493:20:31","statements":[{"nodeType":"YulAssignment","src":"10495:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"10504:1:31","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10495:5:31"}]},{"nodeType":"YulLeave","src":"10506:5:31"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10483:8:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10476:6:31"},"nodeType":"YulFunctionCall","src":"10476:16:31"},"nodeType":"YulIf","src":"10473:40:31"},{"body":{"nodeType":"YulBlock","src":"10538:20:31","statements":[{"nodeType":"YulAssignment","src":"10540:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"10549:1:31","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10540:5:31"}]},{"nodeType":"YulLeave","src":"10551:5:31"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10532:4:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10525:6:31"},"nodeType":"YulFunctionCall","src":"10525:12:31"},"nodeType":"YulIf","src":"10522:36:31"},{"cases":[{"body":{"nodeType":"YulBlock","src":"10668:20:31","statements":[{"nodeType":"YulAssignment","src":"10670:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"10679:1:31","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10670:5:31"}]},{"nodeType":"YulLeave","src":"10681:5:31"}]},"nodeType":"YulCase","src":"10661:27:31","value":{"kind":"number","nodeType":"YulLiteral","src":"10666:1:31","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10712:176:31","statements":[{"body":{"nodeType":"YulBlock","src":"10747:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10749:16:31"},"nodeType":"YulFunctionCall","src":"10749:18:31"},"nodeType":"YulExpressionStatement","src":"10749:18:31"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10732:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"10742:3:31","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10729:2:31"},"nodeType":"YulFunctionCall","src":"10729:17:31"},"nodeType":"YulIf","src":"10726:43:31"},{"nodeType":"YulAssignment","src":"10782:25:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10795:1:31","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"10798:8:31"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"10791:3:31"},"nodeType":"YulFunctionCall","src":"10791:16:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"10782:5:31"}]},{"body":{"nodeType":"YulBlock","src":"10838:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10840:16:31"},"nodeType":"YulFunctionCall","src":"10840:18:31"},"nodeType":"YulExpressionStatement","src":"10840:18:31"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"10826:5:31"},{"name":"max","nodeType":"YulIdentifier","src":"10833:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10823:2:31"},"nodeType":"YulFunctionCall","src":"10823:14:31"},"nodeType":"YulIf","src":"10820:40:31"},{"nodeType":"YulLeave","src":"10873:5:31"}]},"nodeType":"YulCase","src":"10697:191:31","value":{"kind":"number","nodeType":"YulLiteral","src":"10702:1:31","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"10618:4:31"},"nodeType":"YulSwitch","src":"10611:277:31"},{"body":{"nodeType":"YulBlock","src":"11020:123:31","statements":[{"nodeType":"YulAssignment","src":"11034:28:31","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11047:4:31"},{"name":"exponent","nodeType":"YulIdentifier","src":"11053:8:31"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"11043:3:31"},"nodeType":"YulFunctionCall","src":"11043:19:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11034:5:31"}]},{"body":{"nodeType":"YulBlock","src":"11093:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11095:16:31"},"nodeType":"YulFunctionCall","src":"11095:18:31"},"nodeType":"YulExpressionStatement","src":"11095:18:31"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"11081:5:31"},{"name":"max","nodeType":"YulIdentifier","src":"11088:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11078:2:31"},"nodeType":"YulFunctionCall","src":"11078:14:31"},"nodeType":"YulIf","src":"11075:40:31"},{"nodeType":"YulLeave","src":"11128:5:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10923:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"10929:2:31","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10920:2:31"},"nodeType":"YulFunctionCall","src":"10920:12:31"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10937:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"10947:2:31","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10934:2:31"},"nodeType":"YulFunctionCall","src":"10934:16:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10916:3:31"},"nodeType":"YulFunctionCall","src":"10916:35:31"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"10972:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"10978:3:31","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10969:2:31"},"nodeType":"YulFunctionCall","src":"10969:13:31"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"10987:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"10997:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10984:2:31"},"nodeType":"YulFunctionCall","src":"10984:16:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10965:3:31"},"nodeType":"YulFunctionCall","src":"10965:36:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10900:2:31"},"nodeType":"YulFunctionCall","src":"10900:111:31"},"nodeType":"YulIf","src":"10897:246:31"},{"nodeType":"YulAssignment","src":"11153:57:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11187:1:31","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"11190:4:31"},{"name":"exponent","nodeType":"YulIdentifier","src":"11196:8:31"},{"name":"max","nodeType":"YulIdentifier","src":"11206:3:31"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"11168:18:31"},"nodeType":"YulFunctionCall","src":"11168:42:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11153:5:31"},{"name":"base","nodeType":"YulIdentifier","src":"11160:4:31"}]},{"body":{"nodeType":"YulBlock","src":"11249:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11251:16:31"},"nodeType":"YulFunctionCall","src":"11251:18:31"},"nodeType":"YulExpressionStatement","src":"11251:18:31"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"11226:5:31"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"11237:3:31"},{"name":"base","nodeType":"YulIdentifier","src":"11242:4:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11233:3:31"},"nodeType":"YulFunctionCall","src":"11233:14:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11223:2:31"},"nodeType":"YulFunctionCall","src":"11223:25:31"},"nodeType":"YulIf","src":"11220:51:31"},{"nodeType":"YulAssignment","src":"11280:25:31","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"11293:5:31"},{"name":"base","nodeType":"YulIdentifier","src":"11300:4:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11289:3:31"},"nodeType":"YulFunctionCall","src":"11289:16:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11280:5:31"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"10268:4:31","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"10274:8:31","type":""},{"name":"max","nodeType":"YulTypedName","src":"10284:3:31","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"10292:5:31","type":""}],"src":"10238:1073:31"},{"body":{"nodeType":"YulBlock","src":"11381:217:31","statements":[{"nodeType":"YulAssignment","src":"11391:31:31","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11417:4:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11399:17:31"},"nodeType":"YulFunctionCall","src":"11399:23:31"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"11391:4:31"}]},{"nodeType":"YulAssignment","src":"11431:37:31","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"11459:8:31"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11443:15:31"},"nodeType":"YulFunctionCall","src":"11443:25:31"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"11431:8:31"}]},{"nodeType":"YulAssignment","src":"11478:113:31","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"11508:4:31"},{"name":"exponent","nodeType":"YulIdentifier","src":"11514:8:31"},{"kind":"number","nodeType":"YulLiteral","src":"11524:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"11487:20:31"},"nodeType":"YulFunctionCall","src":"11487:104:31"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"11478:5:31"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"11356:4:31","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"11362:8:31","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"11375:5:31","type":""}],"src":"11317:281:31"},{"body":{"nodeType":"YulBlock","src":"11652:362:31","statements":[{"nodeType":"YulAssignment","src":"11662:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11685:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11667:17:31"},"nodeType":"YulFunctionCall","src":"11667:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11662:1:31"}]},{"nodeType":"YulAssignment","src":"11696:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11719:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11701:17:31"},"nodeType":"YulFunctionCall","src":"11701:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11696:1:31"}]},{"nodeType":"YulVariableDeclaration","src":"11730:28:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11753:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"11756:1:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11749:3:31"},"nodeType":"YulFunctionCall","src":"11749:9:31"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11734:11:31","type":""}]},{"nodeType":"YulAssignment","src":"11767:41:31","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11796:11:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11778:17:31"},"nodeType":"YulFunctionCall","src":"11778:30:31"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11767:7:31"}]},{"body":{"nodeType":"YulBlock","src":"11985:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11987:16:31"},"nodeType":"YulFunctionCall","src":"11987:18:31"},"nodeType":"YulExpressionStatement","src":"11987:18:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11918:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11911:6:31"},"nodeType":"YulFunctionCall","src":"11911:9:31"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11941:1:31"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11948:7:31"},{"name":"x","nodeType":"YulIdentifier","src":"11957:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11944:3:31"},"nodeType":"YulFunctionCall","src":"11944:15:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11938:2:31"},"nodeType":"YulFunctionCall","src":"11938:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11891:2:31"},"nodeType":"YulFunctionCall","src":"11891:83:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11871:6:31"},"nodeType":"YulFunctionCall","src":"11871:113:31"},"nodeType":"YulIf","src":"11868:139:31"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11635:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"11638:1:31","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11644:7:31","type":""}],"src":"11604:410:31"},{"body":{"nodeType":"YulBlock","src":"12065:81:31","statements":[{"nodeType":"YulAssignment","src":"12075:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12090:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"12097:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12086:3:31"},"nodeType":"YulFunctionCall","src":"12086:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12075:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12047:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12057:7:31","type":""}],"src":"12020:126:31"},{"body":{"nodeType":"YulBlock","src":"12197:51:31","statements":[{"nodeType":"YulAssignment","src":"12207:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12236:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12218:17:31"},"nodeType":"YulFunctionCall","src":"12218:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12207:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12179:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12189:7:31","type":""}],"src":"12152:96:31"},{"body":{"nodeType":"YulBlock","src":"12319:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12336:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12359:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12341:17:31"},"nodeType":"YulFunctionCall","src":"12341:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12329:6:31"},"nodeType":"YulFunctionCall","src":"12329:37:31"},"nodeType":"YulExpressionStatement","src":"12329:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12307:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12314:3:31","type":""}],"src":"12254:118:31"},{"body":{"nodeType":"YulBlock","src":"12476:124:31","statements":[{"nodeType":"YulAssignment","src":"12486:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12498:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12509:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12494:3:31"},"nodeType":"YulFunctionCall","src":"12494:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12486:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12566:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12579:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12590:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12575:3:31"},"nodeType":"YulFunctionCall","src":"12575:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12522:43:31"},"nodeType":"YulFunctionCall","src":"12522:71:31"},"nodeType":"YulExpressionStatement","src":"12522:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12448:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12460:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12471:4:31","type":""}],"src":"12378:222:31"},{"body":{"nodeType":"YulBlock","src":"12650:147:31","statements":[{"nodeType":"YulAssignment","src":"12660:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12683:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12665:17:31"},"nodeType":"YulFunctionCall","src":"12665:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12660:1:31"}]},{"nodeType":"YulAssignment","src":"12694:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12717:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12699:17:31"},"nodeType":"YulFunctionCall","src":"12699:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12694:1:31"}]},{"nodeType":"YulAssignment","src":"12728:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12739:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"12742:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:31"},"nodeType":"YulFunctionCall","src":"12735:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12728:3:31"}]},{"body":{"nodeType":"YulBlock","src":"12768:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12770:16:31"},"nodeType":"YulFunctionCall","src":"12770:18:31"},"nodeType":"YulExpressionStatement","src":"12770:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12760:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"12763:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12757:2:31"},"nodeType":"YulFunctionCall","src":"12757:10:31"},"nodeType":"YulIf","src":"12754:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12637:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"12640:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12646:3:31","type":""}],"src":"12606:191:31"},{"body":{"nodeType":"YulBlock","src":"12868:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12885:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12908:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12890:17:31"},"nodeType":"YulFunctionCall","src":"12890:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12878:6:31"},"nodeType":"YulFunctionCall","src":"12878:37:31"},"nodeType":"YulExpressionStatement","src":"12878:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12856:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12863:3:31","type":""}],"src":"12803:118:31"},{"body":{"nodeType":"YulBlock","src":"13081:288:31","statements":[{"nodeType":"YulAssignment","src":"13091:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13103:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13114:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13099:3:31"},"nodeType":"YulFunctionCall","src":"13099:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13091:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13171:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13184:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13195:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13180:3:31"},"nodeType":"YulFunctionCall","src":"13180:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13127:43:31"},"nodeType":"YulFunctionCall","src":"13127:71:31"},"nodeType":"YulExpressionStatement","src":"13127:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13252:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13265:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13276:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13261:3:31"},"nodeType":"YulFunctionCall","src":"13261:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13208:43:31"},"nodeType":"YulFunctionCall","src":"13208:72:31"},"nodeType":"YulExpressionStatement","src":"13208:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13334:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13347:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13358:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13343:3:31"},"nodeType":"YulFunctionCall","src":"13343:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13290:43:31"},"nodeType":"YulFunctionCall","src":"13290:72:31"},"nodeType":"YulExpressionStatement","src":"13290:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13037:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13049:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13057:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13065:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13076:4:31","type":""}],"src":"12927:442:31"},{"body":{"nodeType":"YulBlock","src":"13473:124:31","statements":[{"nodeType":"YulAssignment","src":"13483:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13495:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13506:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13491:3:31"},"nodeType":"YulFunctionCall","src":"13491:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13483:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13563:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13576:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13587:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13572:3:31"},"nodeType":"YulFunctionCall","src":"13572:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13519:43:31"},"nodeType":"YulFunctionCall","src":"13519:71:31"},"nodeType":"YulExpressionStatement","src":"13519:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13445:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13457:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13468:4:31","type":""}],"src":"13375:222:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001cb638038062001cb6833981810160405281019062000037919062000567565b828281600390816200004a91906200084c565b5080600490816200005c91906200084c565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d03382600a620000b4919062000ab6565b620f4240620000c4919062000b07565b620000d960201b60201c565b50505062000c5a565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200014e5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000145919062000b97565b60405180910390fd5b62000162600083836200016660201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001bc578060026000828254620001af919062000bb4565b9250508190555062000292565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200024b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620002429392919062000c00565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002dd57806002600082825403925050819055506200032a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000389919062000c3d565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ff82620003b4565b810181811067ffffffffffffffff82111715620004215762000420620003c5565b5b80604052505050565b60006200043662000396565b9050620004448282620003f4565b919050565b600067ffffffffffffffff821115620004675762000466620003c5565b5b6200047282620003b4565b9050602081019050919050565b60005b838110156200049f57808201518184015260208101905062000482565b60008484015250505050565b6000620004c2620004bc8462000449565b6200042a565b905082815260208101848484011115620004e157620004e0620003af565b5b620004ee8482856200047f565b509392505050565b600082601f8301126200050e576200050d620003aa565b5b815162000520848260208601620004ab565b91505092915050565b600060ff82169050919050565b620005418162000529565b81146200054d57600080fd5b50565b600081519050620005618162000536565b92915050565b600080600060608486031215620005835762000582620003a0565b5b600084015167ffffffffffffffff811115620005a457620005a3620003a5565b5b620005b286828701620004f6565b935050602084015167ffffffffffffffff811115620005d657620005d5620003a5565b5b620005e486828701620004f6565b9250506040620005f78682870162000550565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200065457607f821691505b6020821081036200066a57620006696200060c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006d47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000695565b620006e0868362000695565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200072d620007276200072184620006f8565b62000702565b620006f8565b9050919050565b6000819050919050565b62000749836200070c565b62000761620007588262000734565b848454620006a2565b825550505050565b600090565b6200077862000769565b620007858184846200073e565b505050565b5b81811015620007ad57620007a16000826200076e565b6001810190506200078b565b5050565b601f821115620007fc57620007c68162000670565b620007d18462000685565b81016020851015620007e1578190505b620007f9620007f08562000685565b8301826200078a565b50505b505050565b600082821c905092915050565b6000620008216000198460080262000801565b1980831691505092915050565b60006200083c83836200080e565b9150826002028217905092915050565b620008578262000601565b67ffffffffffffffff811115620008735762000872620003c5565b5b6200087f82546200063b565b6200088c828285620007b1565b600060209050601f831160018114620008c45760008415620008af578287015190505b620008bb85826200082e565b8655506200092b565b601f198416620008d48662000670565b60005b82811015620008fe57848901518255600182019150602085019450602081019050620008d7565b868310156200091e57848901516200091a601f8916826200080e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620009c15780860481111562000999576200099862000933565b5b6001851615620009a95780820291505b8081029050620009b98562000962565b945062000979565b94509492505050565b600082620009dc576001905062000aaf565b81620009ec576000905062000aaf565b816001811462000a05576002811462000a105762000a46565b600191505062000aaf565b60ff84111562000a255762000a2462000933565b5b8360020a91508482111562000a3f5762000a3e62000933565b5b5062000aaf565b5060208310610133831016604e8410600b841016171562000a805782820a90508381111562000a7a5762000a7962000933565b5b62000aaf565b62000a8f84848460016200096f565b9250905081840481111562000aa95762000aa862000933565b5b81810290505b9392505050565b600062000ac382620006f8565b915062000ad08362000529565b925062000aff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009ca565b905092915050565b600062000b1482620006f8565b915062000b2183620006f8565b925082820262000b3181620006f8565b9150828204841483151762000b4b5762000b4a62000933565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000b7f8262000b52565b9050919050565b62000b918162000b72565b82525050565b600060208201905062000bae600083018462000b86565b92915050565b600062000bc182620006f8565b915062000bce83620006f8565b925082820190508082111562000be95762000be862000933565b5b92915050565b62000bfa81620006f8565b82525050565b600060608201905062000c17600083018662000b86565b62000c26602083018562000bef565b62000c35604083018462000bef565b949350505050565b600060208201905062000c54600083018462000bef565b92915050565b61104c8062000c6a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461016857806370a08231146101845780638da5cb5b146101b457806395d89b41146101d2578063a9059cbb146101f0578063dd62ed3e14610220576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610250565b6040516100c39190610c34565b60405180910390f35b6100e660048036038101906100e19190610cef565b6102e2565b6040516100f39190610d4a565b60405180910390f35b6101046102f9565b6040516101119190610d74565b60405180910390f35b610134600480360381019061012f9190610d8f565b610303565b6040516101419190610d4a565b60405180910390f35b610152610332565b60405161015f9190610dfe565b60405180910390f35b610182600480360381019061017d9190610cef565b61033b565b005b61019e60048036038101906101999190610e19565b6103d9565b6040516101ab9190610d74565b60405180910390f35b6101bc610421565b6040516101c99190610e55565b60405180910390f35b6101da610447565b6040516101e79190610c34565b60405180910390f35b61020a60048036038101906102059190610cef565b6104d9565b6040516102179190610d4a565b60405180910390f35b61023a60048036038101906102359190610e70565b6104fc565b6040516102479190610d74565b60405180910390f35b60606003805461025f90610edf565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90610edf565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b60006102ef338484610583565b6001905092915050565b6000600254905090565b60008061030e610595565b905061031b85828561059d565b610326858585610632565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c290610f5c565b60405180910390fd5b6103d58282610726565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461045690610edf565b80601f016020809104026020016040519081016040528092919081815260200182805461048290610edf565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b5050505050905090565b6000806104e4610595565b90506104f1818585610632565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61059083838360016107a8565b505050565b600033905090565b60006105a984846104fc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561062c578181101561061c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061393929190610f7c565b60405180910390fd5b61062b848484840360006107a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a45760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069b9190610e55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107165760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161070d9190610e55565b60405180910390fd5b61072183838361097f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107985760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161078f9190610e55565b60405180910390fd5b6107a46000838361097f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361081a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108119190610e55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108839190610e55565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610979578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109709190610d74565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109d15780600260008282546109c59190610fe2565b92505081905550610aa4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a5d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a5493929190610f7c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aed5780600260008282540392505081905550610b3a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b979190610d74565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bde578082015181840152602081019050610bc3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c0682610ba4565b610c108185610baf565b9350610c20818560208601610bc0565b610c2981610bea565b840191505092915050565b60006020820190508181036000830152610c4e8184610bfb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8682610c5b565b9050919050565b610c9681610c7b565b8114610ca157600080fd5b50565b600081359050610cb381610c8d565b92915050565b6000819050919050565b610ccc81610cb9565b8114610cd757600080fd5b50565b600081359050610ce981610cc3565b92915050565b60008060408385031215610d0657610d05610c56565b5b6000610d1485828601610ca4565b9250506020610d2585828601610cda565b9150509250929050565b60008115159050919050565b610d4481610d2f565b82525050565b6000602082019050610d5f6000830184610d3b565b92915050565b610d6e81610cb9565b82525050565b6000602082019050610d896000830184610d65565b92915050565b600080600060608486031215610da857610da7610c56565b5b6000610db686828701610ca4565b9350506020610dc786828701610ca4565b9250506040610dd886828701610cda565b9150509250925092565b600060ff82169050919050565b610df881610de2565b82525050565b6000602082019050610e136000830184610def565b92915050565b600060208284031215610e2f57610e2e610c56565b5b6000610e3d84828501610ca4565b91505092915050565b610e4f81610c7b565b82525050565b6000602082019050610e6a6000830184610e46565b92915050565b60008060408385031215610e8757610e86610c56565b5b6000610e9585828601610ca4565b9250506020610ea685828601610ca4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ef757607f821691505b602082108103610f0a57610f09610eb0565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610f46600e83610baf565b9150610f5182610f10565b602082019050919050565b60006020820190508181036000830152610f7581610f39565b9050919050565b6000606082019050610f916000830186610e46565b610f9e6020830185610d65565b610fab6040830184610d65565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fed82610cb9565b9150610ff883610cb9565b92508282019050808211156110105761100f610fb3565b5b9291505056fea2646970667358221220447dbeb8ef11beae49afca7088bed1800a82fd8652f426d53b3b0de0bacf876764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CB6 CODESIZE SUB DUP1 PUSH3 0x1CB6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x567 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x84C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x84C JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xD0 CALLER DUP3 PUSH1 0xA PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0xAB6 JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0xB07 JUMP JUMPDEST PUSH3 0xD9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC5A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x14E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x145 SWAP2 SWAP1 PUSH3 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x162 PUSH1 0x0 DUP4 DUP4 PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1AF SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x292 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x24B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x242 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2DD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x32A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x389 SWAP2 SWAP1 PUSH3 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x3FF DUP3 PUSH3 0x3B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x421 JUMPI PUSH3 0x420 PUSH3 0x3C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x436 PUSH3 0x396 JUMP JUMPDEST SWAP1 POP PUSH3 0x444 DUP3 DUP3 PUSH3 0x3F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x467 JUMPI PUSH3 0x466 PUSH3 0x3C5 JUMP JUMPDEST JUMPDEST PUSH3 0x472 DUP3 PUSH3 0x3B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x49F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x482 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C2 PUSH3 0x4BC DUP5 PUSH3 0x449 JUMP JUMPDEST PUSH3 0x42A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x4E1 JUMPI PUSH3 0x4E0 PUSH3 0x3AF JUMP JUMPDEST JUMPDEST PUSH3 0x4EE DUP5 DUP3 DUP6 PUSH3 0x47F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x50E JUMPI PUSH3 0x50D PUSH3 0x3AA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x520 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x541 DUP2 PUSH3 0x529 JUMP JUMPDEST DUP2 EQ PUSH3 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x561 DUP2 PUSH3 0x536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x583 JUMPI PUSH3 0x582 PUSH3 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A4 JUMPI PUSH3 0x5A3 PUSH3 0x3A5 JUMP JUMPDEST JUMPDEST PUSH3 0x5B2 DUP7 DUP3 DUP8 ADD PUSH3 0x4F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5D6 JUMPI PUSH3 0x5D5 PUSH3 0x3A5 JUMP JUMPDEST JUMPDEST PUSH3 0x5E4 DUP7 DUP3 DUP8 ADD PUSH3 0x4F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x5F7 DUP7 DUP3 DUP8 ADD PUSH3 0x550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x654 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x66A JUMPI PUSH3 0x669 PUSH3 0x60C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x6D4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x695 JUMP JUMPDEST PUSH3 0x6E0 DUP7 DUP4 PUSH3 0x695 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x72D PUSH3 0x727 PUSH3 0x721 DUP5 PUSH3 0x6F8 JUMP JUMPDEST PUSH3 0x702 JUMP JUMPDEST PUSH3 0x6F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x749 DUP4 PUSH3 0x70C JUMP JUMPDEST PUSH3 0x761 PUSH3 0x758 DUP3 PUSH3 0x734 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6A2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x778 PUSH3 0x769 JUMP JUMPDEST PUSH3 0x785 DUP2 DUP5 DUP5 PUSH3 0x73E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7AD JUMPI PUSH3 0x7A1 PUSH1 0x0 DUP3 PUSH3 0x76E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x78B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x7FC JUMPI PUSH3 0x7C6 DUP2 PUSH3 0x670 JUMP JUMPDEST PUSH3 0x7D1 DUP5 PUSH3 0x685 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x7E1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x7F9 PUSH3 0x7F0 DUP6 PUSH3 0x685 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x78A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x821 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x801 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x83C DUP4 DUP4 PUSH3 0x80E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x857 DUP3 PUSH3 0x601 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x873 JUMPI PUSH3 0x872 PUSH3 0x3C5 JUMP JUMPDEST JUMPDEST PUSH3 0x87F DUP3 SLOAD PUSH3 0x63B JUMP JUMPDEST PUSH3 0x88C DUP3 DUP3 DUP6 PUSH3 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x8C4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x8AF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8BB DUP6 DUP3 PUSH3 0x82E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x92B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8D4 DUP7 PUSH3 0x670 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x8FE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8D7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x91E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x91A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x80E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x9C1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x999 JUMPI PUSH3 0x998 PUSH3 0x933 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x9A9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x9B9 DUP6 PUSH3 0x962 JUMP JUMPDEST SWAP5 POP PUSH3 0x979 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x9DC JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xAAF JUMP JUMPDEST DUP2 PUSH3 0x9EC JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xAAF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xA05 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xA10 JUMPI PUSH3 0xA46 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xAAF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA25 JUMPI PUSH3 0xA24 PUSH3 0x933 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xA3F JUMPI PUSH3 0xA3E PUSH3 0x933 JUMP JUMPDEST JUMPDEST POP PUSH3 0xAAF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xA80 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xA7A JUMPI PUSH3 0xA79 PUSH3 0x933 JUMP JUMPDEST JUMPDEST PUSH3 0xAAF JUMP JUMPDEST PUSH3 0xA8F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x96F JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xAA9 JUMPI PUSH3 0xAA8 PUSH3 0x933 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAC3 DUP3 PUSH3 0x6F8 JUMP JUMPDEST SWAP2 POP PUSH3 0xAD0 DUP4 PUSH3 0x529 JUMP JUMPDEST SWAP3 POP PUSH3 0xAFF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x9CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB14 DUP3 PUSH3 0x6F8 JUMP JUMPDEST SWAP2 POP PUSH3 0xB21 DUP4 PUSH3 0x6F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB31 DUP2 PUSH3 0x6F8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xB4B JUMPI PUSH3 0xB4A PUSH3 0x933 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB7F DUP3 PUSH3 0xB52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB91 DUP2 PUSH3 0xB72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBAE PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xBC1 DUP3 PUSH3 0x6F8 JUMP JUMPDEST SWAP2 POP PUSH3 0xBCE DUP4 PUSH3 0x6F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xBE9 JUMPI PUSH3 0xBE8 PUSH3 0x933 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBFA DUP2 PUSH3 0x6F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC17 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB86 JUMP JUMPDEST PUSH3 0xC26 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xBEF JUMP JUMPDEST PUSH3 0xC35 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xBEF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC54 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x104C DUP1 PUSH3 0xC6A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF CALLER DUP5 DUP5 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30E PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP6 DUP3 DUP6 PUSH2 0x59D JUMP JUMPDEST PUSH2 0x326 DUP6 DUP6 DUP6 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D5 DUP3 DUP3 PUSH2 0x726 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E4 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP5 DUP5 PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x62C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x61C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0x97F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x798 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x97F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x979 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA5D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAED JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB3A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBDE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xC10 DUP2 DUP6 PUSH2 0xBAF JUMP JUMPDEST SWAP4 POP PUSH2 0xC20 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC4E DUP2 DUP5 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC86 DUP3 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP2 EQ PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB3 DUP2 PUSH2 0xC8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCC DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD05 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD14 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD25 DUP6 DUP3 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6E DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA8 JUMPI PUSH2 0xDA7 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP7 DUP3 DUP8 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC7 DUP7 DUP3 DUP8 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD8 DUP7 DUP3 DUP8 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3D DUP5 DUP3 DUP6 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE4F DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE95 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEF7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xEB0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF46 PUSH1 0xE DUP4 PUSH2 0xBAF JUMP JUMPDEST SWAP2 POP PUSH2 0xF51 DUP3 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF91 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0xF9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFED DUP3 PUSH2 0xCB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF8 DUP4 PUSH2 0xCB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1010 JUMPI PUSH2 0x100F PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH30 0xBEB8EF11BEAE49AFCA7088BED1800A82FD8652F426D53B3B0DE0BACF8767 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"115:617:30:-:0;;;176:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;252:4;258:6;1675:5:7;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;284:10:30::1;276:5;;:18;;;;;;;;;;;;;;;;;;304:41;310:10;336:8;332:2;:12;;;;:::i;:::-;322:7;:22;;;;:::i;:::-;304:5;;;:41;;:::i;:::-;176:204:::0;;;115:617;;7458:208:7;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:86::-;2712:7;2752:4;2745:5;2741:16;2730:27;;2677:86;;;:::o;2769:118::-;2840:22;2856:5;2840:22;:::i;:::-;2833:5;2830:33;2820:61;;2877:1;2874;2867:12;2820:61;2769:118;:::o;2893:139::-;2948:5;2979:6;2973:13;2964:22;;2995:31;3020:5;2995:31;:::i;:::-;2893:139;;;;:::o;3038:1005::-;3144:6;3152;3160;3209:2;3197:9;3188:7;3184:23;3180:32;3177:119;;;3215:79;;:::i;:::-;3177:119;3356:1;3345:9;3341:17;3335:24;3386:18;3378:6;3375:30;3372:117;;;3408:79;;:::i;:::-;3372:117;3513:74;3579:7;3570:6;3559:9;3555:22;3513:74;:::i;:::-;3503:84;;3306:291;3657:2;3646:9;3642:18;3636:25;3688:18;3680:6;3677:30;3674:117;;;3710:79;;:::i;:::-;3674:117;3815:74;3881:7;3872:6;3861:9;3857:22;3815:74;:::i;:::-;3805:84;;3607:292;3938:2;3964:62;4018:7;4009:6;3998:9;3994:22;3964:62;:::i;:::-;3954:72;;3909:127;3038:1005;;;;;:::o;4049:99::-;4101:6;4135:5;4129:12;4119:22;;4049:99;;;:::o;4154:180::-;4202:77;4199:1;4192:88;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4340:320;4384:6;4421:1;4415:4;4411:12;4401:22;;4468:1;4462:4;4458:12;4489:18;4479:81;;4545:4;4537:6;4533:17;4523:27;;4479:81;4607:2;4599:6;4596:14;4576:18;4573:38;4570:84;;4626:18;;:::i;:::-;4570:84;4391:269;4340:320;;;:::o;4666:141::-;4715:4;4738:3;4730:11;;4761:3;4758:1;4751:14;4795:4;4792:1;4782:18;4774:26;;4666:141;;;:::o;4813:93::-;4850:6;4897:2;4892;4885:5;4881:14;4877:23;4867:33;;4813:93;;;:::o;4912:107::-;4956:8;5006:5;5000:4;4996:16;4975:37;;4912:107;;;;:::o;5025:393::-;5094:6;5144:1;5132:10;5128:18;5167:97;5197:66;5186:9;5167:97;:::i;:::-;5285:39;5315:8;5304:9;5285:39;:::i;:::-;5273:51;;5357:4;5353:9;5346:5;5342:21;5333:30;;5406:4;5396:8;5392:19;5385:5;5382:30;5372:40;;5101:317;;5025:393;;;;;:::o;5424:77::-;5461:7;5490:5;5479:16;;5424:77;;;:::o;5507:60::-;5535:3;5556:5;5549:12;;5507:60;;;:::o;5573:142::-;5623:9;5656:53;5674:34;5683:24;5701:5;5683:24;:::i;:::-;5674:34;:::i;:::-;5656:53;:::i;:::-;5643:66;;5573:142;;;:::o;5721:75::-;5764:3;5785:5;5778:12;;5721:75;;;:::o;5802:269::-;5912:39;5943:7;5912:39;:::i;:::-;5973:91;6022:41;6046:16;6022:41;:::i;:::-;6014:6;6007:4;6001:11;5973:91;:::i;:::-;5967:4;5960:105;5878:193;5802:269;;;:::o;6077:73::-;6122:3;6077:73;:::o;6156:189::-;6233:32;;:::i;:::-;6274:65;6332:6;6324;6318:4;6274:65;:::i;:::-;6209:136;6156:189;;:::o;6351:186::-;6411:120;6428:3;6421:5;6418:14;6411:120;;;6482:39;6519:1;6512:5;6482:39;:::i;:::-;6455:1;6448:5;6444:13;6435:22;;6411:120;;;6351:186;;:::o;6543:543::-;6644:2;6639:3;6636:11;6633:446;;;6678:38;6710:5;6678:38;:::i;:::-;6762:29;6780:10;6762:29;:::i;:::-;6752:8;6748:44;6945:2;6933:10;6930:18;6927:49;;;6966:8;6951:23;;6927:49;6989:80;7045:22;7063:3;7045:22;:::i;:::-;7035:8;7031:37;7018:11;6989:80;:::i;:::-;6648:431;;6633:446;6543:543;;;:::o;7092:117::-;7146:8;7196:5;7190:4;7186:16;7165:37;;7092:117;;;;:::o;7215:169::-;7259:6;7292:51;7340:1;7336:6;7328:5;7325:1;7321:13;7292:51;:::i;:::-;7288:56;7373:4;7367;7363:15;7353:25;;7266:118;7215:169;;;;:::o;7389:295::-;7465:4;7611:29;7636:3;7630:4;7611:29;:::i;:::-;7603:37;;7673:3;7670:1;7666:11;7660:4;7657:21;7649:29;;7389:295;;;;:::o;7689:1395::-;7806:37;7839:3;7806:37;:::i;:::-;7908:18;7900:6;7897:30;7894:56;;;7930:18;;:::i;:::-;7894:56;7974:38;8006:4;8000:11;7974:38;:::i;:::-;8059:67;8119:6;8111;8105:4;8059:67;:::i;:::-;8153:1;8177:4;8164:17;;8209:2;8201:6;8198:14;8226:1;8221:618;;;;8883:1;8900:6;8897:77;;;8949:9;8944:3;8940:19;8934:26;8925:35;;8897:77;9000:67;9060:6;9053:5;9000:67;:::i;:::-;8994:4;8987:81;8856:222;8191:887;;8221:618;8273:4;8269:9;8261:6;8257:22;8307:37;8339:4;8307:37;:::i;:::-;8366:1;8380:208;8394:7;8391:1;8388:14;8380:208;;;8473:9;8468:3;8464:19;8458:26;8450:6;8443:42;8524:1;8516:6;8512:14;8502:24;;8571:2;8560:9;8556:18;8543:31;;8417:4;8414:1;8410:12;8405:17;;8380:208;;;8616:6;8607:7;8604:19;8601:179;;;8674:9;8669:3;8665:19;8659:26;8717:48;8759:4;8751:6;8747:17;8736:9;8717:48;:::i;:::-;8709:6;8702:64;8624:156;8601:179;8826:1;8822;8814:6;8810:14;8806:22;8800:4;8793:36;8228:611;;;8191:887;;7781:1303;;;7689:1395;;:::o;9090:180::-;9138:77;9135:1;9128:88;9235:4;9232:1;9225:15;9259:4;9256:1;9249:15;9276:102;9318:8;9365:5;9362:1;9358:13;9337:34;;9276:102;;;:::o;9384:848::-;9445:5;9452:4;9476:6;9467:15;;9500:5;9491:14;;9514:712;9535:1;9525:8;9522:15;9514:712;;;9630:4;9625:3;9621:14;9615:4;9612:24;9609:50;;;9639:18;;:::i;:::-;9609:50;9689:1;9679:8;9675:16;9672:451;;;10104:4;10097:5;10093:16;10084:25;;9672:451;10154:4;10148;10144:15;10136:23;;10184:32;10207:8;10184:32;:::i;:::-;10172:44;;9514:712;;;9384:848;;;;;;;:::o;10238:1073::-;10292:5;10483:8;10473:40;;10504:1;10495:10;;10506:5;;10473:40;10532:4;10522:36;;10549:1;10540:10;;10551:5;;10522:36;10618:4;10666:1;10661:27;;;;10702:1;10697:191;;;;10611:277;;10661:27;10679:1;10670:10;;10681:5;;;10697:191;10742:3;10732:8;10729:17;10726:43;;;10749:18;;:::i;:::-;10726:43;10798:8;10795:1;10791:16;10782:25;;10833:3;10826:5;10823:14;10820:40;;;10840:18;;:::i;:::-;10820:40;10873:5;;;10611:277;;10997:2;10987:8;10984:16;10978:3;10972:4;10969:13;10965:36;10947:2;10937:8;10934:16;10929:2;10923:4;10920:12;10916:35;10900:111;10897:246;;;11053:8;11047:4;11043:19;11034:28;;11088:3;11081:5;11078:14;11075:40;;;11095:18;;:::i;:::-;11075:40;11128:5;;10897:246;11168:42;11206:3;11196:8;11190:4;11187:1;11168:42;:::i;:::-;11153:57;;;;11242:4;11237:3;11233:14;11226:5;11223:25;11220:51;;;11251:18;;:::i;:::-;11220:51;11300:4;11293:5;11289:16;11280:25;;10238:1073;;;;;;:::o;11317:281::-;11375:5;11399:23;11417:4;11399:23;:::i;:::-;11391:31;;11443:25;11459:8;11443:25;:::i;:::-;11431:37;;11487:104;11524:66;11514:8;11508:4;11487:104;:::i;:::-;11478:113;;11317:281;;;;:::o;11604:410::-;11644:7;11667:20;11685:1;11667:20;:::i;:::-;11662:25;;11701:20;11719:1;11701:20;:::i;:::-;11696:25;;11756:1;11753;11749:9;11778:30;11796:11;11778:30;:::i;:::-;11767:41;;11957:1;11948:7;11944:15;11941:1;11938:22;11918:1;11911:9;11891:83;11868:139;;11987:18;;:::i;:::-;11868:139;11652:362;11604:410;;;;:::o;12020:126::-;12057:7;12097:42;12090:5;12086:54;12075:65;;12020:126;;;:::o;12152:96::-;12189:7;12218:24;12236:5;12218:24;:::i;:::-;12207:35;;12152:96;;;:::o;12254:118::-;12341:24;12359:5;12341:24;:::i;:::-;12336:3;12329:37;12254:118;;:::o;12378:222::-;12471:4;12509:2;12498:9;12494:18;12486:26;;12522:71;12590:1;12579:9;12575:17;12566:6;12522:71;:::i;:::-;12378:222;;;;:::o;12606:191::-;12646:3;12665:20;12683:1;12665:20;:::i;:::-;12660:25;;12699:20;12717:1;12699:20;:::i;:::-;12694:25;;12742:1;12739;12735:9;12728:16;;12763:3;12760:1;12757:10;12754:36;;;12770:18;;:::i;:::-;12754:36;12606:191;;;;:::o;12803:118::-;12890:24;12908:5;12890:24;:::i;:::-;12885:3;12878:37;12803:118;;:::o;12927:442::-;13076:4;13114:2;13103:9;13099:18;13091:26;;13127:71;13195:1;13184:9;13180:17;13171:6;13127:71;:::i;:::-;13208:72;13276:2;13265:9;13261:18;13252:6;13208:72;:::i;:::-;13290;13358:2;13347:9;13343:18;13334:6;13290:72;:::i;:::-;12927:442;;;;;;:::o;13375:222::-;13468:4;13506:2;13495:9;13491:18;13483:26;;13519:71;13587:1;13576:9;13572:17;13563:6;13519:71;:::i;:::-;13375:222;;;;:::o;115:617:30:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1942":{"entryPoint":1411,"id":1942,"parameterSlots":3,"returnSlots":0},"@_approve_2002":{"entryPoint":1960,"id":2002,"parameterSlots":4,"returnSlots":0},"@_mint_1891":{"entryPoint":1830,"id":1891,"parameterSlots":2,"returnSlots":0},"@_msgSender_4274":{"entryPoint":1429,"id":4274,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2050":{"entryPoint":1437,"id":2050,"parameterSlots":3,"returnSlots":0},"@_transfer_1781":{"entryPoint":1586,"id":1781,"parameterSlots":3,"returnSlots":0},"@_update_1858":{"entryPoint":2431,"id":1858,"parameterSlots":3,"returnSlots":0},"@allowance_1678":{"entryPoint":1276,"id":1678,"parameterSlots":2,"returnSlots":1},"@approve_9847":{"entryPoint":738,"id":9847,"parameterSlots":2,"returnSlots":1},"@balanceOf_1637":{"entryPoint":985,"id":1637,"parameterSlots":1,"returnSlots":1},"@decimals_1615":{"entryPoint":818,"id":1615,"parameterSlots":0,"returnSlots":1},"@mint_9827":{"entryPoint":827,"id":9827,"parameterSlots":2,"returnSlots":0},"@name_1597":{"entryPoint":592,"id":1597,"parameterSlots":0,"returnSlots":1},"@owner_9777":{"entryPoint":1057,"id":9777,"parameterSlots":0,"returnSlots":0},"@symbol_1606":{"entryPoint":1095,"id":1606,"parameterSlots":0,"returnSlots":1},"@totalSupply_1624":{"entryPoint":761,"id":1624,"parameterSlots":0,"returnSlots":1},"@transferFrom_1734":{"entryPoint":771,"id":1734,"parameterSlots":3,"returnSlots":1},"@transfer_1661":{"entryPoint":1241,"id":1661,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3696,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3471,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3311,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3654,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3387,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack":{"entryPoint":3897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3964,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2991,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4066,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3195,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3257,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3008,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3807,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4019,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3760,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3158,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3050,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36":{"entryPoint":3856,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3213,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8327:31","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:31","statements":[{"nodeType":"YulAssignment","src":"77:22:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:31"},"nodeType":"YulFunctionCall","src":"87:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:31","type":""}],"src":"7:99:31"},{"body":{"nodeType":"YulBlock","src":"208:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:31"},"nodeType":"YulFunctionCall","src":"218:19:31"},"nodeType":"YulExpressionStatement","src":"218:19:31"},{"nodeType":"YulAssignment","src":"246:29:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:31"},"nodeType":"YulFunctionCall","src":"261:14:31"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:31","type":""}],"src":"112:169:31"},{"body":{"nodeType":"YulBlock","src":"349:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:31"},"nodeType":"YulFunctionCall","src":"449:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:31"},"nodeType":"YulFunctionCall","src":"468:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:31"},"nodeType":"YulFunctionCall","src":"462:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:31"},"nodeType":"YulFunctionCall","src":"442:39:31"},"nodeType":"YulExpressionStatement","src":"442:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:31"},"nodeType":"YulFunctionCall","src":"386:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:31","statements":[{"nodeType":"YulAssignment","src":"402:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:31"},"nodeType":"YulFunctionCall","src":"407:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:31","statements":[]},"src":"378:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:31"},"nodeType":"YulFunctionCall","src":"507:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:31"},"nodeType":"YulFunctionCall","src":"500:27:31"},"nodeType":"YulExpressionStatement","src":"500:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:31","type":""}],"src":"287:246:31"},{"body":{"nodeType":"YulBlock","src":"587:54:31","statements":[{"nodeType":"YulAssignment","src":"597:38:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:31"},"nodeType":"YulFunctionCall","src":"611:14:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:31"},"nodeType":"YulFunctionCall","src":"627:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:31"},"nodeType":"YulFunctionCall","src":"607:28:31"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:31"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:31","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:31","type":""}],"src":"539:102:31"},{"body":{"nodeType":"YulBlock","src":"739:285:31","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:31"},"nodeType":"YulFunctionCall","src":"763:39:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:31","type":""}]},{"nodeType":"YulAssignment","src":"811:78:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:31"},"nodeType":"YulFunctionCall","src":"818:71:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:31"},"nodeType":"YulFunctionCall","src":"933:16:31"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:31"},"nodeType":"YulFunctionCall","src":"898:65:31"},"nodeType":"YulExpressionStatement","src":"898:65:31"},{"nodeType":"YulAssignment","src":"972:46:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:31"},"nodeType":"YulFunctionCall","src":"988:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:31"},"nodeType":"YulFunctionCall","src":"979:39:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:31","type":""}],"src":"647:377:31"},{"body":{"nodeType":"YulBlock","src":"1148:195:31","statements":[{"nodeType":"YulAssignment","src":"1158:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:31"},"nodeType":"YulFunctionCall","src":"1166:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:31"},"nodeType":"YulFunctionCall","src":"1201:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:31"},"nodeType":"YulFunctionCall","src":"1220:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:31"},"nodeType":"YulFunctionCall","src":"1194:47:31"},"nodeType":"YulExpressionStatement","src":"1194:47:31"},{"nodeType":"YulAssignment","src":"1250:86:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:31"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:31"},"nodeType":"YulFunctionCall","src":"1258:78:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:31","type":""}],"src":"1030:313:31"},{"body":{"nodeType":"YulBlock","src":"1389:35:31","statements":[{"nodeType":"YulAssignment","src":"1399:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:31"},"nodeType":"YulFunctionCall","src":"1409:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:31"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:31","type":""}],"src":"1349:75:31"},{"body":{"nodeType":"YulBlock","src":"1519:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:31"},"nodeType":"YulFunctionCall","src":"1529:12:31"},"nodeType":"YulExpressionStatement","src":"1529:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:31"},{"body":{"nodeType":"YulBlock","src":"1642:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:31"},"nodeType":"YulFunctionCall","src":"1652:12:31"},"nodeType":"YulExpressionStatement","src":"1652:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:31"},{"body":{"nodeType":"YulBlock","src":"1721:81:31","statements":[{"nodeType":"YulAssignment","src":"1731:65:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:31"},"nodeType":"YulFunctionCall","src":"1742:54:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:31"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:31","type":""}],"src":"1676:126:31"},{"body":{"nodeType":"YulBlock","src":"1853:51:31","statements":[{"nodeType":"YulAssignment","src":"1863:35:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:31"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:31"},"nodeType":"YulFunctionCall","src":"1874:24:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:31"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:31","type":""}],"src":"1808:96:31"},{"body":{"nodeType":"YulBlock","src":"1953:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:31"},"nodeType":"YulFunctionCall","src":"2012:12:31"},"nodeType":"YulExpressionStatement","src":"2012:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:31"},"nodeType":"YulFunctionCall","src":"1983:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:31"},"nodeType":"YulFunctionCall","src":"1973:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:31"},"nodeType":"YulFunctionCall","src":"1966:43:31"},"nodeType":"YulIf","src":"1963:63:31"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:31","type":""}],"src":"1910:122:31"},{"body":{"nodeType":"YulBlock","src":"2090:87:31","statements":[{"nodeType":"YulAssignment","src":"2100:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:31"},"nodeType":"YulFunctionCall","src":"2109:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:31"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:31"},"nodeType":"YulFunctionCall","src":"2138:33:31"},"nodeType":"YulExpressionStatement","src":"2138:33:31"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:31","type":""}],"src":"2038:139:31"},{"body":{"nodeType":"YulBlock","src":"2228:32:31","statements":[{"nodeType":"YulAssignment","src":"2238:16:31","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:31"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:31","type":""}],"src":"2183:77:31"},{"body":{"nodeType":"YulBlock","src":"2309:79:31","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:31"},"nodeType":"YulFunctionCall","src":"2368:12:31"},"nodeType":"YulExpressionStatement","src":"2368:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:31"},"nodeType":"YulFunctionCall","src":"2339:24:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:31"},"nodeType":"YulFunctionCall","src":"2329:35:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:31"},"nodeType":"YulFunctionCall","src":"2322:43:31"},"nodeType":"YulIf","src":"2319:63:31"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:31","type":""}],"src":"2266:122:31"},{"body":{"nodeType":"YulBlock","src":"2446:87:31","statements":[{"nodeType":"YulAssignment","src":"2456:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:31"},"nodeType":"YulFunctionCall","src":"2465:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:31"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:31"},"nodeType":"YulFunctionCall","src":"2494:33:31"},"nodeType":"YulExpressionStatement","src":"2494:33:31"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:31","type":""}],"src":"2394:139:31"},{"body":{"nodeType":"YulBlock","src":"2622:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:31"},"nodeType":"YulFunctionCall","src":"2670:79:31"},"nodeType":"YulExpressionStatement","src":"2670:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:31"},"nodeType":"YulFunctionCall","src":"2639:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:31"},"nodeType":"YulFunctionCall","src":"2635:32:31"},"nodeType":"YulIf","src":"2632:119:31"},{"nodeType":"YulBlock","src":"2761:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:31"},"nodeType":"YulFunctionCall","src":"2836:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:31"},"nodeType":"YulFunctionCall","src":"2815:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:31"}]}]},{"nodeType":"YulBlock","src":"2888:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:31"},"nodeType":"YulFunctionCall","src":"2964:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:31"},"nodeType":"YulFunctionCall","src":"2943:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:31","type":""}],"src":"2539:474:31"},{"body":{"nodeType":"YulBlock","src":"3061:48:31","statements":[{"nodeType":"YulAssignment","src":"3071:32:31","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:31"},"nodeType":"YulFunctionCall","src":"3089:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:31"},"nodeType":"YulFunctionCall","src":"3082:21:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:31"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:31","type":""}],"src":"3019:90:31"},{"body":{"nodeType":"YulBlock","src":"3174:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:31"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:31"},"nodeType":"YulFunctionCall","src":"3196:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:31"},"nodeType":"YulFunctionCall","src":"3184:34:31"},"nodeType":"YulExpressionStatement","src":"3184:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:31","type":""}],"src":"3115:109:31"},{"body":{"nodeType":"YulBlock","src":"3322:118:31","statements":[{"nodeType":"YulAssignment","src":"3332:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:31"},"nodeType":"YulFunctionCall","src":"3340:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:31"},"nodeType":"YulFunctionCall","src":"3415:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:31"},"nodeType":"YulFunctionCall","src":"3368:65:31"},"nodeType":"YulExpressionStatement","src":"3368:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:31","type":""}],"src":"3230:210:31"},{"body":{"nodeType":"YulBlock","src":"3511:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:31"},"nodeType":"YulFunctionCall","src":"3533:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:31"},"nodeType":"YulFunctionCall","src":"3521:37:31"},"nodeType":"YulExpressionStatement","src":"3521:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:31","type":""}],"src":"3446:118:31"},{"body":{"nodeType":"YulBlock","src":"3668:124:31","statements":[{"nodeType":"YulAssignment","src":"3678:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:31"},"nodeType":"YulFunctionCall","src":"3686:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:31"},"nodeType":"YulFunctionCall","src":"3767:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:31"},"nodeType":"YulFunctionCall","src":"3714:71:31"},"nodeType":"YulExpressionStatement","src":"3714:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:31","type":""}],"src":"3570:222:31"},{"body":{"nodeType":"YulBlock","src":"3898:519:31","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:31"},"nodeType":"YulFunctionCall","src":"3946:79:31"},"nodeType":"YulExpressionStatement","src":"3946:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:31"},"nodeType":"YulFunctionCall","src":"3915:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:31"},"nodeType":"YulFunctionCall","src":"3911:32:31"},"nodeType":"YulIf","src":"3908:119:31"},{"nodeType":"YulBlock","src":"4037:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:31"},"nodeType":"YulFunctionCall","src":"4112:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:31"},"nodeType":"YulFunctionCall","src":"4091:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:31"}]}]},{"nodeType":"YulBlock","src":"4164:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:31"},"nodeType":"YulFunctionCall","src":"4240:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:31"},"nodeType":"YulFunctionCall","src":"4219:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:31"}]}]},{"nodeType":"YulBlock","src":"4292:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:31","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:31","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:31"},"nodeType":"YulFunctionCall","src":"4368:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:31"},"nodeType":"YulFunctionCall","src":"4347:53:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:31","type":""}],"src":"3798:619:31"},{"body":{"nodeType":"YulBlock","src":"4466:43:31","statements":[{"nodeType":"YulAssignment","src":"4476:27:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:31"},"nodeType":"YulFunctionCall","src":"4487:16:31"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:31"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:31","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:31","type":""}],"src":"4423:86:31"},{"body":{"nodeType":"YulBlock","src":"4576:51:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:31"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:31"},"nodeType":"YulFunctionCall","src":"4598:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:31"},"nodeType":"YulFunctionCall","src":"4586:35:31"},"nodeType":"YulExpressionStatement","src":"4586:35:31"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:31","type":""}],"src":"4515:112:31"},{"body":{"nodeType":"YulBlock","src":"4727:120:31","statements":[{"nodeType":"YulAssignment","src":"4737:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:31"},"nodeType":"YulFunctionCall","src":"4745:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:31"},"nodeType":"YulFunctionCall","src":"4822:17:31"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:31"},"nodeType":"YulFunctionCall","src":"4773:67:31"},"nodeType":"YulExpressionStatement","src":"4773:67:31"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:31","type":""}],"src":"4633:214:31"},{"body":{"nodeType":"YulBlock","src":"4919:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:31"},"nodeType":"YulFunctionCall","src":"4967:79:31"},"nodeType":"YulExpressionStatement","src":"4967:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:31"},"nodeType":"YulFunctionCall","src":"4936:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:31"},"nodeType":"YulFunctionCall","src":"4932:32:31"},"nodeType":"YulIf","src":"4929:119:31"},{"nodeType":"YulBlock","src":"5058:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:31"},"nodeType":"YulFunctionCall","src":"5133:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:31"},"nodeType":"YulFunctionCall","src":"5112:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:31","type":""}],"src":"4853:329:31"},{"body":{"nodeType":"YulBlock","src":"5253:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5270:3:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5293:5:31"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5275:17:31"},"nodeType":"YulFunctionCall","src":"5275:24:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:31"},"nodeType":"YulFunctionCall","src":"5263:37:31"},"nodeType":"YulExpressionStatement","src":"5263:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5248:3:31","type":""}],"src":"5188:118:31"},{"body":{"nodeType":"YulBlock","src":"5410:124:31","statements":[{"nodeType":"YulAssignment","src":"5420:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5443:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:31"},"nodeType":"YulFunctionCall","src":"5428:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5420:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5500:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5524:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:31"},"nodeType":"YulFunctionCall","src":"5509:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5456:43:31"},"nodeType":"YulFunctionCall","src":"5456:71:31"},"nodeType":"YulExpressionStatement","src":"5456:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5382:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5394:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5405:4:31","type":""}],"src":"5312:222:31"},{"body":{"nodeType":"YulBlock","src":"5623:391:31","statements":[{"body":{"nodeType":"YulBlock","src":"5669:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5671:77:31"},"nodeType":"YulFunctionCall","src":"5671:79:31"},"nodeType":"YulExpressionStatement","src":"5671:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:31"},"nodeType":"YulFunctionCall","src":"5640:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5665:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5636:3:31"},"nodeType":"YulFunctionCall","src":"5636:32:31"},"nodeType":"YulIf","src":"5633:119:31"},{"nodeType":"YulBlock","src":"5762:117:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5777:15:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5791:1:31","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5781:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5806:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5841:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5852:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5837:3:31"},"nodeType":"YulFunctionCall","src":"5837:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5861:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5816:20:31"},"nodeType":"YulFunctionCall","src":"5816:53:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5806:6:31"}]}]},{"nodeType":"YulBlock","src":"5889:118:31","statements":[{"nodeType":"YulVariableDeclaration","src":"5904:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"5918:2:31","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5908:6:31","type":""}]},{"nodeType":"YulAssignment","src":"5934:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5980:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5965:3:31"},"nodeType":"YulFunctionCall","src":"5965:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5989:7:31"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5944:20:31"},"nodeType":"YulFunctionCall","src":"5944:53:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5934:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5585:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5596:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5608:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5616:6:31","type":""}],"src":"5540:474:31"},{"body":{"nodeType":"YulBlock","src":"6048:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6065:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6068:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:31"},"nodeType":"YulFunctionCall","src":"6058:88:31"},"nodeType":"YulExpressionStatement","src":"6058:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6162:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6165:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6155:6:31"},"nodeType":"YulFunctionCall","src":"6155:15:31"},"nodeType":"YulExpressionStatement","src":"6155:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6186:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6189:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6179:6:31"},"nodeType":"YulFunctionCall","src":"6179:15:31"},"nodeType":"YulExpressionStatement","src":"6179:15:31"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6020:180:31"},{"body":{"nodeType":"YulBlock","src":"6257:269:31","statements":[{"nodeType":"YulAssignment","src":"6267:22:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6281:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"6287:1:31","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6277:3:31"},"nodeType":"YulFunctionCall","src":"6277:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6267:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"6298:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6328:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"6334:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6324:3:31"},"nodeType":"YulFunctionCall","src":"6324:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6302:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6375:51:31","statements":[{"nodeType":"YulAssignment","src":"6389:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6403:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6399:3:31"},"nodeType":"YulFunctionCall","src":"6399:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6389:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6355:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6348:6:31"},"nodeType":"YulFunctionCall","src":"6348:26:31"},"nodeType":"YulIf","src":"6345:81:31"},{"body":{"nodeType":"YulBlock","src":"6478:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6492:16:31"},"nodeType":"YulFunctionCall","src":"6492:18:31"},"nodeType":"YulExpressionStatement","src":"6492:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6442:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6465:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6462:2:31"},"nodeType":"YulFunctionCall","src":"6462:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6439:2:31"},"nodeType":"YulFunctionCall","src":"6439:38:31"},"nodeType":"YulIf","src":"6436:84:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6241:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6250:6:31","type":""}],"src":"6206:320:31"},{"body":{"nodeType":"YulBlock","src":"6638:58:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6660:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6668:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6656:3:31"},"nodeType":"YulFunctionCall","src":"6656:14:31"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"6672:16:31","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6649:6:31"},"nodeType":"YulFunctionCall","src":"6649:40:31"},"nodeType":"YulExpressionStatement","src":"6649:40:31"}]},"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6630:6:31","type":""}],"src":"6532:164:31"},{"body":{"nodeType":"YulBlock","src":"6848:220:31","statements":[{"nodeType":"YulAssignment","src":"6858:74:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6924:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:31","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6865:58:31"},"nodeType":"YulFunctionCall","src":"6865:67:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6858:3:31"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7030:3:31"}],"functionName":{"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulIdentifier","src":"6941:88:31"},"nodeType":"YulFunctionCall","src":"6941:93:31"},"nodeType":"YulExpressionStatement","src":"6941:93:31"},{"nodeType":"YulAssignment","src":"7043:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7054:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7059:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7050:3:31"},"nodeType":"YulFunctionCall","src":"7050:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7043:3:31"}]}]},"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6836:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6844:3:31","type":""}],"src":"6702:366:31"},{"body":{"nodeType":"YulBlock","src":"7245:248:31","statements":[{"nodeType":"YulAssignment","src":"7255:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7267:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7278:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7263:3:31"},"nodeType":"YulFunctionCall","src":"7263:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7255:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7302:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7313:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7298:3:31"},"nodeType":"YulFunctionCall","src":"7298:17:31"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7321:4:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"7327:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7317:3:31"},"nodeType":"YulFunctionCall","src":"7317:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7291:6:31"},"nodeType":"YulFunctionCall","src":"7291:47:31"},"nodeType":"YulExpressionStatement","src":"7291:47:31"},{"nodeType":"YulAssignment","src":"7347:139:31","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7481:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7355:124:31"},"nodeType":"YulFunctionCall","src":"7355:131:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7347:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7225:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7240:4:31","type":""}],"src":"7074:419:31"},{"body":{"nodeType":"YulBlock","src":"7653:288:31","statements":[{"nodeType":"YulAssignment","src":"7663:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7675:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7686:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7671:3:31"},"nodeType":"YulFunctionCall","src":"7671:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7663:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7743:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7756:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7767:1:31","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7752:3:31"},"nodeType":"YulFunctionCall","src":"7752:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7699:43:31"},"nodeType":"YulFunctionCall","src":"7699:71:31"},"nodeType":"YulExpressionStatement","src":"7699:71:31"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7824:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7848:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:31"},"nodeType":"YulFunctionCall","src":"7833:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7780:43:31"},"nodeType":"YulFunctionCall","src":"7780:72:31"},"nodeType":"YulExpressionStatement","src":"7780:72:31"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7906:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7919:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7930:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7915:3:31"},"nodeType":"YulFunctionCall","src":"7915:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7862:43:31"},"nodeType":"YulFunctionCall","src":"7862:72:31"},"nodeType":"YulExpressionStatement","src":"7862:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7609:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7621:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7629:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7637:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7648:4:31","type":""}],"src":"7499:442:31"},{"body":{"nodeType":"YulBlock","src":"7975:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7992:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7995:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7985:6:31"},"nodeType":"YulFunctionCall","src":"7985:88:31"},"nodeType":"YulExpressionStatement","src":"7985:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8089:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8092:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8082:6:31"},"nodeType":"YulFunctionCall","src":"8082:15:31"},"nodeType":"YulExpressionStatement","src":"8082:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8113:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8116:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8106:6:31"},"nodeType":"YulFunctionCall","src":"8106:15:31"},"nodeType":"YulExpressionStatement","src":"8106:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7947:180:31"},{"body":{"nodeType":"YulBlock","src":"8177:147:31","statements":[{"nodeType":"YulAssignment","src":"8187:25:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8210:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8192:17:31"},"nodeType":"YulFunctionCall","src":"8192:20:31"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8187:1:31"}]},{"nodeType":"YulAssignment","src":"8221:25:31","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8244:1:31"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8226:17:31"},"nodeType":"YulFunctionCall","src":"8226:20:31"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8221:1:31"}]},{"nodeType":"YulAssignment","src":"8255:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8266:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"8269:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:31"},"nodeType":"YulFunctionCall","src":"8262:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8255:3:31"}]},{"body":{"nodeType":"YulBlock","src":"8295:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8297:16:31"},"nodeType":"YulFunctionCall","src":"8297:18:31"},"nodeType":"YulExpressionStatement","src":"8297:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8287:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"8290:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8284:2:31"},"nodeType":"YulFunctionCall","src":"8284:10:31"},"nodeType":"YulIf","src":"8281:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8164:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"8167:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8173:3:31","type":""}],"src":"8133:191:31"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461016857806370a08231146101845780638da5cb5b146101b457806395d89b41146101d2578063a9059cbb146101f0578063dd62ed3e14610220576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610250565b6040516100c39190610c34565b60405180910390f35b6100e660048036038101906100e19190610cef565b6102e2565b6040516100f39190610d4a565b60405180910390f35b6101046102f9565b6040516101119190610d74565b60405180910390f35b610134600480360381019061012f9190610d8f565b610303565b6040516101419190610d4a565b60405180910390f35b610152610332565b60405161015f9190610dfe565b60405180910390f35b610182600480360381019061017d9190610cef565b61033b565b005b61019e60048036038101906101999190610e19565b6103d9565b6040516101ab9190610d74565b60405180910390f35b6101bc610421565b6040516101c99190610e55565b60405180910390f35b6101da610447565b6040516101e79190610c34565b60405180910390f35b61020a60048036038101906102059190610cef565b6104d9565b6040516102179190610d4a565b60405180910390f35b61023a60048036038101906102359190610e70565b6104fc565b6040516102479190610d74565b60405180910390f35b60606003805461025f90610edf565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90610edf565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b60006102ef338484610583565b6001905092915050565b6000600254905090565b60008061030e610595565b905061031b85828561059d565b610326858585610632565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c290610f5c565b60405180910390fd5b6103d58282610726565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461045690610edf565b80601f016020809104026020016040519081016040528092919081815260200182805461048290610edf565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b5050505050905090565b6000806104e4610595565b90506104f1818585610632565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61059083838360016107a8565b505050565b600033905090565b60006105a984846104fc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561062c578181101561061c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061393929190610f7c565b60405180910390fd5b61062b848484840360006107a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a45760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069b9190610e55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107165760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161070d9190610e55565b60405180910390fd5b61072183838361097f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107985760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161078f9190610e55565b60405180910390fd5b6107a46000838361097f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361081a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108119190610e55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108839190610e55565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610979578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109709190610d74565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109d15780600260008282546109c59190610fe2565b92505081905550610aa4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a5d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a5493929190610f7c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aed5780600260008282540392505081905550610b3a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b979190610d74565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bde578082015181840152602081019050610bc3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c0682610ba4565b610c108185610baf565b9350610c20818560208601610bc0565b610c2981610bea565b840191505092915050565b60006020820190508181036000830152610c4e8184610bfb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8682610c5b565b9050919050565b610c9681610c7b565b8114610ca157600080fd5b50565b600081359050610cb381610c8d565b92915050565b6000819050919050565b610ccc81610cb9565b8114610cd757600080fd5b50565b600081359050610ce981610cc3565b92915050565b60008060408385031215610d0657610d05610c56565b5b6000610d1485828601610ca4565b9250506020610d2585828601610cda565b9150509250929050565b60008115159050919050565b610d4481610d2f565b82525050565b6000602082019050610d5f6000830184610d3b565b92915050565b610d6e81610cb9565b82525050565b6000602082019050610d896000830184610d65565b92915050565b600080600060608486031215610da857610da7610c56565b5b6000610db686828701610ca4565b9350506020610dc786828701610ca4565b9250506040610dd886828701610cda565b9150509250925092565b600060ff82169050919050565b610df881610de2565b82525050565b6000602082019050610e136000830184610def565b92915050565b600060208284031215610e2f57610e2e610c56565b5b6000610e3d84828501610ca4565b91505092915050565b610e4f81610c7b565b82525050565b6000602082019050610e6a6000830184610e46565b92915050565b60008060408385031215610e8757610e86610c56565b5b6000610e9585828601610ca4565b9250506020610ea685828601610ca4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ef757607f821691505b602082108103610f0a57610f09610eb0565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610f46600e83610baf565b9150610f5182610f10565b602082019050919050565b60006020820190508181036000830152610f7581610f39565b9050919050565b6000606082019050610f916000830186610e46565b610f9e6020830185610d65565b610fab6040830184610d65565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fed82610cb9565b9150610ff883610cb9565b92508282019050808211156110105761100f610fb3565b5b9291505056fea2646970667358221220447dbeb8ef11beae49afca7088bed1800a82fd8652f426d53b3b0de0bacf876764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE70 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF CALLER DUP5 DUP5 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30E PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP6 DUP3 DUP6 PUSH2 0x59D JUMP JUMPDEST PUSH2 0x326 DUP6 DUP6 DUP6 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D5 DUP3 DUP3 PUSH2 0x726 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0xEDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E4 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH2 0x4F1 DUP2 DUP6 DUP6 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x590 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP5 DUP5 PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x62C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x61C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x7A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0x97F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x798 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x97F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x979 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA5D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAED JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB3A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBDE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xC10 DUP2 DUP6 PUSH2 0xBAF JUMP JUMPDEST SWAP4 POP PUSH2 0xC20 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC4E DUP2 DUP5 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC86 DUP3 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP2 EQ PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB3 DUP2 PUSH2 0xC8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCC DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD05 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD14 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD25 DUP6 DUP3 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6E DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA8 JUMPI PUSH2 0xDA7 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP7 DUP3 DUP8 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC7 DUP7 DUP3 DUP8 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD8 DUP7 DUP3 DUP8 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE3D DUP5 DUP3 DUP6 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE4F DUP2 PUSH2 0xC7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE95 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xCA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEF7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xEB0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF46 PUSH1 0xE DUP4 PUSH2 0xBAF JUMP JUMPDEST SWAP2 POP PUSH2 0xF51 DUP3 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF91 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0xF9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xFAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFED DUP3 PUSH2 0xCB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF8 DUP4 PUSH2 0xCB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1010 JUMPI PUSH2 0x100F PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH30 0xBEB8EF11BEAE49AFCA7088BED1800A82FD8652F426D53B3B0DE0BACF8767 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"115:617:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;585:144:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:141:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;149:20:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;585:144:30:-;660:4;672:37;681:10;693:7;702:6;672:8;:37::i;:::-;722:4;715:11;;585:144;;;;:::o;2849:97:7:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;438:141:30:-;521:5;;;;;;;;;;;507:19;;:10;:19;;;499:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;555:17;561:2;565:6;555:5;:17::i;:::-;438:141;;:::o;3004:116:7:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;149:20:30:-;;;;;;;;;;;;;:::o;1981:93:7:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;10415:476:7:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:31:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:164::-;6672:16;6668:1;6660:6;6656:14;6649:40;6532:164;:::o;6702:366::-;6844:3;6865:67;6929:2;6924:3;6865:67;:::i;:::-;6858:74;;6941:93;7030:3;6941:93;:::i;:::-;7059:2;7054:3;7050:12;7043:19;;6702:366;;;:::o;7074:419::-;7240:4;7278:2;7267:9;7263:18;7255:26;;7327:9;7321:4;7317:20;7313:1;7302:9;7298:17;7291:47;7355:131;7481:4;7355:131;:::i;:::-;7347:139;;7074:419;;;:::o;7499:442::-;7648:4;7686:2;7675:9;7671:18;7663:26;;7699:71;7767:1;7756:9;7752:17;7743:6;7699:71;:::i;:::-;7780:72;7848:2;7837:9;7833:18;7824:6;7780:72;:::i;:::-;7862;7930:2;7919:9;7915:18;7906:6;7862:72;:::i;:::-;7499:442;;;;;;:::o;7947:180::-;7995:77;7992:1;7985:88;8092:4;8089:1;8082:15;8116:4;8113:1;8106:15;8133:191;8173:3;8192:20;8210:1;8192:20;:::i;:::-;8187:25;;8226:20;8244:1;8226:20;:::i;:::-;8221:25;;8269:1;8266;8262:9;8255:16;;8290:3;8287:1;8284:10;8281:36;;;8297:18;;:::i;:::-;8281:36;8133:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TestToken.sol\":{\"keccak256\":\"0x3259d7cc2898a7baecc1c862ec8b45fe53413fbfa750422fcab6e54b62952fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://440651667ad9075bcf1dea794877f04faf395edad72ab1d1401611e674777e6b\",\"dweb:/ipfs/QmU8fonRzMonsi3XJzS8ahaRCr1SbFCr8qNLeQcAmNX562\"]}},\"version\":1}"}}}}}